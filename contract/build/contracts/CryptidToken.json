{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_name",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_symbol",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_baseURI",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "_whitelistSupply",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_teamMintSupply",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_totalSaleSupply",
          "type": "uint256"
        },
        {
          "internalType": "uint8",
          "name": "_maxMintPerTx",
          "type": "uint8"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "approved",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "ApprovalForAll",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "Paused",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "Unpaused",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "uint8",
          "name": "mintAmount",
          "type": "uint8"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        }
      ],
      "name": "airdropCryptid",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "baseExtension",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "baseURI",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "claimed",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "freezeBaseURI",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "freezeProvenanceHash",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "getApproved",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getTokensLeft",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        }
      ],
      "name": "isApprovedForAll",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "lastMintAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "lastMintID",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "maxMintPerTx",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "merkleRoot",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "wlAddress",
          "type": "address"
        }
      ],
      "name": "overrideClaim",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "ownerOf",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "pause",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "paused",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "provenanceHash",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "provenanceHashFrozen",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint8",
          "name": "_mintAmount",
          "type": "uint8"
        }
      ],
      "name": "publicMint",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "_data",
          "type": "bytes"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "salePrice",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "setApprovalForAll",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_newBaseExtension",
          "type": "string"
        }
      ],
      "name": "setBaseExtension",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_newBaseURI",
          "type": "string"
        }
      ],
      "name": "setBaseURI",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint8",
          "name": "_newmaxMintPerTx",
          "type": "uint8"
        }
      ],
      "name": "setMaxMintPerTx",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "_merkleRoot",
          "type": "bytes32"
        }
      ],
      "name": "setMerkleRoot",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_provenanceHash",
          "type": "string"
        }
      ],
      "name": "setProvenanceHash",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_newSalePrice",
          "type": "uint256"
        }
      ],
      "name": "setPublicSalePrice",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "enum CryptidToken.Stage",
          "name": "_stage",
          "type": "uint8"
        }
      ],
      "name": "setStage",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_newTeamMintSupply",
          "type": "uint256"
        }
      ],
      "name": "setTeamMintSupply",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_withdrawlAddress",
          "type": "address"
        }
      ],
      "name": "setWithdrawlAddress",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "stage",
      "outputs": [
        {
          "internalType": "enum CryptidToken.Stage",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "interfaceId",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint8",
          "name": "_mintAmount",
          "type": "uint8"
        }
      ],
      "name": "teamMint",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "teamMintCount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "teamMintSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "tokenByIndex",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "tokenOfOwnerByIndex",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "tokenURI",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "tokenURIFrozen",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalSaleSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "unpause",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "walletOfOwner",
      "outputs": [
        {
          "internalType": "uint256[]",
          "name": "",
          "type": "uint256[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32[]",
          "name": "merkleProof",
          "type": "bytes32[]"
        }
      ],
      "name": "whitelistMint",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "whitelistSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "withdrawlAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "allSourcePaths": {
    "0": "/Users/chrisrussell/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.4.1/contracts/access/Ownable.sol",
    "1": "/Users/chrisrussell/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.4.1/contracts/security/Pausable.sol",
    "10": "/Users/chrisrussell/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.4.1/contracts/utils/Context.sol",
    "11": "/Users/chrisrussell/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.4.1/contracts/utils/Counters.sol",
    "12": "/Users/chrisrussell/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.4.1/contracts/utils/Strings.sol",
    "13": "/Users/chrisrussell/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.4.1/contracts/utils/cryptography/MerkleProof.sol",
    "14": "/Users/chrisrussell/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.4.1/contracts/utils/introspection/ERC165.sol",
    "15": "/Users/chrisrussell/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.4.1/contracts/utils/introspection/IERC165.sol",
    "16": "contracts/CryptidToken.sol",
    "2": "/Users/chrisrussell/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.4.1/contracts/security/ReentrancyGuard.sol",
    "3": "/Users/chrisrussell/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.4.1/contracts/token/ERC721/ERC721.sol",
    "4": "/Users/chrisrussell/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.4.1/contracts/token/ERC721/IERC721.sol",
    "6": "/Users/chrisrussell/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.4.1/contracts/token/ERC721/extensions/ERC721Enumerable.sol",
    "7": "/Users/chrisrussell/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.4.1/contracts/token/ERC721/extensions/IERC721Enumerable.sol",
    "8": "/Users/chrisrussell/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.4.1/contracts/token/ERC721/extensions/IERC721Metadata.sol"
  },
  "ast": {
    "absolutePath": "contracts/CryptidToken.sol",
    "exportedSymbols": {
      "Address": [
        2863
      ],
      "Context": [
        2405
      ],
      "Counters": [
        2295
      ],
      "CryptidToken": [
        815
      ],
      "ERC165": [
        3090
      ],
      "ERC721": [
        1883
      ],
      "ERC721Enumerable": [
        2221
      ],
      "IERC165": [
        3133
      ],
      "IERC721": [
        2521
      ],
      "IERC721Enumerable": [
        3121
      ],
      "IERC721Metadata": [
        2566
      ],
      "IERC721Receiver": [
        2539
      ],
      "MerkleProof": [
        2383
      ],
      "Ownable": [
        920
      ],
      "Pausable": [
        1012
      ],
      "ReentrancyGuard": [
        1052
      ],
      "Strings": [
        3066
      ]
    },
    "id": 816,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".10"
        ],
        "nodeType": "PragmaDirective",
        "src": "32:24:16"
      },
      {
        "absolutePath": "/Users/chrisrussell/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.4.1/contracts/token/ERC721/ERC721.sol",
        "file": "@openzeppelin/contracts/token/ERC721/ERC721.sol",
        "id": 2,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 816,
        "sourceUnit": 1884,
        "src": "58:57:16",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/chrisrussell/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.4.1/contracts/token/ERC721/extensions/ERC721Enumerable.sol",
        "file": "@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol",
        "id": 3,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 816,
        "sourceUnit": 2222,
        "src": "116:78:16",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/chrisrussell/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.4.1/contracts/access/Ownable.sol",
        "file": "@openzeppelin/contracts/access/Ownable.sol",
        "id": 4,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 816,
        "sourceUnit": 921,
        "src": "195:52:16",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/chrisrussell/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.4.1/contracts/security/ReentrancyGuard.sol",
        "file": "@openzeppelin/contracts/security/ReentrancyGuard.sol",
        "id": 5,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 816,
        "sourceUnit": 1053,
        "src": "248:62:16",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/chrisrussell/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.4.1/contracts/utils/Counters.sol",
        "file": "@openzeppelin/contracts/utils/Counters.sol",
        "id": 6,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 816,
        "sourceUnit": 2296,
        "src": "311:52:16",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/chrisrussell/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.4.1/contracts/security/Pausable.sol",
        "file": "@openzeppelin/contracts/security/Pausable.sol",
        "id": 7,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 816,
        "sourceUnit": 1013,
        "src": "364:55:16",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/chrisrussell/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.4.1/contracts/utils/cryptography/MerkleProof.sol",
        "file": "@openzeppelin/contracts/utils/cryptography/MerkleProof.sol",
        "id": 8,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 816,
        "sourceUnit": 2384,
        "src": "420:68:16",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 9,
              "name": "ERC721",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 1883,
              "src": "515:6:16"
            },
            "id": 10,
            "nodeType": "InheritanceSpecifier",
            "src": "515:6:16"
          },
          {
            "baseName": {
              "id": 11,
              "name": "ERC721Enumerable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 2221,
              "src": "523:16:16"
            },
            "id": 12,
            "nodeType": "InheritanceSpecifier",
            "src": "523:16:16"
          },
          {
            "baseName": {
              "id": 13,
              "name": "Pausable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 1012,
              "src": "541:8:16"
            },
            "id": 14,
            "nodeType": "InheritanceSpecifier",
            "src": "541:8:16"
          },
          {
            "baseName": {
              "id": 15,
              "name": "Ownable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 920,
              "src": "551:7:16"
            },
            "id": 16,
            "nodeType": "InheritanceSpecifier",
            "src": "551:7:16"
          },
          {
            "baseName": {
              "id": 17,
              "name": "ReentrancyGuard",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 1052,
              "src": "560:15:16"
            },
            "id": 18,
            "nodeType": "InheritanceSpecifier",
            "src": "560:15:16"
          }
        ],
        "canonicalName": "CryptidToken",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 815,
        "linearizedBaseContracts": [
          815,
          1052,
          920,
          1012,
          2221,
          3121,
          1883,
          2566,
          2521,
          3090,
          3133,
          2405
        ],
        "name": "CryptidToken",
        "nameLocation": "499:12:16",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 21,
            "libraryName": {
              "id": 19,
              "name": "Strings",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 3066,
              "src": "588:7:16"
            },
            "nodeType": "UsingForDirective",
            "src": "582:26:16",
            "typeName": {
              "id": 20,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "600:7:16",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "id": 25,
            "libraryName": {
              "id": 22,
              "name": "Counters",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 2295,
              "src": "619:8:16"
            },
            "nodeType": "UsingForDirective",
            "src": "613:36:16",
            "typeName": {
              "id": 24,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 23,
                "name": "Counters.Counter",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 2227,
                "src": "632:16:16"
              },
              "referencedDeclaration": 2227,
              "src": "632:16:16",
              "typeDescriptions": {
                "typeIdentifier": "t_struct$_Counter_$2227_storage_ptr",
                "typeString": "struct Counters.Counter"
              }
            }
          },
          {
            "id": 29,
            "libraryName": {
              "id": 26,
              "name": "MerkleProof",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 2383,
              "src": "660:11:16"
            },
            "nodeType": "UsingForDirective",
            "src": "654:32:16",
            "typeName": {
              "baseType": {
                "id": 27,
                "name": "bytes32",
                "nodeType": "ElementaryTypeName",
                "src": "676:7:16",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes32",
                  "typeString": "bytes32"
                }
              },
              "id": 28,
              "nodeType": "ArrayTypeName",
              "src": "676:9:16",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
                "typeString": "bytes32[]"
              }
            }
          },
          {
            "canonicalName": "CryptidToken.Stage",
            "id": 34,
            "members": [
              {
                "id": 30,
                "name": "Init",
                "nameLocation": "713:4:16",
                "nodeType": "EnumValue",
                "src": "713:4:16"
              },
              {
                "id": 31,
                "name": "Whitelist",
                "nameLocation": "727:9:16",
                "nodeType": "EnumValue",
                "src": "727:9:16"
              },
              {
                "id": 32,
                "name": "TeamMint",
                "nameLocation": "746:8:16",
                "nodeType": "EnumValue",
                "src": "746:8:16"
              },
              {
                "id": 33,
                "name": "PublicSale",
                "nameLocation": "764:10:16",
                "nodeType": "EnumValue",
                "src": "764:10:16"
              }
            ],
            "name": "Stage",
            "nameLocation": "697:5:16",
            "nodeType": "EnumDefinition",
            "src": "692:88:16"
          },
          {
            "constant": false,
            "id": 37,
            "mutability": "mutable",
            "name": "_tokenIdCounter",
            "nameLocation": "811:15:16",
            "nodeType": "VariableDeclaration",
            "scope": 815,
            "src": "786:40:16",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_struct$_Counter_$2227_storage",
              "typeString": "struct Counters.Counter"
            },
            "typeName": {
              "id": 36,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 35,
                "name": "Counters.Counter",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 2227,
                "src": "786:16:16"
              },
              "referencedDeclaration": 2227,
              "src": "786:16:16",
              "typeDescriptions": {
                "typeIdentifier": "t_struct$_Counter_$2227_storage_ptr",
                "typeString": "struct Counters.Counter"
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "functionSelector": "2eb4a7ab",
            "id": 39,
            "mutability": "mutable",
            "name": "merkleRoot",
            "nameLocation": "852:10:16",
            "nodeType": "VariableDeclaration",
            "scope": 815,
            "src": "837:25:16",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes32",
              "typeString": "bytes32"
            },
            "typeName": {
              "id": 38,
              "name": "bytes32",
              "nodeType": "ElementaryTypeName",
              "src": "837:7:16",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "c6ab67a3",
            "id": 41,
            "mutability": "mutable",
            "name": "provenanceHash",
            "nameLocation": "883:14:16",
            "nodeType": "VariableDeclaration",
            "scope": 815,
            "src": "869:28:16",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 40,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "869:6:16",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "6c0360eb",
            "id": 44,
            "mutability": "mutable",
            "name": "baseURI",
            "nameLocation": "917:7:16",
            "nodeType": "VariableDeclaration",
            "scope": 815,
            "src": "903:26:16",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 42,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "903:6:16",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "value": {
              "hexValue": "",
              "id": 43,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "string",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "927:2:16",
              "typeDescriptions": {
                "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                "typeString": "literal_string \"\""
              },
              "value": ""
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "c6682862",
            "id": 47,
            "mutability": "mutable",
            "name": "baseExtension",
            "nameLocation": "949:13:16",
            "nodeType": "VariableDeclaration",
            "scope": 815,
            "src": "935:37:16",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 45,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "935:6:16",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "value": {
              "hexValue": "2e6a736f6e",
              "id": 46,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "string",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "965:7:16",
              "typeDescriptions": {
                "typeIdentifier": "t_stringliteral_94311adc0a0cd4e10be11b23bd4316b8cffa4adf693e8f96f5c075aa439a7972",
                "typeString": "literal_string \".json\""
              },
              "value": ".json"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "de7fcb1d",
            "id": 49,
            "mutability": "mutable",
            "name": "maxMintPerTx",
            "nameLocation": "991:12:16",
            "nodeType": "VariableDeclaration",
            "scope": 815,
            "src": "978:25:16",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint8",
              "typeString": "uint8"
            },
            "typeName": {
              "id": 48,
              "name": "uint8",
              "nodeType": "ElementaryTypeName",
              "src": "978:5:16",
              "typeDescriptions": {
                "typeIdentifier": "t_uint8",
                "typeString": "uint8"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "c29de630",
            "id": 52,
            "mutability": "mutable",
            "name": "tokenURIFrozen",
            "nameLocation": "1026:14:16",
            "nodeType": "VariableDeclaration",
            "scope": 815,
            "src": "1014:34:16",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bool",
              "typeString": "bool"
            },
            "typeName": {
              "id": 50,
              "name": "bool",
              "nodeType": "ElementaryTypeName",
              "src": "1014:4:16",
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              }
            },
            "value": {
              "hexValue": "66616c7365",
              "id": 51,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "bool",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1043:5:16",
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              },
              "value": "false"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "9a2a9c3d",
            "id": 55,
            "mutability": "mutable",
            "name": "provenanceHashFrozen",
            "nameLocation": "1066:20:16",
            "nodeType": "VariableDeclaration",
            "scope": 815,
            "src": "1054:40:16",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bool",
              "typeString": "bool"
            },
            "typeName": {
              "id": 53,
              "name": "bool",
              "nodeType": "ElementaryTypeName",
              "src": "1054:4:16",
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              }
            },
            "value": {
              "hexValue": "66616c7365",
              "id": 54,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "bool",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1089:5:16",
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              },
              "value": "false"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "ffa9cd3b",
            "id": 58,
            "mutability": "mutable",
            "name": "withdrawlAddress",
            "nameLocation": "1116:16:16",
            "nodeType": "VariableDeclaration",
            "scope": 815,
            "src": "1101:76:16",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 56,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1101:7:16",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": {
              "hexValue": "307831393533626331664637366635653631634437373541343438326264383542416335366144314562",
              "id": 57,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1135:42:16",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              },
              "value": "0x1953bc1fF76f5e61cD775A4482bd85BAc56aD1Eb"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "33e61413",
            "id": 60,
            "mutability": "mutable",
            "name": "whitelistSupply",
            "nameLocation": "1357:15:16",
            "nodeType": "VariableDeclaration",
            "scope": 815,
            "src": "1342:30:16",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 59,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1342:7:16",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "c884ef83",
            "id": 64,
            "mutability": "mutable",
            "name": "claimed",
            "nameLocation": "1433:7:16",
            "nodeType": "VariableDeclaration",
            "scope": 815,
            "src": "1401:39:16",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
              "typeString": "mapping(address => bool)"
            },
            "typeName": {
              "id": 63,
              "keyType": {
                "id": 61,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1409:7:16",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "1401:24:16",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                "typeString": "mapping(address => bool)"
              },
              "valueType": {
                "id": 62,
                "name": "bool",
                "nodeType": "ElementaryTypeName",
                "src": "1420:4:16",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "c3214581",
            "id": 66,
            "mutability": "mutable",
            "name": "teamMintSupply",
            "nameLocation": "1507:14:16",
            "nodeType": "VariableDeclaration",
            "scope": 815,
            "src": "1492:29:16",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 65,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1492:7:16",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "088139a6",
            "id": 68,
            "mutability": "mutable",
            "name": "teamMintCount",
            "nameLocation": "1568:13:16",
            "nodeType": "VariableDeclaration",
            "scope": 815,
            "src": "1553:28:16",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 67,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1553:7:16",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "78231978",
            "id": 70,
            "mutability": "mutable",
            "name": "totalSaleSupply",
            "nameLocation": "1632:15:16",
            "nodeType": "VariableDeclaration",
            "scope": 815,
            "src": "1617:30:16",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 69,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1617:7:16",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "f51f96dd",
            "id": 73,
            "mutability": "mutable",
            "name": "salePrice",
            "nameLocation": "1677:9:16",
            "nodeType": "VariableDeclaration",
            "scope": 815,
            "src": "1662:36:16",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 71,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1662:7:16",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "302e31",
              "id": 72,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1689:9:16",
              "subdenomination": "ether",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_100000000000000000_by_1",
                "typeString": "int_const 100000000000000000"
              },
              "value": "0.1"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "c040e6b8",
            "id": 76,
            "mutability": "mutable",
            "name": "stage",
            "nameLocation": "1720:5:16",
            "nodeType": "VariableDeclaration",
            "scope": 815,
            "src": "1707:18:16",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_enum$_Stage_$34",
              "typeString": "enum CryptidToken.Stage"
            },
            "typeName": {
              "id": 75,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 74,
                "name": "Stage",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 34,
                "src": "1707:5:16"
              },
              "referencedDeclaration": 34,
              "src": "1707:5:16",
              "typeDescriptions": {
                "typeIdentifier": "t_enum$_Stage_$34",
                "typeString": "enum CryptidToken.Stage"
              }
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 122,
              "nodeType": "Block",
              "src": "1998:240:16",
              "statements": [
                {
                  "expression": {
                    "id": 99,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 97,
                      "name": "whitelistSupply",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 60,
                      "src": "2008:15:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 98,
                      "name": "_whitelistSupply",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 84,
                      "src": "2026:16:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2008:34:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 100,
                  "nodeType": "ExpressionStatement",
                  "src": "2008:34:16"
                },
                {
                  "expression": {
                    "id": 103,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 101,
                      "name": "teamMintSupply",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 66,
                      "src": "2052:14:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 102,
                      "name": "_teamMintSupply",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 86,
                      "src": "2069:15:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2052:32:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 104,
                  "nodeType": "ExpressionStatement",
                  "src": "2052:32:16"
                },
                {
                  "expression": {
                    "id": 107,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 105,
                      "name": "totalSaleSupply",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 70,
                      "src": "2094:15:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 106,
                      "name": "_totalSaleSupply",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 88,
                      "src": "2112:16:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2094:34:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 108,
                  "nodeType": "ExpressionStatement",
                  "src": "2094:34:16"
                },
                {
                  "expression": {
                    "id": 111,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 109,
                      "name": "maxMintPerTx",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 49,
                      "src": "2138:12:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 110,
                      "name": "_maxMintPerTx",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 90,
                      "src": "2153:13:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "src": "2138:28:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "id": 112,
                  "nodeType": "ExpressionStatement",
                  "src": "2138:28:16"
                },
                {
                  "expression": {
                    "id": 115,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 113,
                      "name": "baseURI",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 44,
                      "src": "2176:7:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 114,
                      "name": "_baseURI",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 82,
                      "src": "2186:8:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "2176:18:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 116,
                  "nodeType": "ExpressionStatement",
                  "src": "2176:18:16"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 117,
                        "name": "_tokenIdCounter",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 37,
                        "src": "2204:15:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Counter_$2227_storage",
                          "typeString": "struct Counters.Counter storage ref"
                        }
                      },
                      "id": 119,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "increment",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2253,
                      "src": "2204:25:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Counter_$2227_storage_ptr_$returns$__$bound_to$_t_struct$_Counter_$2227_storage_ptr_$",
                        "typeString": "function (struct Counters.Counter storage pointer)"
                      }
                    },
                    "id": 120,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2204:27:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 121,
                  "nodeType": "ExpressionStatement",
                  "src": "2204:27:16"
                }
              ]
            },
            "id": 123,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 93,
                    "name": "_name",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 78,
                    "src": "1982:5:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  {
                    "id": 94,
                    "name": "_symbol",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 80,
                    "src": "1989:7:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  }
                ],
                "id": 95,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 92,
                  "name": "ERC721",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1883,
                  "src": "1975:6:16"
                },
                "nodeType": "ModifierInvocation",
                "src": "1975:22:16"
              }
            ],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 91,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 78,
                  "mutability": "mutable",
                  "name": "_name",
                  "nameLocation": "1767:5:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 123,
                  "src": "1753:19:16",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 77,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1753:6:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 80,
                  "mutability": "mutable",
                  "name": "_symbol",
                  "nameLocation": "1796:7:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 123,
                  "src": "1782:21:16",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 79,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1782:6:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 82,
                  "mutability": "mutable",
                  "name": "_baseURI",
                  "nameLocation": "1827:8:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 123,
                  "src": "1813:22:16",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 81,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1813:6:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 84,
                  "mutability": "mutable",
                  "name": "_whitelistSupply",
                  "nameLocation": "1853:16:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 123,
                  "src": "1845:24:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 83,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1845:7:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 86,
                  "mutability": "mutable",
                  "name": "_teamMintSupply",
                  "nameLocation": "1887:15:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 123,
                  "src": "1879:23:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 85,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1879:7:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 88,
                  "mutability": "mutable",
                  "name": "_totalSaleSupply",
                  "nameLocation": "1920:16:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 123,
                  "src": "1912:24:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 87,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1912:7:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 90,
                  "mutability": "mutable",
                  "name": "_maxMintPerTx",
                  "nameLocation": "1952:13:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 123,
                  "src": "1946:19:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 89,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "1946:5:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1743:229:16"
            },
            "returnParameters": {
              "id": 96,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1998:0:16"
            },
            "scope": 815,
            "src": "1732:506:16",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 146,
              "nodeType": "Block",
              "src": "2312:125:16",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 133,
                            "name": "root",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 128,
                            "src": "2343:4:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "expression": {
                                      "id": 137,
                                      "name": "msg",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": -15,
                                      "src": "2376:3:16",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_magic_message",
                                        "typeString": "msg"
                                      }
                                    },
                                    "id": 138,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "sender",
                                    "nodeType": "MemberAccess",
                                    "src": "2376:10:16",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "expression": {
                                    "id": 135,
                                    "name": "abi",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -1,
                                    "src": "2359:3:16",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_abi",
                                      "typeString": "abi"
                                    }
                                  },
                                  "id": 136,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "memberName": "encodePacked",
                                  "nodeType": "MemberAccess",
                                  "src": "2359:16:16",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                    "typeString": "function () pure returns (bytes memory)"
                                  }
                                },
                                "id": 139,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "2359:28:16",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              ],
                              "id": 134,
                              "name": "keccak256",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -8,
                              "src": "2349:9:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                                "typeString": "function (bytes memory) pure returns (bytes32)"
                              }
                            },
                            "id": 140,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2349:39:16",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          ],
                          "expression": {
                            "id": 131,
                            "name": "proof",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 126,
                            "src": "2330:5:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_bytes32_$dyn_calldata_ptr",
                              "typeString": "bytes32[] calldata"
                            }
                          },
                          "id": 132,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "verify",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 2319,
                          "src": "2330:12:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_array$_t_bytes32_$dyn_memory_ptr_$_t_bytes32_$_t_bytes32_$returns$_t_bool_$bound_to$_t_array$_t_bytes32_$dyn_memory_ptr_$",
                            "typeString": "function (bytes32[] memory,bytes32,bytes32) pure returns (bool)"
                          }
                        },
                        "id": 141,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2330:59:16",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "41646472657373206e6f7420696e2077686974656c6973742e",
                        "id": 142,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2391:27:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_10f0316b21b19d043878f285c4ccf6f319edbac12e2d889c58c50cc06c80b168",
                          "typeString": "literal_string \"Address not in whitelist.\""
                        },
                        "value": "Address not in whitelist."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_10f0316b21b19d043878f285c4ccf6f319edbac12e2d889c58c50cc06c80b168",
                          "typeString": "literal_string \"Address not in whitelist.\""
                        }
                      ],
                      "id": 130,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2322:7:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 143,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2322:97:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 144,
                  "nodeType": "ExpressionStatement",
                  "src": "2322:97:16"
                },
                {
                  "id": 145,
                  "nodeType": "PlaceholderStatement",
                  "src": "2429:1:16"
                }
              ]
            },
            "id": 147,
            "name": "isValidMerkleProof",
            "nameLocation": "2253:18:16",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 129,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 126,
                  "mutability": "mutable",
                  "name": "proof",
                  "nameLocation": "2291:5:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 147,
                  "src": "2272:24:16",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_bytes32_$dyn_calldata_ptr",
                    "typeString": "bytes32[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 124,
                      "name": "bytes32",
                      "nodeType": "ElementaryTypeName",
                      "src": "2272:7:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "id": 125,
                    "nodeType": "ArrayTypeName",
                    "src": "2272:9:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
                      "typeString": "bytes32[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 128,
                  "mutability": "mutable",
                  "name": "root",
                  "nameLocation": "2306:4:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 147,
                  "src": "2298:12:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 127,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "2298:7:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2271:40:16"
            },
            "src": "2244:193:16",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 164,
              "nodeType": "Block",
              "src": "2508:101:16",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 159,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 156,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 154,
                            "name": "price",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 149,
                            "src": "2526:5:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "*",
                          "rightExpression": {
                            "id": 155,
                            "name": "numberOfTokens",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 151,
                            "src": "2534:14:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "2526:22:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "id": 157,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "2552:3:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 158,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "value",
                          "nodeType": "MemberAccess",
                          "src": "2552:9:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "2526:35:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "496e636f7272656374204554482076616c75652073656e742e",
                        "id": 160,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2563:27:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_19aa319ce03600a53f9a4fd3a037122108d0716825aadc3c59f869db093040a7",
                          "typeString": "literal_string \"Incorrect ETH value sent.\""
                        },
                        "value": "Incorrect ETH value sent."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_19aa319ce03600a53f9a4fd3a037122108d0716825aadc3c59f869db093040a7",
                          "typeString": "literal_string \"Incorrect ETH value sent.\""
                        }
                      ],
                      "id": 153,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2518:7:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 161,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2518:73:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 162,
                  "nodeType": "ExpressionStatement",
                  "src": "2518:73:16"
                },
                {
                  "id": 163,
                  "nodeType": "PlaceholderStatement",
                  "src": "2601:1:16"
                }
              ]
            },
            "id": 165,
            "name": "isCorrectPayment",
            "nameLocation": "2452:16:16",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 152,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 149,
                  "mutability": "mutable",
                  "name": "price",
                  "nameLocation": "2477:5:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 165,
                  "src": "2469:13:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 148,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2469:7:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 151,
                  "mutability": "mutable",
                  "name": "numberOfTokens",
                  "nameLocation": "2492:14:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 165,
                  "src": "2484:22:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 150,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2484:7:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2468:39:16"
            },
            "src": "2443:166:16",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 208,
              "nodeType": "Block",
              "src": "2733:275:16",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 180,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 178,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 175,
                              "name": "totalSupply",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [
                                688
                              ],
                              "referencedDeclaration": 688,
                              "src": "2751:11:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                                "typeString": "function () view returns (uint256)"
                              }
                            },
                            "id": 176,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2751:13:16",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "+",
                          "rightExpression": {
                            "id": 177,
                            "name": "mintAmount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 167,
                            "src": "2768:10:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint8",
                              "typeString": "uint8"
                            }
                          },
                          "src": "2751:27:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "id": 179,
                          "name": "totalSaleSupply",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 70,
                          "src": "2782:15:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "2751:46:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4d696e7420616d6f756e742077696c6c2065786365656420746f74616c2073616c6520737570706c792e",
                        "id": 181,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2799:44:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_d31ea9d02492d2e96078927c40226d782e16bdd234d48e8ef578474f39c8f09f",
                          "typeString": "literal_string \"Mint amount will exceed total sale supply.\""
                        },
                        "value": "Mint amount will exceed total sale supply."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_d31ea9d02492d2e96078927c40226d782e16bdd234d48e8ef578474f39c8f09f",
                          "typeString": "literal_string \"Mint amount will exceed total sale supply.\""
                        }
                      ],
                      "id": 174,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2743:7:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 182,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2743:101:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 183,
                  "nodeType": "ExpressionStatement",
                  "src": "2743:101:16"
                },
                {
                  "body": {
                    "id": 206,
                    "nodeType": "Block",
                    "src": "2896:106:16",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 195,
                              "name": "to",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 169,
                              "src": "2920:2:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "expression": {
                                  "id": 196,
                                  "name": "_tokenIdCounter",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 37,
                                  "src": "2924:15:16",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Counter_$2227_storage",
                                    "typeString": "struct Counters.Counter storage ref"
                                  }
                                },
                                "id": 197,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "current",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 2239,
                                "src": "2924:23:16",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$_t_struct$_Counter_$2227_storage_ptr_$returns$_t_uint256_$bound_to$_t_struct$_Counter_$2227_storage_ptr_$",
                                  "typeString": "function (struct Counters.Counter storage pointer) view returns (uint256)"
                                }
                              },
                              "id": 198,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "2924:25:16",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 194,
                            "name": "_safeMint",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              1547,
                              1576
                            ],
                            "referencedDeclaration": 1547,
                            "src": "2910:9:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,uint256)"
                            }
                          },
                          "id": 199,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2910:40:16",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 200,
                        "nodeType": "ExpressionStatement",
                        "src": "2910:40:16"
                      },
                      {
                        "expression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "id": 201,
                              "name": "_tokenIdCounter",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 37,
                              "src": "2964:15:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Counter_$2227_storage",
                                "typeString": "struct Counters.Counter storage ref"
                              }
                            },
                            "id": 203,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "increment",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2253,
                            "src": "2964:25:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Counter_$2227_storage_ptr_$returns$__$bound_to$_t_struct$_Counter_$2227_storage_ptr_$",
                              "typeString": "function (struct Counters.Counter storage pointer)"
                            }
                          },
                          "id": 204,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2964:27:16",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 205,
                        "nodeType": "ExpressionStatement",
                        "src": "2964:27:16"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 190,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 188,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 185,
                      "src": "2874:1:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<=",
                    "rightExpression": {
                      "id": 189,
                      "name": "mintAmount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 167,
                      "src": "2879:10:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "src": "2874:15:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 207,
                  "initializationExpression": {
                    "assignments": [
                      185
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 185,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "2867:1:16",
                        "nodeType": "VariableDeclaration",
                        "scope": 207,
                        "src": "2859:9:16",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 184,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2859:7:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 187,
                    "initialValue": {
                      "hexValue": "31",
                      "id": 186,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2871:1:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "2859:13:16"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 192,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "2891:3:16",
                      "subExpression": {
                        "id": 191,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 185,
                        "src": "2891:1:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 193,
                    "nodeType": "ExpressionStatement",
                    "src": "2891:3:16"
                  },
                  "nodeType": "ForStatement",
                  "src": "2854:148:16"
                }
              ]
            },
            "functionSelector": "b3caad01",
            "id": 209,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 172,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 171,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 862,
                  "src": "2718:9:16"
                },
                "nodeType": "ModifierInvocation",
                "src": "2718:9:16"
              }
            ],
            "name": "airdropCryptid",
            "nameLocation": "2624:14:16",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 170,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 167,
                  "mutability": "mutable",
                  "name": "mintAmount",
                  "nameLocation": "2654:10:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 209,
                  "src": "2648:16:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 166,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "2648:5:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 169,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "2683:2:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 209,
                  "src": "2675:10:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 168,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2675:7:16",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2638:53:16"
            },
            "returnParameters": {
              "id": 173,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2733:0:16"
            },
            "scope": 815,
            "src": "2615:393:16",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 275,
              "nodeType": "Block",
              "src": "3292:397:16",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_enum$_Stage_$34",
                          "typeString": "enum CryptidToken.Stage"
                        },
                        "id": 231,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 228,
                          "name": "stage",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 76,
                          "src": "3310:5:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_Stage_$34",
                            "typeString": "enum CryptidToken.Stage"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "id": 229,
                            "name": "Stage",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 34,
                            "src": "3319:5:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_enum$_Stage_$34_$",
                              "typeString": "type(enum CryptidToken.Stage)"
                            }
                          },
                          "id": 230,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "Whitelist",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 31,
                          "src": "3319:15:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_Stage_$34",
                            "typeString": "enum CryptidToken.Stage"
                          }
                        },
                        "src": "3310:24:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "57686974656c6973742073616c65206e6f7420696e697469617465642e",
                        "id": 232,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3336:31:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_6f3bf52366fb0e5f84b06dd8b232ddb24afa4a1296286b5bacb4ad858beda709",
                          "typeString": "literal_string \"Whitelist sale not initiated.\""
                        },
                        "value": "Whitelist sale not initiated."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_6f3bf52366fb0e5f84b06dd8b232ddb24afa4a1296286b5bacb4ad858beda709",
                          "typeString": "literal_string \"Whitelist sale not initiated.\""
                        }
                      ],
                      "id": 227,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "3302:7:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 233,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3302:66:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 234,
                  "nodeType": "ExpressionStatement",
                  "src": "3302:66:16"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 241,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "baseExpression": {
                            "id": 236,
                            "name": "claimed",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 64,
                            "src": "3386:7:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                              "typeString": "mapping(address => bool)"
                            }
                          },
                          "id": 239,
                          "indexExpression": {
                            "expression": {
                              "id": 237,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "3394:3:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 238,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "3394:10:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "3386:19:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "66616c7365",
                          "id": 240,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3409:5:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "false"
                        },
                        "src": "3386:28:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "57686974656c697374206d696e7420616c726561647920636c61696d65642e",
                        "id": 242,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3416:33:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_9eacba39c4a047211b4540ec646aa258bbbb866442d637ed169c138a1785486c",
                          "typeString": "literal_string \"Whitelist mint already claimed.\""
                        },
                        "value": "Whitelist mint already claimed."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_9eacba39c4a047211b4540ec646aa258bbbb866442d637ed169c138a1785486c",
                          "typeString": "literal_string \"Whitelist mint already claimed.\""
                        }
                      ],
                      "id": 235,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "3378:7:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 243,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3378:72:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 244,
                  "nodeType": "ExpressionStatement",
                  "src": "3378:72:16"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 251,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 249,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 246,
                              "name": "totalSupply",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [
                                688
                              ],
                              "referencedDeclaration": 688,
                              "src": "3469:11:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                                "typeString": "function () view returns (uint256)"
                              }
                            },
                            "id": 247,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3469:13:16",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "+",
                          "rightExpression": {
                            "hexValue": "31",
                            "id": 248,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "3485:1:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            },
                            "value": "1"
                          },
                          "src": "3469:17:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "id": 250,
                          "name": "whitelistSupply",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 60,
                          "src": "3490:15:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "3469:36:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4d696e7420616d6f756e742077696c6c206578636565642077686974656c69737420737570706c792e",
                        "id": 252,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3507:43:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_d3afd34fe5efe55c777b3e3cfa0cd2800c93f977cd59bbfbfdde92bb2660276f",
                          "typeString": "literal_string \"Mint amount will exceed whitelist supply.\""
                        },
                        "value": "Mint amount will exceed whitelist supply."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_d3afd34fe5efe55c777b3e3cfa0cd2800c93f977cd59bbfbfdde92bb2660276f",
                          "typeString": "literal_string \"Mint amount will exceed whitelist supply.\""
                        }
                      ],
                      "id": 245,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "3461:7:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 253,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3461:90:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 254,
                  "nodeType": "ExpressionStatement",
                  "src": "3461:90:16"
                },
                {
                  "expression": {
                    "id": 260,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 255,
                        "name": "claimed",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 64,
                        "src": "3561:7:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 258,
                      "indexExpression": {
                        "expression": {
                          "id": 256,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "3569:3:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 257,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "3569:10:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "3561:19:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 259,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3583:4:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "3561:26:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 261,
                  "nodeType": "ExpressionStatement",
                  "src": "3561:26:16"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 263,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "3607:3:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 264,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "3607:10:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "id": 265,
                            "name": "_tokenIdCounter",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 37,
                            "src": "3619:15:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Counter_$2227_storage",
                              "typeString": "struct Counters.Counter storage ref"
                            }
                          },
                          "id": 266,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "current",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 2239,
                          "src": "3619:23:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_struct$_Counter_$2227_storage_ptr_$returns$_t_uint256_$bound_to$_t_struct$_Counter_$2227_storage_ptr_$",
                            "typeString": "function (struct Counters.Counter storage pointer) view returns (uint256)"
                          }
                        },
                        "id": 267,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3619:25:16",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 262,
                      "name": "_safeMint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        1547,
                        1576
                      ],
                      "referencedDeclaration": 1547,
                      "src": "3597:9:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 268,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3597:48:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 269,
                  "nodeType": "ExpressionStatement",
                  "src": "3597:48:16"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 270,
                        "name": "_tokenIdCounter",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 37,
                        "src": "3655:15:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Counter_$2227_storage",
                          "typeString": "struct Counters.Counter storage ref"
                        }
                      },
                      "id": 272,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "increment",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2253,
                      "src": "3655:25:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Counter_$2227_storage_ptr_$returns$__$bound_to$_t_struct$_Counter_$2227_storage_ptr_$",
                        "typeString": "function (struct Counters.Counter storage pointer)"
                      }
                    },
                    "id": 273,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3655:27:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 274,
                  "nodeType": "ExpressionStatement",
                  "src": "3655:27:16"
                }
              ]
            },
            "functionSelector": "372f657c",
            "id": 276,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 215,
                    "name": "merkleProof",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 212,
                    "src": "3177:11:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bytes32_$dyn_calldata_ptr",
                      "typeString": "bytes32[] calldata"
                    }
                  },
                  {
                    "id": 216,
                    "name": "merkleRoot",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 39,
                    "src": "3190:10:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  }
                ],
                "id": 217,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 214,
                  "name": "isValidMerkleProof",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 147,
                  "src": "3158:18:16"
                },
                "nodeType": "ModifierInvocation",
                "src": "3158:43:16"
              },
              {
                "arguments": [
                  {
                    "id": 219,
                    "name": "salePrice",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 73,
                    "src": "3228:9:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  {
                    "hexValue": "31",
                    "id": 220,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "3239:1:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_1_by_1",
                      "typeString": "int_const 1"
                    },
                    "value": "1"
                  }
                ],
                "id": 221,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 218,
                  "name": "isCorrectPayment",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 165,
                  "src": "3211:16:16"
                },
                "nodeType": "ModifierInvocation",
                "src": "3211:30:16"
              },
              {
                "id": 223,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 222,
                  "name": "nonReentrant",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1051,
                  "src": "3251:12:16"
                },
                "nodeType": "ModifierInvocation",
                "src": "3251:12:16"
              },
              {
                "id": 225,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 224,
                  "name": "whenNotPaused",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 968,
                  "src": "3273:13:16"
                },
                "nodeType": "ModifierInvocation",
                "src": "3273:13:16"
              }
            ],
            "name": "whitelistMint",
            "nameLocation": "3055:13:16",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 213,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 212,
                  "mutability": "mutable",
                  "name": "merkleProof",
                  "nameLocation": "3097:11:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 276,
                  "src": "3078:30:16",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_bytes32_$dyn_calldata_ptr",
                    "typeString": "bytes32[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 210,
                      "name": "bytes32",
                      "nodeType": "ElementaryTypeName",
                      "src": "3078:7:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "id": 211,
                    "nodeType": "ArrayTypeName",
                    "src": "3078:9:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
                      "typeString": "bytes32[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3068:46:16"
            },
            "returnParameters": {
              "id": 226,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3292:0:16"
            },
            "scope": 815,
            "src": "3046:643:16",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 329,
              "nodeType": "Block",
              "src": "3815:402:16",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_enum$_Stage_$34",
                          "typeString": "enum CryptidToken.Stage"
                        },
                        "id": 287,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 284,
                          "name": "stage",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 76,
                          "src": "3833:5:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_Stage_$34",
                            "typeString": "enum CryptidToken.Stage"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "id": 285,
                            "name": "Stage",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 34,
                            "src": "3842:5:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_enum$_Stage_$34_$",
                              "typeString": "type(enum CryptidToken.Stage)"
                            }
                          },
                          "id": 286,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "TeamMint",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 32,
                          "src": "3842:14:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_Stage_$34",
                            "typeString": "enum CryptidToken.Stage"
                          }
                        },
                        "src": "3833:23:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "57686974656c6973742073616c65206e6f7420696e697469617465642e",
                        "id": 288,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3858:31:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_6f3bf52366fb0e5f84b06dd8b232ddb24afa4a1296286b5bacb4ad858beda709",
                          "typeString": "literal_string \"Whitelist sale not initiated.\""
                        },
                        "value": "Whitelist sale not initiated."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_6f3bf52366fb0e5f84b06dd8b232ddb24afa4a1296286b5bacb4ad858beda709",
                          "typeString": "literal_string \"Whitelist sale not initiated.\""
                        }
                      ],
                      "id": 283,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "3825:7:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 289,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3825:65:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 290,
                  "nodeType": "ExpressionStatement",
                  "src": "3825:65:16"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 296,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 294,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 292,
                            "name": "_mintAmount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 278,
                            "src": "3908:11:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint8",
                              "typeString": "uint8"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "+",
                          "rightExpression": {
                            "id": 293,
                            "name": "teamMintCount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 68,
                            "src": "3922:13:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "3908:27:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "id": 295,
                          "name": "teamMintSupply",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 66,
                          "src": "3939:14:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "3908:45:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "5472616e73616374696f6e206578636565647320746f74616c207465616d2d73616c6520737570706c79",
                        "id": 297,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3955:44:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_9d44df76f41b3faf37faf1567c4c93791c50f008c20b1c2d041c3918d23b89ac",
                          "typeString": "literal_string \"Transaction exceeds total team-sale supply\""
                        },
                        "value": "Transaction exceeds total team-sale supply"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_9d44df76f41b3faf37faf1567c4c93791c50f008c20b1c2d041c3918d23b89ac",
                          "typeString": "literal_string \"Transaction exceeds total team-sale supply\""
                        }
                      ],
                      "id": 291,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "3900:7:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 298,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3900:100:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 299,
                  "nodeType": "ExpressionStatement",
                  "src": "3900:100:16"
                },
                {
                  "expression": {
                    "id": 302,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 300,
                      "name": "teamMintCount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 68,
                      "src": "4016:13:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "id": 301,
                      "name": "_mintAmount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 278,
                      "src": "4033:11:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "src": "4016:28:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 303,
                  "nodeType": "ExpressionStatement",
                  "src": "4016:28:16"
                },
                {
                  "body": {
                    "id": 327,
                    "nodeType": "Block",
                    "src": "4097:114:16",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 315,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "4121:3:16",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 316,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "4121:10:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "expression": {
                                  "id": 317,
                                  "name": "_tokenIdCounter",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 37,
                                  "src": "4133:15:16",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Counter_$2227_storage",
                                    "typeString": "struct Counters.Counter storage ref"
                                  }
                                },
                                "id": 318,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "current",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 2239,
                                "src": "4133:23:16",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$_t_struct$_Counter_$2227_storage_ptr_$returns$_t_uint256_$bound_to$_t_struct$_Counter_$2227_storage_ptr_$",
                                  "typeString": "function (struct Counters.Counter storage pointer) view returns (uint256)"
                                }
                              },
                              "id": 319,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "4133:25:16",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 314,
                            "name": "_safeMint",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              1547,
                              1576
                            ],
                            "referencedDeclaration": 1547,
                            "src": "4111:9:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,uint256)"
                            }
                          },
                          "id": 320,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4111:48:16",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 321,
                        "nodeType": "ExpressionStatement",
                        "src": "4111:48:16"
                      },
                      {
                        "expression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "id": 322,
                              "name": "_tokenIdCounter",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 37,
                              "src": "4173:15:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Counter_$2227_storage",
                                "typeString": "struct Counters.Counter storage ref"
                              }
                            },
                            "id": 324,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "increment",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2253,
                            "src": "4173:25:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Counter_$2227_storage_ptr_$returns$__$bound_to$_t_struct$_Counter_$2227_storage_ptr_$",
                              "typeString": "function (struct Counters.Counter storage pointer)"
                            }
                          },
                          "id": 325,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4173:27:16",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 326,
                        "nodeType": "ExpressionStatement",
                        "src": "4173:27:16"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 310,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 308,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 305,
                      "src": "4074:1:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<=",
                    "rightExpression": {
                      "id": 309,
                      "name": "_mintAmount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 278,
                      "src": "4079:11:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "src": "4074:16:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 328,
                  "initializationExpression": {
                    "assignments": [
                      305
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 305,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "4067:1:16",
                        "nodeType": "VariableDeclaration",
                        "scope": 328,
                        "src": "4059:9:16",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 304,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "4059:7:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 307,
                    "initialValue": {
                      "hexValue": "31",
                      "id": 306,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "4071:1:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "4059:13:16"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 312,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "4092:3:16",
                      "subExpression": {
                        "id": 311,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 305,
                        "src": "4092:1:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 313,
                    "nodeType": "ExpressionStatement",
                    "src": "4092:3:16"
                  },
                  "nodeType": "ForStatement",
                  "src": "4054:157:16"
                }
              ]
            },
            "functionSelector": "7b671780",
            "id": 330,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 281,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 280,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 862,
                  "src": "3800:9:16"
                },
                "nodeType": "ModifierInvocation",
                "src": "3800:9:16"
              }
            ],
            "name": "teamMint",
            "nameLocation": "3731:8:16",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 279,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 278,
                  "mutability": "mutable",
                  "name": "_mintAmount",
                  "nameLocation": "3755:11:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 330,
                  "src": "3749:17:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 277,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "3749:5:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3739:33:16"
            },
            "returnParameters": {
              "id": 282,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3815:0:16"
            },
            "scope": 815,
            "src": "3722:495:16",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 393,
              "nodeType": "Block",
              "src": "4440:448:16",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_enum$_Stage_$34",
                          "typeString": "enum CryptidToken.Stage"
                        },
                        "id": 347,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 344,
                          "name": "stage",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 76,
                          "src": "4458:5:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_Stage_$34",
                            "typeString": "enum CryptidToken.Stage"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "id": 345,
                            "name": "Stage",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 34,
                            "src": "4467:5:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_enum$_Stage_$34_$",
                              "typeString": "type(enum CryptidToken.Stage)"
                            }
                          },
                          "id": 346,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "PublicSale",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 33,
                          "src": "4467:16:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_Stage_$34",
                            "typeString": "enum CryptidToken.Stage"
                          }
                        },
                        "src": "4458:25:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "5075626c69632053616c65206e6f7420696e697469617465642e",
                        "id": 348,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4485:28:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_ffac5016f99ffafbc14c1fb6a74ffca66ccd81dfe45948579200271a439555e8",
                          "typeString": "literal_string \"Public Sale not initiated.\""
                        },
                        "value": "Public Sale not initiated."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_ffac5016f99ffafbc14c1fb6a74ffca66ccd81dfe45948579200271a439555e8",
                          "typeString": "literal_string \"Public Sale not initiated.\""
                        }
                      ],
                      "id": 343,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "4450:7:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 349,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4450:64:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 350,
                  "nodeType": "ExpressionStatement",
                  "src": "4450:64:16"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 357,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 355,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 352,
                              "name": "totalSupply",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [
                                688
                              ],
                              "referencedDeclaration": 688,
                              "src": "4532:11:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                                "typeString": "function () view returns (uint256)"
                              }
                            },
                            "id": 353,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "4532:13:16",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "+",
                          "rightExpression": {
                            "id": 354,
                            "name": "_mintAmount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 332,
                            "src": "4549:11:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint8",
                              "typeString": "uint8"
                            }
                          },
                          "src": "4532:28:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "id": 356,
                          "name": "totalSaleSupply",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 70,
                          "src": "4564:15:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "4532:47:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "5472616e73616374696f6e206578636565647320746f74616c2073616c6520737570706c79",
                        "id": 358,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4581:39:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_ee391234677627ac87988440f630eae84ae81bf0bfe8f40563064b548197bf44",
                          "typeString": "literal_string \"Transaction exceeds total sale supply\""
                        },
                        "value": "Transaction exceeds total sale supply"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_ee391234677627ac87988440f630eae84ae81bf0bfe8f40563064b548197bf44",
                          "typeString": "literal_string \"Transaction exceeds total sale supply\""
                        }
                      ],
                      "id": 351,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "4524:7:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 359,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4524:97:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 360,
                  "nodeType": "ExpressionStatement",
                  "src": "4524:97:16"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        "id": 364,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 362,
                          "name": "_mintAmount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 332,
                          "src": "4639:11:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "id": 363,
                          "name": "maxMintPerTx",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 49,
                          "src": "4654:12:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "src": "4639:27:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "45786365656473206d617820616c6c6f776564206d696e747320706572207472616e73616374696f6e2e",
                        "id": 365,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4668:44:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_3dc2cba29df8f648c7b0a6634ed379069d9a356058737d9841a6e20c3b896a6a",
                          "typeString": "literal_string \"Exceeds max allowed mints per transaction.\""
                        },
                        "value": "Exceeds max allowed mints per transaction."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_3dc2cba29df8f648c7b0a6634ed379069d9a356058737d9841a6e20c3b896a6a",
                          "typeString": "literal_string \"Exceeds max allowed mints per transaction.\""
                        }
                      ],
                      "id": 361,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "4631:7:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 366,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4631:82:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 367,
                  "nodeType": "ExpressionStatement",
                  "src": "4631:82:16"
                },
                {
                  "body": {
                    "id": 391,
                    "nodeType": "Block",
                    "src": "4768:114:16",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 379,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "4792:3:16",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 380,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "4792:10:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "expression": {
                                  "id": 381,
                                  "name": "_tokenIdCounter",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 37,
                                  "src": "4804:15:16",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Counter_$2227_storage",
                                    "typeString": "struct Counters.Counter storage ref"
                                  }
                                },
                                "id": 382,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "current",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 2239,
                                "src": "4804:23:16",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$_t_struct$_Counter_$2227_storage_ptr_$returns$_t_uint256_$bound_to$_t_struct$_Counter_$2227_storage_ptr_$",
                                  "typeString": "function (struct Counters.Counter storage pointer) view returns (uint256)"
                                }
                              },
                              "id": 383,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "4804:25:16",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 378,
                            "name": "_safeMint",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              1547,
                              1576
                            ],
                            "referencedDeclaration": 1547,
                            "src": "4782:9:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,uint256)"
                            }
                          },
                          "id": 384,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4782:48:16",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 385,
                        "nodeType": "ExpressionStatement",
                        "src": "4782:48:16"
                      },
                      {
                        "expression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "id": 386,
                              "name": "_tokenIdCounter",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 37,
                              "src": "4844:15:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Counter_$2227_storage",
                                "typeString": "struct Counters.Counter storage ref"
                              }
                            },
                            "id": 388,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "increment",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2253,
                            "src": "4844:25:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Counter_$2227_storage_ptr_$returns$__$bound_to$_t_struct$_Counter_$2227_storage_ptr_$",
                              "typeString": "function (struct Counters.Counter storage pointer)"
                            }
                          },
                          "id": 389,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4844:27:16",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 390,
                        "nodeType": "ExpressionStatement",
                        "src": "4844:27:16"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 374,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 372,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 369,
                      "src": "4745:1:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<=",
                    "rightExpression": {
                      "id": 373,
                      "name": "_mintAmount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 332,
                      "src": "4750:11:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "src": "4745:16:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 392,
                  "initializationExpression": {
                    "assignments": [
                      369
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 369,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "4738:1:16",
                        "nodeType": "VariableDeclaration",
                        "scope": 392,
                        "src": "4730:9:16",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 368,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "4730:7:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 371,
                    "initialValue": {
                      "hexValue": "31",
                      "id": 370,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "4742:1:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "4730:13:16"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 376,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "4763:3:16",
                      "subExpression": {
                        "id": 375,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 369,
                        "src": "4763:1:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 377,
                    "nodeType": "ExpressionStatement",
                    "src": "4763:3:16"
                  },
                  "nodeType": "ForStatement",
                  "src": "4725:157:16"
                }
              ]
            },
            "functionSelector": "858e83b5",
            "id": 394,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 335,
                    "name": "salePrice",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 73,
                    "src": "4365:9:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  {
                    "id": 336,
                    "name": "_mintAmount",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 332,
                    "src": "4376:11:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  }
                ],
                "id": 337,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 334,
                  "name": "isCorrectPayment",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 165,
                  "src": "4348:16:16"
                },
                "nodeType": "ModifierInvocation",
                "src": "4348:40:16"
              },
              {
                "id": 339,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 338,
                  "name": "nonReentrant",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1051,
                  "src": "4398:12:16"
                },
                "nodeType": "ModifierInvocation",
                "src": "4398:12:16"
              },
              {
                "id": 341,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 340,
                  "name": "whenNotPaused",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 968,
                  "src": "4420:13:16"
                },
                "nodeType": "ModifierInvocation",
                "src": "4420:13:16"
              }
            ],
            "name": "publicMint",
            "nameLocation": "4261:10:16",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 333,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 332,
                  "mutability": "mutable",
                  "name": "_mintAmount",
                  "nameLocation": "4287:11:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 394,
                  "src": "4281:17:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 331,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "4281:5:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4271:33:16"
            },
            "returnParameters": {
              "id": 342,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4440:0:16"
            },
            "scope": 815,
            "src": "4252:636:16",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 402,
              "nodeType": "Block",
              "src": "4952:25:16",
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 399,
                      "name": "_pause",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 995,
                      "src": "4962:6:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 400,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4962:8:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 401,
                  "nodeType": "ExpressionStatement",
                  "src": "4962:8:16"
                }
              ]
            },
            "functionSelector": "8456cb59",
            "id": 403,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 397,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 396,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 862,
                  "src": "4942:9:16"
                },
                "nodeType": "ModifierInvocation",
                "src": "4942:9:16"
              }
            ],
            "name": "pause",
            "nameLocation": "4925:5:16",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 395,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4930:2:16"
            },
            "returnParameters": {
              "id": 398,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4952:0:16"
            },
            "scope": 815,
            "src": "4916:61:16",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 411,
              "nodeType": "Block",
              "src": "5021:27:16",
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 408,
                      "name": "_unpause",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1011,
                      "src": "5031:8:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 409,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5031:10:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 410,
                  "nodeType": "ExpressionStatement",
                  "src": "5031:10:16"
                }
              ]
            },
            "functionSelector": "3f4ba83a",
            "id": 412,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 406,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 405,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 862,
                  "src": "5011:9:16"
                },
                "nodeType": "ModifierInvocation",
                "src": "5011:9:16"
              }
            ],
            "name": "unpause",
            "nameLocation": "4992:7:16",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 404,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4999:2:16"
            },
            "returnParameters": {
              "id": 407,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5021:0:16"
            },
            "scope": 815,
            "src": "4983:65:16",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 425,
              "nodeType": "Block",
              "src": "5159:42:16",
              "statements": [
                {
                  "expression": {
                    "id": 423,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 419,
                        "name": "claimed",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 64,
                        "src": "5169:7:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 421,
                      "indexExpression": {
                        "id": 420,
                        "name": "wlAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 414,
                        "src": "5177:9:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "5169:18:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 422,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "5190:4:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "5169:25:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 424,
                  "nodeType": "ExpressionStatement",
                  "src": "5169:25:16"
                }
              ]
            },
            "functionSelector": "bbc903ea",
            "id": 426,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 417,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 416,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 862,
                  "src": "5150:9:16"
                },
                "nodeType": "ModifierInvocation",
                "src": "5150:9:16"
              }
            ],
            "name": "overrideClaim",
            "nameLocation": "5108:13:16",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 415,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 414,
                  "mutability": "mutable",
                  "name": "wlAddress",
                  "nameLocation": "5130:9:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 426,
                  "src": "5122:17:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 413,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5122:7:16",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5121:19:16"
            },
            "returnParameters": {
              "id": 418,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5159:0:16"
            },
            "scope": 815,
            "src": "5099:102:16",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 437,
              "nodeType": "Block",
              "src": "5270:41:16",
              "statements": [
                {
                  "expression": {
                    "id": 435,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 433,
                      "name": "merkleRoot",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 39,
                      "src": "5280:10:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 434,
                      "name": "_merkleRoot",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 428,
                      "src": "5293:11:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "src": "5280:24:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "id": 436,
                  "nodeType": "ExpressionStatement",
                  "src": "5280:24:16"
                }
              ]
            },
            "functionSelector": "7cb64759",
            "id": 438,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 431,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 430,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 862,
                  "src": "5260:9:16"
                },
                "nodeType": "ModifierInvocation",
                "src": "5260:9:16"
              }
            ],
            "name": "setMerkleRoot",
            "nameLocation": "5216:13:16",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 429,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 428,
                  "mutability": "mutable",
                  "name": "_merkleRoot",
                  "nameLocation": "5238:11:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 438,
                  "src": "5230:19:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 427,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "5230:7:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5229:21:16"
            },
            "returnParameters": {
              "id": 432,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5270:0:16"
            },
            "scope": 815,
            "src": "5207:104:16",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 455,
              "nodeType": "Block",
              "src": "5383:94:16",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 447,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "5401:15:16",
                        "subExpression": {
                          "id": 446,
                          "name": "tokenURIFrozen",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 52,
                          "src": "5402:14:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "426173655552492069732066726f7a656e2e",
                        "id": 448,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5418:20:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_d69b45a3448a59ad375ec081a50a716e785a440c1fd3c9926feae942d4969f70",
                          "typeString": "literal_string \"BaseURI is frozen.\""
                        },
                        "value": "BaseURI is frozen."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_d69b45a3448a59ad375ec081a50a716e785a440c1fd3c9926feae942d4969f70",
                          "typeString": "literal_string \"BaseURI is frozen.\""
                        }
                      ],
                      "id": 445,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "5393:7:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 449,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5393:46:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 450,
                  "nodeType": "ExpressionStatement",
                  "src": "5393:46:16"
                },
                {
                  "expression": {
                    "id": 453,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 451,
                      "name": "baseURI",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 44,
                      "src": "5449:7:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 452,
                      "name": "_newBaseURI",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 440,
                      "src": "5459:11:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "5449:21:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 454,
                  "nodeType": "ExpressionStatement",
                  "src": "5449:21:16"
                }
              ]
            },
            "functionSelector": "55f804b3",
            "id": 456,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 443,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 442,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 862,
                  "src": "5373:9:16"
                },
                "nodeType": "ModifierInvocation",
                "src": "5373:9:16"
              }
            ],
            "name": "setBaseURI",
            "nameLocation": "5326:10:16",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 441,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 440,
                  "mutability": "mutable",
                  "name": "_newBaseURI",
                  "nameLocation": "5351:11:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 456,
                  "src": "5337:25:16",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 439,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "5337:6:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5336:27:16"
            },
            "returnParameters": {
              "id": 444,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5383:0:16"
            },
            "scope": 815,
            "src": "5317:160:16",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 482,
              "nodeType": "Block",
              "src": "5532:173:16",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 468,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "arguments": [
                              {
                                "id": 464,
                                "name": "baseURI",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 44,
                                "src": "5556:7:16",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_string_storage",
                                  "typeString": "string storage ref"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_string_storage",
                                  "typeString": "string storage ref"
                                }
                              ],
                              "id": 463,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "5550:5:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
                                "typeString": "type(bytes storage pointer)"
                              },
                              "typeName": {
                                "id": 462,
                                "name": "bytes",
                                "nodeType": "ElementaryTypeName",
                                "src": "5550:5:16",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 465,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "5550:14:16",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_storage_ptr",
                              "typeString": "bytes storage pointer"
                            }
                          },
                          "id": 466,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "src": "5550:21:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 467,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "5574:1:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "5550:25:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "626173655552492063616e6e6f7420626520656d707479",
                        "id": 469,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5577:25:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_7f0ec79eca5e21817a169f126861a454a94503229f851339b20cebce4b304152",
                          "typeString": "literal_string \"baseURI cannot be empty\""
                        },
                        "value": "baseURI cannot be empty"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_7f0ec79eca5e21817a169f126861a454a94503229f851339b20cebce4b304152",
                          "typeString": "literal_string \"baseURI cannot be empty\""
                        }
                      ],
                      "id": 461,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "5542:7:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 470,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5542:61:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 471,
                  "nodeType": "ExpressionStatement",
                  "src": "5542:61:16"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 474,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "5621:15:16",
                        "subExpression": {
                          "id": 473,
                          "name": "tokenURIFrozen",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 52,
                          "src": "5622:14:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4261736555524920697320616c72656164792066726f7a656e2e",
                        "id": 475,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5638:28:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_9cfd25527cde626a1eec8fa614b08a2e6fbe265860613de4e13dcf0c927e8df0",
                          "typeString": "literal_string \"BaseURI is already frozen.\""
                        },
                        "value": "BaseURI is already frozen."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_9cfd25527cde626a1eec8fa614b08a2e6fbe265860613de4e13dcf0c927e8df0",
                          "typeString": "literal_string \"BaseURI is already frozen.\""
                        }
                      ],
                      "id": 472,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "5613:7:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 476,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5613:54:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 477,
                  "nodeType": "ExpressionStatement",
                  "src": "5613:54:16"
                },
                {
                  "expression": {
                    "id": 480,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 478,
                      "name": "tokenURIFrozen",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 52,
                      "src": "5677:14:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 479,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "5694:4:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "5677:21:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 481,
                  "nodeType": "ExpressionStatement",
                  "src": "5677:21:16"
                }
              ]
            },
            "functionSelector": "e7bc8208",
            "id": 483,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 459,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 458,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 862,
                  "src": "5522:9:16"
                },
                "nodeType": "ModifierInvocation",
                "src": "5522:9:16"
              }
            ],
            "name": "freezeBaseURI",
            "nameLocation": "5497:13:16",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 457,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5510:2:16"
            },
            "returnParameters": {
              "id": 460,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5532:0:16"
            },
            "scope": 815,
            "src": "5488:217:16",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 494,
              "nodeType": "Block",
              "src": "5785:52:16",
              "statements": [
                {
                  "expression": {
                    "id": 492,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 490,
                      "name": "teamMintSupply",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 66,
                      "src": "5795:14:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 491,
                      "name": "_newTeamMintSupply",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 485,
                      "src": "5812:18:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "5795:35:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 493,
                  "nodeType": "ExpressionStatement",
                  "src": "5795:35:16"
                }
              ]
            },
            "functionSelector": "20841a6a",
            "id": 495,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 488,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 487,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 862,
                  "src": "5775:9:16"
                },
                "nodeType": "ModifierInvocation",
                "src": "5775:9:16"
              }
            ],
            "name": "setTeamMintSupply",
            "nameLocation": "5720:17:16",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 486,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 485,
                  "mutability": "mutable",
                  "name": "_newTeamMintSupply",
                  "nameLocation": "5746:18:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 495,
                  "src": "5738:26:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 484,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5738:7:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5737:28:16"
            },
            "returnParameters": {
              "id": 489,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5785:0:16"
            },
            "scope": 815,
            "src": "5711:126:16",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 506,
              "nodeType": "Block",
              "src": "5921:50:16",
              "statements": [
                {
                  "expression": {
                    "id": 504,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 502,
                      "name": "baseExtension",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 47,
                      "src": "5931:13:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 503,
                      "name": "_newBaseExtension",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 497,
                      "src": "5947:17:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "5931:33:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 505,
                  "nodeType": "ExpressionStatement",
                  "src": "5931:33:16"
                }
              ]
            },
            "functionSelector": "da3ef23f",
            "id": 507,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 500,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 499,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 862,
                  "src": "5911:9:16"
                },
                "nodeType": "ModifierInvocation",
                "src": "5911:9:16"
              }
            ],
            "name": "setBaseExtension",
            "nameLocation": "5852:16:16",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 498,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 497,
                  "mutability": "mutable",
                  "name": "_newBaseExtension",
                  "nameLocation": "5883:17:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 507,
                  "src": "5869:31:16",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 496,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "5869:6:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5868:33:16"
            },
            "returnParameters": {
              "id": 501,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5921:0:16"
            },
            "scope": 815,
            "src": "5843:128:16",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 518,
              "nodeType": "Block",
              "src": "6047:42:16",
              "statements": [
                {
                  "expression": {
                    "id": 516,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 514,
                      "name": "salePrice",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 73,
                      "src": "6057:9:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 515,
                      "name": "_newSalePrice",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 509,
                      "src": "6069:13:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "6057:25:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 517,
                  "nodeType": "ExpressionStatement",
                  "src": "6057:25:16"
                }
              ]
            },
            "functionSelector": "791a2519",
            "id": 519,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 512,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 511,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 862,
                  "src": "6037:9:16"
                },
                "nodeType": "ModifierInvocation",
                "src": "6037:9:16"
              }
            ],
            "name": "setPublicSalePrice",
            "nameLocation": "5986:18:16",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 510,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 509,
                  "mutability": "mutable",
                  "name": "_newSalePrice",
                  "nameLocation": "6013:13:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 519,
                  "src": "6005:21:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 508,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6005:7:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6004:23:16"
            },
            "returnParameters": {
              "id": 513,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6047:0:16"
            },
            "scope": 815,
            "src": "5977:112:16",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 530,
              "nodeType": "Block",
              "src": "6163:48:16",
              "statements": [
                {
                  "expression": {
                    "id": 528,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 526,
                      "name": "maxMintPerTx",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 49,
                      "src": "6173:12:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 527,
                      "name": "_newmaxMintPerTx",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 521,
                      "src": "6188:16:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "src": "6173:31:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "id": 529,
                  "nodeType": "ExpressionStatement",
                  "src": "6173:31:16"
                }
              ]
            },
            "functionSelector": "622e4e78",
            "id": 531,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 524,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 523,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 862,
                  "src": "6153:9:16"
                },
                "nodeType": "ModifierInvocation",
                "src": "6153:9:16"
              }
            ],
            "name": "setMaxMintPerTx",
            "nameLocation": "6104:15:16",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 522,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 521,
                  "mutability": "mutable",
                  "name": "_newmaxMintPerTx",
                  "nameLocation": "6126:16:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 531,
                  "src": "6120:22:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 520,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "6120:5:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6119:24:16"
            },
            "returnParameters": {
              "id": 525,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6163:0:16"
            },
            "scope": 815,
            "src": "6095:116:16",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 559,
              "nodeType": "Block",
              "src": "6294:214:16",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 545,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "arguments": [
                              {
                                "id": 541,
                                "name": "_provenanceHash",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 533,
                                "src": "6318:15:16",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_string_memory_ptr",
                                  "typeString": "string memory"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_string_memory_ptr",
                                  "typeString": "string memory"
                                }
                              ],
                              "id": 540,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "6312:5:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
                                "typeString": "type(bytes storage pointer)"
                              },
                              "typeName": {
                                "id": 539,
                                "name": "bytes",
                                "nodeType": "ElementaryTypeName",
                                "src": "6312:5:16",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 542,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "6312:22:16",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          },
                          "id": 543,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "src": "6312:29:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 544,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "6344:1:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "6312:33:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "50726f76656e616e636520686173682063616e6e6f7420626520656d70747920737472696e672e",
                        "id": 546,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6347:41:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_a9ab89f8eed62422287304a91afafed628429b9d38b7c94e126f6125494a6eb0",
                          "typeString": "literal_string \"Provenance hash cannot be empty string.\""
                        },
                        "value": "Provenance hash cannot be empty string."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_a9ab89f8eed62422287304a91afafed628429b9d38b7c94e126f6125494a6eb0",
                          "typeString": "literal_string \"Provenance hash cannot be empty string.\""
                        }
                      ],
                      "id": 538,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "6304:7:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 547,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6304:85:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 548,
                  "nodeType": "ExpressionStatement",
                  "src": "6304:85:16"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 551,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "6407:21:16",
                        "subExpression": {
                          "id": 550,
                          "name": "provenanceHashFrozen",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 55,
                          "src": "6408:20:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "50726f76656e616e636520686173682069732066726f7a656e2e",
                        "id": 552,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6430:28:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_d0e849067ff4d0cb647506b39bdc31f12b3ac980715b041f8ad1acc2345b88a6",
                          "typeString": "literal_string \"Provenance hash is frozen.\""
                        },
                        "value": "Provenance hash is frozen."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_d0e849067ff4d0cb647506b39bdc31f12b3ac980715b041f8ad1acc2345b88a6",
                          "typeString": "literal_string \"Provenance hash is frozen.\""
                        }
                      ],
                      "id": 549,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "6399:7:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 553,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6399:60:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 554,
                  "nodeType": "ExpressionStatement",
                  "src": "6399:60:16"
                },
                {
                  "expression": {
                    "id": 557,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 555,
                      "name": "provenanceHash",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 41,
                      "src": "6469:14:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 556,
                      "name": "_provenanceHash",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 533,
                      "src": "6486:15:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "6469:32:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 558,
                  "nodeType": "ExpressionStatement",
                  "src": "6469:32:16"
                }
              ]
            },
            "functionSelector": "10969523",
            "id": 560,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 536,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 535,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 862,
                  "src": "6284:9:16"
                },
                "nodeType": "ModifierInvocation",
                "src": "6284:9:16"
              }
            ],
            "name": "setProvenanceHash",
            "nameLocation": "6226:17:16",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 534,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 533,
                  "mutability": "mutable",
                  "name": "_provenanceHash",
                  "nameLocation": "6258:15:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 560,
                  "src": "6244:29:16",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 532,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "6244:6:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6243:31:16"
            },
            "returnParameters": {
              "id": 537,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6294:0:16"
            },
            "scope": 815,
            "src": "6217:291:16",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 586,
              "nodeType": "Block",
              "src": "6565:209:16",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 572,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "arguments": [
                              {
                                "id": 568,
                                "name": "provenanceHash",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 41,
                                "src": "6589:14:16",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_string_storage",
                                  "typeString": "string storage ref"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_string_storage",
                                  "typeString": "string storage ref"
                                }
                              ],
                              "id": 567,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "6583:5:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
                                "typeString": "type(bytes storage pointer)"
                              },
                              "typeName": {
                                "id": 566,
                                "name": "bytes",
                                "nodeType": "ElementaryTypeName",
                                "src": "6583:5:16",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 569,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "6583:21:16",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_storage_ptr",
                              "typeString": "bytes storage pointer"
                            }
                          },
                          "id": 570,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "src": "6583:28:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 571,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "6614:1:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "6583:32:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "50726f76656e616e636520686173682063616e6e6f7420626520656d7074792e",
                        "id": 573,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6617:34:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_9524e1e8984d8e3b97c3eace024f9e25c01a47beb1e3e0bf0e8dbd2a4657027d",
                          "typeString": "literal_string \"Provenance hash cannot be empty.\""
                        },
                        "value": "Provenance hash cannot be empty."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_9524e1e8984d8e3b97c3eace024f9e25c01a47beb1e3e0bf0e8dbd2a4657027d",
                          "typeString": "literal_string \"Provenance hash cannot be empty.\""
                        }
                      ],
                      "id": 565,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "6575:7:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 574,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6575:77:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 575,
                  "nodeType": "ExpressionStatement",
                  "src": "6575:77:16"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 578,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "6670:21:16",
                        "subExpression": {
                          "id": 577,
                          "name": "provenanceHashFrozen",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 55,
                          "src": "6671:20:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "50726f76656e616e6365206861736820697320616c72656164792066726f7a656e2e",
                        "id": 579,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6693:36:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_559ed8291a015201d03a3f0d68dac147bf0a459a2b39c4c8c6aeba55db4cfedc",
                          "typeString": "literal_string \"Provenance hash is already frozen.\""
                        },
                        "value": "Provenance hash is already frozen."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_559ed8291a015201d03a3f0d68dac147bf0a459a2b39c4c8c6aeba55db4cfedc",
                          "typeString": "literal_string \"Provenance hash is already frozen.\""
                        }
                      ],
                      "id": 576,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "6662:7:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 580,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6662:68:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 581,
                  "nodeType": "ExpressionStatement",
                  "src": "6662:68:16"
                },
                {
                  "expression": {
                    "id": 584,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 582,
                      "name": "provenanceHashFrozen",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 55,
                      "src": "6740:20:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 583,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "6763:4:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "6740:27:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 585,
                  "nodeType": "ExpressionStatement",
                  "src": "6740:27:16"
                }
              ]
            },
            "functionSelector": "81c162f2",
            "id": 587,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 563,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 562,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 862,
                  "src": "6555:9:16"
                },
                "nodeType": "ModifierInvocation",
                "src": "6555:9:16"
              }
            ],
            "name": "freezeProvenanceHash",
            "nameLocation": "6523:20:16",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 561,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6543:2:16"
            },
            "returnParameters": {
              "id": 564,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6565:0:16"
            },
            "scope": 815,
            "src": "6514:260:16",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 598,
              "nodeType": "Block",
              "src": "6855:53:16",
              "statements": [
                {
                  "expression": {
                    "id": 596,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 594,
                      "name": "withdrawlAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 58,
                      "src": "6865:16:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 595,
                      "name": "_withdrawlAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 589,
                      "src": "6884:17:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "6865:36:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 597,
                  "nodeType": "ExpressionStatement",
                  "src": "6865:36:16"
                }
              ]
            },
            "functionSelector": "f4efa3e6",
            "id": 599,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 592,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 591,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 862,
                  "src": "6845:9:16"
                },
                "nodeType": "ModifierInvocation",
                "src": "6845:9:16"
              }
            ],
            "name": "setWithdrawlAddress",
            "nameLocation": "6789:19:16",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 590,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 589,
                  "mutability": "mutable",
                  "name": "_withdrawlAddress",
                  "nameLocation": "6817:17:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 599,
                  "src": "6809:25:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 588,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6809:7:16",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6808:27:16"
            },
            "returnParameters": {
              "id": 593,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6855:0:16"
            },
            "scope": 815,
            "src": "6780:128:16",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 625,
              "nodeType": "Block",
              "src": "6961:147:16",
              "statements": [
                {
                  "assignments": [
                    605,
                    null
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 605,
                      "mutability": "mutable",
                      "name": "success",
                      "nameLocation": "6977:7:16",
                      "nodeType": "VariableDeclaration",
                      "scope": 625,
                      "src": "6972:12:16",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 604,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "6972:4:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    },
                    null
                  ],
                  "id": 619,
                  "initialValue": {
                    "arguments": [
                      {
                        "hexValue": "",
                        "id": 617,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7051:2:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        },
                        "value": ""
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                            "typeString": "literal_string \"\""
                          }
                        ],
                        "expression": {
                          "arguments": [
                            {
                              "id": 608,
                              "name": "withdrawlAddress",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 58,
                              "src": "6998:16:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 607,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "6990:8:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_payable_$",
                              "typeString": "type(address payable)"
                            },
                            "typeName": {
                              "id": 606,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "6990:8:16",
                              "stateMutability": "payable",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 609,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6990:25:16",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "id": 610,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "call",
                        "nodeType": "MemberAccess",
                        "src": "6990:30:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
                          "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                        }
                      },
                      "id": 616,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "names": [
                        "value"
                      ],
                      "nodeType": "FunctionCallOptions",
                      "options": [
                        {
                          "expression": {
                            "arguments": [
                              {
                                "id": 613,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -28,
                                "src": "7036:4:16",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_CryptidToken_$815",
                                  "typeString": "contract CryptidToken"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_CryptidToken_$815",
                                  "typeString": "contract CryptidToken"
                                }
                              ],
                              "id": 612,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "7028:7:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 611,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "7028:7:16",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 614,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "7028:13:16",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "id": 615,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "balance",
                          "nodeType": "MemberAccess",
                          "src": "7028:21:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "src": "6990:60:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
                        "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                      }
                    },
                    "id": 618,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6990:64:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                      "typeString": "tuple(bool,bytes memory)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6971:83:16"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 621,
                        "name": "success",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 605,
                        "src": "7072:7:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "57697468647261776c206661696c65642e",
                        "id": 622,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7081:19:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_021df81ebfc87720144475a3df66803fcc5fc338eb43e88a7f6527f4564da9dd",
                          "typeString": "literal_string \"Withdrawl failed.\""
                        },
                        "value": "Withdrawl failed."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_021df81ebfc87720144475a3df66803fcc5fc338eb43e88a7f6527f4564da9dd",
                          "typeString": "literal_string \"Withdrawl failed.\""
                        }
                      ],
                      "id": 620,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "7064:7:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 623,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7064:37:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 624,
                  "nodeType": "ExpressionStatement",
                  "src": "7064:37:16"
                }
              ]
            },
            "functionSelector": "3ccfd60b",
            "id": 626,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 602,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 601,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 862,
                  "src": "6951:9:16"
                },
                "nodeType": "ModifierInvocation",
                "src": "6951:9:16"
              }
            ],
            "name": "withdraw",
            "nameLocation": "6923:8:16",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 600,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6931:2:16"
            },
            "returnParameters": {
              "id": 603,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6961:0:16"
            },
            "scope": 815,
            "src": "6914:194:16",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 653,
              "nodeType": "Block",
              "src": "7165:233:16",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 637,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 635,
                          "name": "provenanceHashFrozen",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 55,
                          "src": "7183:20:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "74727565",
                          "id": 636,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "7207:4:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        },
                        "src": "7183:28:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "50726f76656e616e63652068617368206d7573742062652066726f7a656e206265666f7265206d696e74696e672063616e2073746172742e",
                        "id": 638,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7213:58:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_f7251fcbcb9cbe770e5b61fdd5f3789d91d612b01bd9a352c7a558ddd9b0d85f",
                          "typeString": "literal_string \"Provenance hash must be frozen before minting can start.\""
                        },
                        "value": "Provenance hash must be frozen before minting can start."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_f7251fcbcb9cbe770e5b61fdd5f3789d91d612b01bd9a352c7a558ddd9b0d85f",
                          "typeString": "literal_string \"Provenance hash must be frozen before minting can start.\""
                        }
                      ],
                      "id": 634,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "7175:7:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 639,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7175:97:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 640,
                  "nodeType": "ExpressionStatement",
                  "src": "7175:97:16"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        "id": 645,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 642,
                            "name": "merkleRoot",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 39,
                            "src": "7290:10:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "id": 643,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "src": "7290:17:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 644,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "7311:1:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "7290:22:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4d65726b6c6520726f6f74206d7573742062652073657420626565666f7265206d696e74696e672063616e2073746172742e",
                        "id": 646,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7314:52:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_32feeff6a70f382791cdb7ac7e7b4a95c02614c02127cab24aa1d8c0c14b82f3",
                          "typeString": "literal_string \"Merkle root must be set beefore minting can start.\""
                        },
                        "value": "Merkle root must be set beefore minting can start."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_32feeff6a70f382791cdb7ac7e7b4a95c02614c02127cab24aa1d8c0c14b82f3",
                          "typeString": "literal_string \"Merkle root must be set beefore minting can start.\""
                        }
                      ],
                      "id": 641,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "7282:7:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 647,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7282:85:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 648,
                  "nodeType": "ExpressionStatement",
                  "src": "7282:85:16"
                },
                {
                  "expression": {
                    "id": 651,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 649,
                      "name": "stage",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 76,
                      "src": "7377:5:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_Stage_$34",
                        "typeString": "enum CryptidToken.Stage"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 650,
                      "name": "_stage",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 629,
                      "src": "7385:6:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_Stage_$34",
                        "typeString": "enum CryptidToken.Stage"
                      }
                    },
                    "src": "7377:14:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_Stage_$34",
                      "typeString": "enum CryptidToken.Stage"
                    }
                  },
                  "id": 652,
                  "nodeType": "ExpressionStatement",
                  "src": "7377:14:16"
                }
              ]
            },
            "functionSelector": "ce3cd997",
            "id": 654,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 632,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 631,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 862,
                  "src": "7155:9:16"
                },
                "nodeType": "ModifierInvocation",
                "src": "7155:9:16"
              }
            ],
            "name": "setStage",
            "nameLocation": "7123:8:16",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 630,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 629,
                  "mutability": "mutable",
                  "name": "_stage",
                  "nameLocation": "7138:6:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 654,
                  "src": "7132:12:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_Stage_$34",
                    "typeString": "enum CryptidToken.Stage"
                  },
                  "typeName": {
                    "id": 628,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 627,
                      "name": "Stage",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 34,
                      "src": "7132:5:16"
                    },
                    "referencedDeclaration": 34,
                    "src": "7132:5:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_Stage_$34",
                      "typeString": "enum CryptidToken.Stage"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7131:14:16"
            },
            "returnParameters": {
              "id": 633,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7165:0:16"
            },
            "scope": 815,
            "src": "7114:284:16",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 664,
              "nodeType": "Block",
              "src": "7491:46:16",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 660,
                          "name": "totalSupply",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            688
                          ],
                          "referencedDeclaration": 688,
                          "src": "7516:11:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                            "typeString": "function () view returns (uint256)"
                          }
                        },
                        "id": 661,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7516:13:16",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 659,
                      "name": "ownerOf",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1198,
                      "src": "7508:7:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
                        "typeString": "function (uint256) view returns (address)"
                      }
                    },
                    "id": 662,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7508:22:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 658,
                  "id": 663,
                  "nodeType": "Return",
                  "src": "7501:29:16"
                }
              ]
            },
            "functionSelector": "6cbb8985",
            "id": 665,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "lastMintAddress",
            "nameLocation": "7442:15:16",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 655,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7457:2:16"
            },
            "returnParameters": {
              "id": 658,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 657,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 665,
                  "src": "7483:7:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 656,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7483:7:16",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7482:9:16"
            },
            "scope": 815,
            "src": "7433:104:16",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 674,
              "nodeType": "Block",
              "src": "7596:38:16",
              "statements": [
                {
                  "expression": {
                    "components": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 670,
                          "name": "totalSupply",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            688
                          ],
                          "referencedDeclaration": 688,
                          "src": "7613:11:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                            "typeString": "function () view returns (uint256)"
                          }
                        },
                        "id": 671,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7613:13:16",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "id": 672,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "7612:15:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 669,
                  "id": 673,
                  "nodeType": "Return",
                  "src": "7606:21:16"
                }
              ]
            },
            "functionSelector": "d6d67a09",
            "id": 675,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "lastMintID",
            "nameLocation": "7552:10:16",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 666,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7562:2:16"
            },
            "returnParameters": {
              "id": 669,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 668,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 675,
                  "src": "7588:7:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 667,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7588:7:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7587:9:16"
            },
            "scope": 815,
            "src": "7543:91:16",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              1972
            ],
            "body": {
              "id": 687,
              "nodeType": "Block",
              "src": "7702:53:16",
              "statements": [
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 685,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "expression": {
                          "id": 681,
                          "name": "_tokenIdCounter",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 37,
                          "src": "7719:15:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Counter_$2227_storage",
                            "typeString": "struct Counters.Counter storage ref"
                          }
                        },
                        "id": 682,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "current",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 2239,
                        "src": "7719:23:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$_t_struct$_Counter_$2227_storage_ptr_$returns$_t_uint256_$bound_to$_t_struct$_Counter_$2227_storage_ptr_$",
                          "typeString": "function (struct Counters.Counter storage pointer) view returns (uint256)"
                        }
                      },
                      "id": 683,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "7719:25:16",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "-",
                    "rightExpression": {
                      "hexValue": "31",
                      "id": 684,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "7747:1:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "src": "7719:29:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 680,
                  "id": 686,
                  "nodeType": "Return",
                  "src": "7712:36:16"
                }
              ]
            },
            "functionSelector": "18160ddd",
            "id": 688,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "totalSupply",
            "nameLocation": "7649:11:16",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 677,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "7675:8:16"
            },
            "parameters": {
              "id": 676,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7660:2:16"
            },
            "returnParameters": {
              "id": 680,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 679,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 688,
                  "src": "7693:7:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 678,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7693:7:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7692:9:16"
            },
            "scope": 815,
            "src": "7640:115:16",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              1260
            ],
            "body": {
              "id": 715,
              "nodeType": "Block",
              "src": "7849:178:16",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 698,
                            "name": "tokenId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 690,
                            "src": "7875:7:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 697,
                          "name": "_exists",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1491,
                          "src": "7867:7:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_bool_$",
                            "typeString": "function (uint256) view returns (bool)"
                          }
                        },
                        "id": 699,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7867:16:16",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4552433732314d657461646174613a2055524920717565727920666f72206e6f6e6578697374656e7420746f6b656e",
                        "id": 700,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7885:49:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_a2d45c0fba603d40d82d590051761ca952d1ab9d78cca6d0d464d7b6e961a9cb",
                          "typeString": "literal_string \"ERC721Metadata: URI query for nonexistent token\""
                        },
                        "value": "ERC721Metadata: URI query for nonexistent token"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_a2d45c0fba603d40d82d590051761ca952d1ab9d78cca6d0d464d7b6e961a9cb",
                          "typeString": "literal_string \"ERC721Metadata: URI query for nonexistent token\""
                        }
                      ],
                      "id": 696,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "7859:7:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 701,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7859:76:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 702,
                  "nodeType": "ExpressionStatement",
                  "src": "7859:76:16"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 707,
                            "name": "baseURI",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 44,
                            "src": "7976:7:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_storage",
                              "typeString": "string storage ref"
                            }
                          },
                          {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "expression": {
                                "id": 708,
                                "name": "tokenId",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 690,
                                "src": "7985:7:16",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 709,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "toString",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 2948,
                              "src": "7985:16:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$bound_to$_t_uint256_$",
                                "typeString": "function (uint256) pure returns (string memory)"
                              }
                            },
                            "id": 710,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "7985:18:16",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          },
                          {
                            "id": 711,
                            "name": "baseExtension",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 47,
                            "src": "8005:13:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_storage",
                              "typeString": "string storage ref"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_string_storage",
                              "typeString": "string storage ref"
                            },
                            {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            },
                            {
                              "typeIdentifier": "t_string_storage",
                              "typeString": "string storage ref"
                            }
                          ],
                          "expression": {
                            "id": 705,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "7959:3:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 706,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encodePacked",
                          "nodeType": "MemberAccess",
                          "src": "7959:16:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 712,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7959:60:16",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 704,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "7952:6:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_string_storage_ptr_$",
                        "typeString": "type(string storage pointer)"
                      },
                      "typeName": {
                        "id": 703,
                        "name": "string",
                        "nodeType": "ElementaryTypeName",
                        "src": "7952:6:16",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 713,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7952:68:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  "functionReturnParameters": 695,
                  "id": 714,
                  "nodeType": "Return",
                  "src": "7945:75:16"
                }
              ]
            },
            "functionSelector": "c87b56dd",
            "id": 716,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "tokenURI",
            "nameLocation": "7770:8:16",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 692,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "7816:8:16"
            },
            "parameters": {
              "id": 691,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 690,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "7787:7:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 716,
                  "src": "7779:15:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 689,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7779:7:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7778:17:16"
            },
            "returnParameters": {
              "id": 695,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 694,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 716,
                  "src": "7834:13:16",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 693,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "7834:6:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7833:15:16"
            },
            "scope": 815,
            "src": "7761:266:16",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "body": {
              "id": 726,
              "nodeType": "Block",
              "src": "8090:55:16",
              "statements": [
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 724,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 721,
                      "name": "totalSaleSupply",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 70,
                      "src": "8107:15:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "-",
                    "rightExpression": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 722,
                        "name": "totalSupply",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [
                          688
                        ],
                        "referencedDeclaration": 688,
                        "src": "8125:11:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                          "typeString": "function () view returns (uint256)"
                        }
                      },
                      "id": 723,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "8125:13:16",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "8107:31:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 720,
                  "id": 725,
                  "nodeType": "Return",
                  "src": "8100:38:16"
                }
              ]
            },
            "functionSelector": "de5f9866",
            "id": 727,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getTokensLeft",
            "nameLocation": "8042:13:16",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 717,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8055:2:16"
            },
            "returnParameters": {
              "id": 720,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 719,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 727,
                  "src": "8081:7:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 718,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8081:7:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8080:9:16"
            },
            "scope": 815,
            "src": "8033:112:16",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 774,
              "nodeType": "Block",
              "src": "8234:274:16",
              "statements": [
                {
                  "assignments": [
                    736
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 736,
                      "mutability": "mutable",
                      "name": "ownerTokenCount",
                      "nameLocation": "8252:15:16",
                      "nodeType": "VariableDeclaration",
                      "scope": 774,
                      "src": "8244:23:16",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 735,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "8244:7:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 740,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 738,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 729,
                        "src": "8280:5:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 737,
                      "name": "balanceOf",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1170,
                      "src": "8270:9:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view returns (uint256)"
                      }
                    },
                    "id": 739,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8270:16:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "8244:42:16"
                },
                {
                  "assignments": [
                    745
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 745,
                      "mutability": "mutable",
                      "name": "tokensIds",
                      "nameLocation": "8313:9:16",
                      "nodeType": "VariableDeclaration",
                      "scope": 774,
                      "src": "8296:26:16",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                        "typeString": "uint256[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 743,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "8296:7:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 744,
                        "nodeType": "ArrayTypeName",
                        "src": "8296:9:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                          "typeString": "uint256[]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 751,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 749,
                        "name": "ownerTokenCount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 736,
                        "src": "8339:15:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 748,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "8325:13:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
                        "typeString": "function (uint256) pure returns (uint256[] memory)"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 746,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "8329:7:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 747,
                        "nodeType": "ArrayTypeName",
                        "src": "8329:9:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                          "typeString": "uint256[]"
                        }
                      }
                    },
                    "id": 750,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8325:30:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                      "typeString": "uint256[] memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "8296:59:16"
                },
                {
                  "body": {
                    "id": 770,
                    "nodeType": "Block",
                    "src": "8407:69:16",
                    "statements": [
                      {
                        "expression": {
                          "id": 768,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 761,
                              "name": "tokensIds",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 745,
                              "src": "8421:9:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                "typeString": "uint256[] memory"
                              }
                            },
                            "id": 763,
                            "indexExpression": {
                              "id": 762,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 753,
                              "src": "8431:1:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "8421:12:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "id": 765,
                                "name": "owner",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 729,
                                "src": "8456:5:16",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              {
                                "id": 766,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 753,
                                "src": "8463:1:16",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "id": 764,
                              "name": "tokenOfOwnerByIndex",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1961,
                              "src": "8436:19:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$_t_address_$_t_uint256_$returns$_t_uint256_$",
                                "typeString": "function (address,uint256) view returns (uint256)"
                              }
                            },
                            "id": 767,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "8436:29:16",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "8421:44:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 769,
                        "nodeType": "ExpressionStatement",
                        "src": "8421:44:16"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 757,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 755,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 753,
                      "src": "8381:1:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "id": 756,
                      "name": "ownerTokenCount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 736,
                      "src": "8385:15:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "8381:19:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 771,
                  "initializationExpression": {
                    "assignments": [
                      753
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 753,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "8378:1:16",
                        "nodeType": "VariableDeclaration",
                        "scope": 771,
                        "src": "8370:9:16",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 752,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "8370:7:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 754,
                    "nodeType": "VariableDeclarationStatement",
                    "src": "8370:9:16"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 759,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "8402:3:16",
                      "subExpression": {
                        "id": 758,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 753,
                        "src": "8402:1:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 760,
                    "nodeType": "ExpressionStatement",
                    "src": "8402:3:16"
                  },
                  "nodeType": "ForStatement",
                  "src": "8365:111:16"
                },
                {
                  "expression": {
                    "id": 772,
                    "name": "tokensIds",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 745,
                    "src": "8492:9:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                      "typeString": "uint256[] memory"
                    }
                  },
                  "functionReturnParameters": 734,
                  "id": 773,
                  "nodeType": "Return",
                  "src": "8485:16:16"
                }
              ]
            },
            "functionSelector": "438b6300",
            "id": 775,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "walletOfOwner",
            "nameLocation": "8164:13:16",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 730,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 729,
                  "mutability": "mutable",
                  "name": "owner",
                  "nameLocation": "8186:5:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 775,
                  "src": "8178:13:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 728,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "8178:7:16",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8177:15:16"
            },
            "returnParameters": {
              "id": 734,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 733,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 775,
                  "src": "8216:16:16",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 731,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "8216:7:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 732,
                    "nodeType": "ArrayTypeName",
                    "src": "8216:9:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8215:18:16"
            },
            "scope": 815,
            "src": "8155:353:16",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              1882,
              2059
            ],
            "body": {
              "id": 797,
              "nodeType": "Block",
              "src": "8649:62:16",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 792,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 777,
                        "src": "8686:4:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 793,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 779,
                        "src": "8692:2:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 794,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 781,
                        "src": "8696:7:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 789,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -25,
                        "src": "8659:5:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_super$_CryptidToken_$815_$",
                          "typeString": "type(contract super CryptidToken)"
                        }
                      },
                      "id": 791,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "_beforeTokenTransfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2059,
                      "src": "8659:26:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 795,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8659:45:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 796,
                  "nodeType": "ExpressionStatement",
                  "src": "8659:45:16"
                }
              ]
            },
            "id": 798,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 784,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 783,
                  "name": "whenNotPaused",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 968,
                  "src": "8600:13:16"
                },
                "nodeType": "ModifierInvocation",
                "src": "8600:13:16"
              }
            ],
            "name": "_beforeTokenTransfer",
            "nameLocation": "8527:20:16",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 787,
              "nodeType": "OverrideSpecifier",
              "overrides": [
                {
                  "id": 785,
                  "name": "ERC721",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1883,
                  "src": "8623:6:16"
                },
                {
                  "id": 786,
                  "name": "ERC721Enumerable",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 2221,
                  "src": "8631:16:16"
                }
              ],
              "src": "8614:34:16"
            },
            "parameters": {
              "id": 782,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 777,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "8556:4:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 798,
                  "src": "8548:12:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 776,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "8548:7:16",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 779,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "8570:2:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 798,
                  "src": "8562:10:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 778,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "8562:7:16",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 781,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "8582:7:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 798,
                  "src": "8574:15:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 780,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8574:7:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8547:43:16"
            },
            "returnParameters": {
              "id": 788,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8649:0:16"
            },
            "scope": 815,
            "src": "8518:193:16",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "baseFunctions": [
              1146,
              1933
            ],
            "body": {
              "id": 813,
              "nodeType": "Block",
              "src": "8894:60:16",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 810,
                        "name": "interfaceId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 800,
                        "src": "8935:11:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      ],
                      "expression": {
                        "id": 808,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -25,
                        "src": "8911:5:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_super$_CryptidToken_$815_$",
                          "typeString": "type(contract super CryptidToken)"
                        }
                      },
                      "id": 809,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "supportsInterface",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1933,
                      "src": "8911:23:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_bytes4_$returns$_t_bool_$",
                        "typeString": "function (bytes4) view returns (bool)"
                      }
                    },
                    "id": 811,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8911:36:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 807,
                  "id": 812,
                  "nodeType": "Return",
                  "src": "8904:43:16"
                }
              ]
            },
            "functionSelector": "01ffc9a7",
            "id": 814,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "supportsInterface",
            "nameLocation": "8794:17:16",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 804,
              "nodeType": "OverrideSpecifier",
              "overrides": [
                {
                  "id": 802,
                  "name": "ERC721",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1883,
                  "src": "8853:6:16"
                },
                {
                  "id": 803,
                  "name": "ERC721Enumerable",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 2221,
                  "src": "8861:16:16"
                }
              ],
              "src": "8844:34:16"
            },
            "parameters": {
              "id": 801,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 800,
                  "mutability": "mutable",
                  "name": "interfaceId",
                  "nameLocation": "8819:11:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 814,
                  "src": "8812:18:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes4",
                    "typeString": "bytes4"
                  },
                  "typeName": {
                    "id": 799,
                    "name": "bytes4",
                    "nodeType": "ElementaryTypeName",
                    "src": "8812:6:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes4",
                      "typeString": "bytes4"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8811:20:16"
            },
            "returnParameters": {
              "id": 807,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 806,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 814,
                  "src": "8888:4:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 805,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "8888:4:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8887:6:16"
            },
            "scope": 815,
            "src": "8785:169:16",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 816,
        "src": "490:8467:16",
        "usedErrors": []
      }
    ],
    "src": "32:8925:16"
  },
  "bytecode": "60a06040819052600060808190526200001b91600f91620001b8565b5060408051808201909152600580825264173539b7b760d91b60209092019182526200004a91601091620001b8565b5060118054610100600160b81b031916761953bc1ff76f5e61cd775a4482bd85bac56ad1eb00000017905567016345785d8a00006017553480156200008e57600080fd5b5060405162003b5838038062003b58833981016040819052620000b1916200032b565b865187908790620000ca906000906020850190620001b8565b508051620000e0906001906020840190620001b8565b5050600a805460ff1916905550620000f83362000155565b6001600b556012849055601483905560168290556011805460ff191660ff831617905584516200013090600f906020880190620001b8565b5062000148600c620001af60201b620021e31760201c565b5050505050505062000432565b600a80546001600160a01b03838116610100818102610100600160a81b031985161790945560405193909204169182907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b80546001019055565b828054620001c690620003f5565b90600052602060002090601f016020900481019282620001ea576000855562000235565b82601f106200020557805160ff191683800117855562000235565b8280016001018555821562000235579182015b828111156200023557825182559160200191906001019062000218565b506200024392915062000247565b5090565b5b8082111562000243576000815560010162000248565b634e487b7160e01b600052604160045260246000fd5b600082601f8301126200028657600080fd5b81516001600160401b0380821115620002a357620002a36200025e565b604051601f8301601f19908116603f01168101908282118183101715620002ce57620002ce6200025e565b81604052838152602092508683858801011115620002eb57600080fd5b600091505b838210156200030f5785820183015181830184015290820190620002f0565b83821115620003215760008385830101525b9695505050505050565b600080600080600080600060e0888a0312156200034757600080fd5b87516001600160401b03808211156200035f57600080fd5b6200036d8b838c0162000274565b985060208a01519150808211156200038457600080fd5b620003928b838c0162000274565b975060408a0151915080821115620003a957600080fd5b50620003b88a828b0162000274565b955050606088015193506080880151925060a0880151915060c088015160ff81168114620003e557600080fd5b8091505092959891949750929550565b600181811c908216806200040a57607f821691505b602082108114156200042c57634e487b7160e01b600052602260045260246000fd5b50919050565b61371680620004426000396000f3fe6080604052600436106103815760003560e01c80637cb64759116101d1578063c668286211610102578063de5f9866116100a0578063f2fde38b1161006f578063f2fde38b146109e5578063f4efa3e614610a05578063f51f96dd14610a25578063ffa9cd3b14610a3b57600080fd5b8063de5f986614610946578063de7fcb1d1461095b578063e7bc820814610987578063e985e9c51461099c57600080fd5b8063c884ef83116100dc578063c884ef83146108c1578063ce3cd997146108f1578063d6d67a0914610911578063da3ef23f1461092657600080fd5b8063c668286214610877578063c6ab67a31461088c578063c87b56dd146108a157600080fd5b8063a22cb4651161016f578063bbc903ea11610149578063bbc903ea146107fb578063c040e6b81461081b578063c29de63014610842578063c32145811461086157600080fd5b8063a22cb4651461079b578063b3caad01146107bb578063b88d4fde146107db57600080fd5b8063858e83b5116101ab578063858e83b5146107305780638da5cb5b1461074357806395d89b41146107665780639a2a9c3d1461077b57600080fd5b80637cb64759146106e657806381c162f2146107065780638456cb591461071b57600080fd5b80633f4ba83a116102b65780636352211e11610254578063715018a611610223578063715018a61461067b5780637823197814610690578063791a2519146106a65780637b671780146106c657600080fd5b80636352211e146106115780636c0360eb146106315780636cbb89851461064657806370a082311461065b57600080fd5b80634f6ccce7116102905780634f6ccce71461059957806355f804b3146105b95780635c975abb146105d9578063622e4e78146105f157600080fd5b80633f4ba83a1461053757806342842e0e1461054c578063438b63001461056c57600080fd5b806320841a6a116103235780632f745c59116102fd5780632f745c59146104e657806333e6141314610506578063372f657c1461051c5780633ccfd60b1461052f57600080fd5b806320841a6a1461049057806323b872dd146104b05780632eb4a7ab146104d057600080fd5b8063088139a61161035f578063088139a614610415578063095ea7b314610439578063109695231461045b57806318160ddd1461047b57600080fd5b806301ffc9a71461038657806306fdde03146103bb578063081812fc146103dd575b600080fd5b34801561039257600080fd5b506103a66103a1366004612f2e565b610a62565b60405190151581526020015b60405180910390f35b3480156103c757600080fd5b506103d0610a73565b6040516103b29190612faa565b3480156103e957600080fd5b506103fd6103f8366004612fbd565b610b05565b6040516001600160a01b0390911681526020016103b2565b34801561042157600080fd5b5061042b60155481565b6040519081526020016103b2565b34801561044557600080fd5b50610459610454366004612ff2565b610b9f565b005b34801561046757600080fd5b506104596104763660046130a8565b610cb5565b34801561048757600080fd5b5061042b610db6565b34801561049c57600080fd5b506104596104ab366004612fbd565b610dd2565b3480156104bc57600080fd5b506104596104cb3660046130f1565b610e07565b3480156104dc57600080fd5b5061042b600d5481565b3480156104f257600080fd5b5061042b610501366004612ff2565b610e38565b34801561051257600080fd5b5061042b60125481565b61045961052a36600461312d565b610ece565b6104596111f0565b34801561054357600080fd5b506104596112c1565b34801561055857600080fd5b506104596105673660046130f1565b6112fb565b34801561057857600080fd5b5061058c6105873660046131a2565b611316565b6040516103b291906131bd565b3480156105a557600080fd5b5061042b6105b4366004612fbd565b6113b8565b3480156105c557600080fd5b506104596105d43660046130a8565b61144b565b3480156105e557600080fd5b50600a5460ff166103a6565b3480156105fd57600080fd5b5061045961060c366004613212565b6114db565b34801561061d57600080fd5b506103fd61062c366004612fbd565b611521565b34801561063d57600080fd5b506103d0611598565b34801561065257600080fd5b506103fd611626565b34801561066757600080fd5b5061042b6106763660046131a2565b611633565b34801561068757600080fd5b506104596116ba565b34801561069c57600080fd5b5061042b60165481565b3480156106b257600080fd5b506104596106c1366004612fbd565b6116f4565b3480156106d257600080fd5b506104596106e1366004613212565b611729565b3480156106f257600080fd5b50610459610701366004612fbd565b611888565b34801561071257600080fd5b506104596118bd565b34801561072757600080fd5b506104596119c2565b61045961073e366004613212565b6119fa565b34801561074f57600080fd5b50600a5461010090046001600160a01b03166103fd565b34801561077257600080fd5b506103d0611c5c565b34801561078757600080fd5b506011546103a69062010000900460ff1681565b3480156107a757600080fd5b506104596107b636600461322d565b611c6b565b3480156107c757600080fd5b506104596107d6366004613269565b611c76565b3480156107e757600080fd5b506104596107f636600461329c565b611d5a565b34801561080757600080fd5b506104596108163660046131a2565b611d92565b34801561082757600080fd5b506018546108359060ff1681565b6040516103b2919061332e565b34801561084e57600080fd5b506011546103a690610100900460ff1681565b34801561086d57600080fd5b5061042b60145481565b34801561088357600080fd5b506103d0611de6565b34801561089857600080fd5b506103d0611df3565b3480156108ad57600080fd5b506103d06108bc366004612fbd565b611e00565b3480156108cd57600080fd5b506103a66108dc3660046131a2565b60136020526000908152604090205460ff1681565b3480156108fd57600080fd5b5061045961090c366004613356565b611eb4565b34801561091d57600080fd5b5061042b611f8e565b34801561093257600080fd5b506104596109413660046130a8565b611f98565b34801561095257600080fd5b5061042b611fdb565b34801561096757600080fd5b506011546109759060ff1681565b60405160ff90911681526020016103b2565b34801561099357600080fd5b50610459611ff2565b3480156109a857600080fd5b506103a66109b7366004613377565b6001600160a01b03918216600090815260056020908152604080832093909416825291909152205460ff1690565b3480156109f157600080fd5b50610459610a003660046131a2565b6120e9565b348015610a1157600080fd5b50610459610a203660046131a2565b612187565b348015610a3157600080fd5b5061042b60175481565b348015610a4757600080fd5b506011546103fd90630100000090046001600160a01b031681565b6000610a6d826121ec565b92915050565b606060008054610a8290613393565b80601f0160208091040260200160405190810160405280929190818152602001828054610aae90613393565b8015610afb5780601f10610ad057610100808354040283529160200191610afb565b820191906000526020600020905b815481529060010190602001808311610ade57829003601f168201915b5050505050905090565b6000818152600260205260408120546001600160a01b0316610b835760405162461bcd60e51b815260206004820152602c60248201527f4552433732313a20617070726f76656420717565727920666f72206e6f6e657860448201526b34b9ba32b73a103a37b5b2b760a11b60648201526084015b60405180910390fd5b506000908152600460205260409020546001600160a01b031690565b6000610baa82611521565b9050806001600160a01b0316836001600160a01b03161415610c185760405162461bcd60e51b815260206004820152602160248201527f4552433732313a20617070726f76616c20746f2063757272656e74206f776e656044820152603960f91b6064820152608401610b7a565b336001600160a01b0382161480610c345750610c3481336109b7565b610ca65760405162461bcd60e51b815260206004820152603860248201527f4552433732313a20617070726f76652063616c6c6572206973206e6f74206f7760448201527f6e6572206e6f7220617070726f76656420666f7220616c6c00000000000000006064820152608401610b7a565b610cb08383612211565b505050565b600a546001600160a01b03610100909104163314610ce55760405162461bcd60e51b8152600401610b7a906133ce565b6000815111610d465760405162461bcd60e51b815260206004820152602760248201527f50726f76656e616e636520686173682063616e6e6f7420626520656d7074792060448201526639ba3934b7339760c91b6064820152608401610b7a565b60115462010000900460ff1615610d9f5760405162461bcd60e51b815260206004820152601a60248201527f50726f76656e616e636520686173682069732066726f7a656e2e0000000000006044820152606401610b7a565b8051610db290600e906020840190612e7f565b5050565b60006001610dc3600c5490565b610dcd9190613419565b905090565b600a546001600160a01b03610100909104163314610e025760405162461bcd60e51b8152600401610b7a906133ce565b601455565b610e11338261227f565b610e2d5760405162461bcd60e51b8152600401610b7a90613430565b610cb0838383612376565b6000610e4383611633565b8210610ea55760405162461bcd60e51b815260206004820152602b60248201527f455243373231456e756d657261626c653a206f776e657220696e646578206f7560448201526a74206f6620626f756e647360a81b6064820152608401610b7a565b506001600160a01b03919091166000908152600660209081526040808320938352929052205490565b600d546040516bffffffffffffffffffffffff193360601b16602082015283918391610f4c908290603401604051602081830303815290604052805190602001208585808060200260200160405190810160405280939291908181526020018383602002808284376000920191909152509294939250506125219050565b610f985760405162461bcd60e51b815260206004820152601960248201527f41646472657373206e6f7420696e2077686974656c6973742e000000000000006044820152606401610b7a565b601754600134610fa88284613481565b14610ff15760405162461bcd60e51b815260206004820152601960248201527824b731b7b93932b1ba1022aa24103b30b63ab29039b2b73a1760391b6044820152606401610b7a565b6002600b5414156110445760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c006044820152606401610b7a565b6002600b55600a5460ff161561106c5760405162461bcd60e51b8152600401610b7a906134a0565b600160185460ff16600381111561108557611085613318565b146110d25760405162461bcd60e51b815260206004820152601d60248201527f57686974656c6973742073616c65206e6f7420696e697469617465642e0000006044820152606401610b7a565b3360009081526013602052604090205460ff16156111325760405162461bcd60e51b815260206004820152601f60248201527f57686974656c697374206d696e7420616c726561647920636c61696d65642e006044820152606401610b7a565b60125461113d610db6565b6111489060016134ca565b11156111a85760405162461bcd60e51b815260206004820152602960248201527f4d696e7420616d6f756e742077696c6c206578636565642077686974656c69736044820152683a1039bab838363c9760b91b6064820152608401610b7a565b336000818152601360205260409020805460ff191660011790556111d4906111cf600c5490565b612537565b6111e2600c80546001019055565b50506001600b555050505050565b600a546001600160a01b036101009091041633146112205760405162461bcd60e51b8152600401610b7a906133ce565b601154604051600091630100000090046001600160a01b03169047908381818185875af1925050503d8060008114611274576040519150601f19603f3d011682016040523d82523d6000602084013e611279565b606091505b50509050806112be5760405162461bcd60e51b81526020600482015260116024820152702bb4ba34323930bbb6103330b4b632b21760791b6044820152606401610b7a565b50565b600a546001600160a01b036101009091041633146112f15760405162461bcd60e51b8152600401610b7a906133ce565b6112f9612551565b565b610cb083838360405180602001604052806000815250611d5a565b6060600061132383611633565b905060008167ffffffffffffffff8111156113405761134061301c565b604051908082528060200260200182016040528015611369578160200160208202803683370190505b50905060005b828110156113b0576113818582610e38565b828281518110611393576113936134e2565b6020908102919091010152806113a8816134f8565b91505061136f565b509392505050565b60006113c360085490565b82106114265760405162461bcd60e51b815260206004820152602c60248201527f455243373231456e756d657261626c653a20676c6f62616c20696e646578206f60448201526b7574206f6620626f756e647360a01b6064820152608401610b7a565b60088281548110611439576114396134e2565b90600052602060002001549050919050565b600a546001600160a01b0361010090910416331461147b5760405162461bcd60e51b8152600401610b7a906133ce565b601154610100900460ff16156114c85760405162461bcd60e51b81526020600482015260126024820152712130b9b2aaa9249034b990333937bd32b71760711b6044820152606401610b7a565b8051610db290600f906020840190612e7f565b600a546001600160a01b0361010090910416331461150b5760405162461bcd60e51b8152600401610b7a906133ce565b6011805460ff191660ff92909216919091179055565b6000818152600260205260408120546001600160a01b031680610a6d5760405162461bcd60e51b815260206004820152602960248201527f4552433732313a206f776e657220717565727920666f72206e6f6e657869737460448201526832b73a103a37b5b2b760b91b6064820152608401610b7a565b600f80546115a590613393565b80601f01602080910402602001604051908101604052809291908181526020018280546115d190613393565b801561161e5780601f106115f35761010080835404028352916020019161161e565b820191906000526020600020905b81548152906001019060200180831161160157829003601f168201915b505050505081565b6000610dcd61062c610db6565b60006001600160a01b03821661169e5760405162461bcd60e51b815260206004820152602a60248201527f4552433732313a2062616c616e636520717565727920666f7220746865207a65604482015269726f206164647265737360b01b6064820152608401610b7a565b506001600160a01b031660009081526003602052604090205490565b600a546001600160a01b036101009091041633146116ea5760405162461bcd60e51b8152600401610b7a906133ce565b6112f960006125e4565b600a546001600160a01b036101009091041633146117245760405162461bcd60e51b8152600401610b7a906133ce565b601755565b600a546001600160a01b036101009091041633146117595760405162461bcd60e51b8152600401610b7a906133ce565b600260185460ff16600381111561177257611772613318565b146117bf5760405162461bcd60e51b815260206004820152601d60248201527f57686974656c6973742073616c65206e6f7420696e697469617465642e0000006044820152606401610b7a565b6014546015546117d29060ff84166134ca565b11156118335760405162461bcd60e51b815260206004820152602a60248201527f5472616e73616374696f6e206578636565647320746f74616c207465616d2d73604482015269616c6520737570706c7960b01b6064820152608401610b7a565b8060ff166015600082825461184891906134ca565b90915550600190505b8160ff168111610db257611868336111cf600c5490565b611876600c80546001019055565b80611880816134f8565b915050611851565b600a546001600160a01b036101009091041633146118b85760405162461bcd60e51b8152600401610b7a906133ce565b600d55565b600a546001600160a01b036101009091041633146118ed5760405162461bcd60e51b8152600401610b7a906133ce565b6000600e80546118fc90613393565b90501161194b5760405162461bcd60e51b815260206004820181905260248201527f50726f76656e616e636520686173682063616e6e6f7420626520656d7074792e6044820152606401610b7a565b60115462010000900460ff16156119af5760405162461bcd60e51b815260206004820152602260248201527f50726f76656e616e6365206861736820697320616c72656164792066726f7a65604482015261371760f11b6064820152608401610b7a565b6011805462ff0000191662010000179055565b600a546001600160a01b036101009091041633146119f25760405162461bcd60e51b8152600401610b7a906133ce565b6112f961263e565b60175460ff821634611a0c8284613481565b14611a555760405162461bcd60e51b815260206004820152601960248201527824b731b7b93932b1ba1022aa24103b30b63ab29039b2b73a1760391b6044820152606401610b7a565b6002600b541415611aa85760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c006044820152606401610b7a565b6002600b55600a5460ff1615611ad05760405162461bcd60e51b8152600401610b7a906134a0565b600360185460ff166003811115611ae957611ae9613318565b14611b365760405162461bcd60e51b815260206004820152601a60248201527f5075626c69632053616c65206e6f7420696e697469617465642e0000000000006044820152606401610b7a565b6016548360ff16611b45610db6565b611b4f91906134ca565b1115611bab5760405162461bcd60e51b815260206004820152602560248201527f5472616e73616374696f6e206578636565647320746f74616c2073616c6520736044820152647570706c7960d81b6064820152608401610b7a565b60115460ff9081169084161115611c175760405162461bcd60e51b815260206004820152602a60248201527f45786365656473206d617820616c6c6f776564206d696e74732070657220747260448201526930b739b0b1ba34b7b71760b11b6064820152608401610b7a565b60015b8360ff168111611c5157611c31336111cf600c5490565b611c3f600c80546001019055565b80611c49816134f8565b915050611c1a565b50506001600b555050565b606060018054610a8290613393565b610db2338383612696565b600a546001600160a01b03610100909104163314611ca65760405162461bcd60e51b8152600401610b7a906133ce565b6016548260ff16611cb5610db6565b611cbf91906134ca565b1115611d205760405162461bcd60e51b815260206004820152602a60248201527f4d696e7420616d6f756e742077696c6c2065786365656420746f74616c20736160448201526936329039bab838363c9760b11b6064820152608401610b7a565b60015b8260ff168111610cb057611d3a826111cf600c5490565b611d48600c80546001019055565b80611d52816134f8565b915050611d23565b611d64338361227f565b611d805760405162461bcd60e51b8152600401610b7a90613430565b611d8c84848484612765565b50505050565b600a546001600160a01b03610100909104163314611dc25760405162461bcd60e51b8152600401610b7a906133ce565b6001600160a01b03166000908152601360205260409020805460ff19166001179055565b601080546115a590613393565b600e80546115a590613393565b6000818152600260205260409020546060906001600160a01b0316611e7f5760405162461bcd60e51b815260206004820152602f60248201527f4552433732314d657461646174613a2055524920717565727920666f72206e6f60448201526e3732bc34b9ba32b73a103a37b5b2b760891b6064820152608401610b7a565b600f611e8a83612798565b6010604051602001611e9e939291906135ad565b6040516020818303038152906040529050919050565b600a546001600160a01b03610100909104163314611ee45760405162461bcd60e51b8152600401610b7a906133ce565b60115462010000900460ff161515600114611f675760405162461bcd60e51b815260206004820152603860248201527f50726f76656e616e63652068617368206d7573742062652066726f7a656e206260448201527f65666f7265206d696e74696e672063616e2073746172742e00000000000000006064820152608401610b7a565b6018805482919060ff19166001836003811115611f8657611f86613318565b021790555050565b6000610dcd610db6565b600a546001600160a01b03610100909104163314611fc85760405162461bcd60e51b8152600401610b7a906133ce565b8051610db2906010906020840190612e7f565b6000611fe5610db6565b601654610dcd9190613419565b600a546001600160a01b036101009091041633146120225760405162461bcd60e51b8152600401610b7a906133ce565b6000600f805461203190613393565b9050116120805760405162461bcd60e51b815260206004820152601760248201527f626173655552492063616e6e6f7420626520656d7074790000000000000000006044820152606401610b7a565b601154610100900460ff16156120d85760405162461bcd60e51b815260206004820152601a60248201527f4261736555524920697320616c72656164792066726f7a656e2e0000000000006044820152606401610b7a565b6011805461ff001916610100179055565b600a546001600160a01b036101009091041633146121195760405162461bcd60e51b8152600401610b7a906133ce565b6001600160a01b03811661217e5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610b7a565b6112be816125e4565b600a546001600160a01b036101009091041633146121b75760405162461bcd60e51b8152600401610b7a906133ce565b601180546001600160a01b039092166301000000026301000000600160b81b0319909216919091179055565b80546001019055565b60006001600160e01b0319821663780e9d6360e01b1480610a6d5750610a6d82612896565b600081815260046020526040902080546001600160a01b0319166001600160a01b038416908117909155819061224682611521565b6001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b6000818152600260205260408120546001600160a01b03166122f85760405162461bcd60e51b815260206004820152602c60248201527f4552433732313a206f70657261746f7220717565727920666f72206e6f6e657860448201526b34b9ba32b73a103a37b5b2b760a11b6064820152608401610b7a565b600061230383611521565b9050806001600160a01b0316846001600160a01b0316148061233e5750836001600160a01b031661233384610b05565b6001600160a01b0316145b8061236e57506001600160a01b0380821660009081526005602090815260408083209388168352929052205460ff165b949350505050565b826001600160a01b031661238982611521565b6001600160a01b0316146123f15760405162461bcd60e51b815260206004820152602960248201527f4552433732313a207472616e73666572206f6620746f6b656e2074686174206960448201526839903737ba1037bbb760b91b6064820152608401610b7a565b6001600160a01b0382166124535760405162461bcd60e51b8152602060048201526024808201527f4552433732313a207472616e7366657220746f20746865207a65726f206164646044820152637265737360e01b6064820152608401610b7a565b61245e8383836128e6565b612469600082612211565b6001600160a01b0383166000908152600360205260408120805460019290612492908490613419565b90915550506001600160a01b03821660009081526003602052604081208054600192906124c09084906134ca565b909155505060008181526002602052604080822080546001600160a01b0319166001600160a01b0386811691821790925591518493918716917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4505050565b60008261252e8584612914565b14949350505050565b610db28282604051806020016040528060008152506129b8565b600a5460ff1661259a5760405162461bcd60e51b815260206004820152601460248201527314185d5cd8589b194e881b9bdd081c185d5cd95960621b6044820152606401610b7a565b600a805460ff191690557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa335b6040516001600160a01b03909116815260200160405180910390a1565b600a80546001600160a01b03838116610100818102610100600160a81b031985161790945560405193909204169182907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b600a5460ff16156126615760405162461bcd60e51b8152600401610b7a906134a0565b600a805460ff191660011790557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a2586125c73390565b816001600160a01b0316836001600160a01b031614156126f85760405162461bcd60e51b815260206004820152601960248201527f4552433732313a20617070726f766520746f2063616c6c6572000000000000006044820152606401610b7a565b6001600160a01b03838116600081815260056020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b612770848484612376565b61277c848484846129eb565b611d8c5760405162461bcd60e51b8152600401610b7a906135e0565b6060816127bc5750506040805180820190915260018152600360fc1b602082015290565b8160005b81156127e657806127d0816134f8565b91506127df9050600a83613648565b91506127c0565b60008167ffffffffffffffff8111156128015761280161301c565b6040519080825280601f01601f19166020018201604052801561282b576020820181803683370190505b5090505b841561236e57612840600183613419565b915061284d600a8661365c565b6128589060306134ca565b60f81b81838151811061286d5761286d6134e2565b60200101906001600160f81b031916908160001a90535061288f600a86613648565b945061282f565b60006001600160e01b031982166380ac58cd60e01b14806128c757506001600160e01b03198216635b5e139f60e01b145b80610a6d57506301ffc9a760e01b6001600160e01b0319831614610a6d565b600a5460ff16156129095760405162461bcd60e51b8152600401610b7a906134a0565b610cb0838383612ae9565b600081815b84518110156113b0576000858281518110612936576129366134e2565b602002602001015190508083116129785760408051602081018590529081018290526060016040516020818303038152906040528051906020012092506129a5565b60408051602081018390529081018490526060016040516020818303038152906040528051906020012092505b50806129b0816134f8565b915050612919565b6129c28383612ba1565b6129cf60008484846129eb565b610cb05760405162461bcd60e51b8152600401610b7a906135e0565b60006001600160a01b0384163b15612ade57604051630a85bd0160e11b81526001600160a01b0385169063150b7a0290612a2f903390899088908890600401613670565b6020604051808303816000875af1925050508015612a6a575060408051601f3d908101601f19168201909252612a67918101906136ad565b60015b612ac4573d808015612a98576040519150601f19603f3d011682016040523d82523d6000602084013e612a9d565b606091505b508051612abc5760405162461bcd60e51b8152600401610b7a906135e0565b805181602001fd5b6001600160e01b031916630a85bd0160e11b14905061236e565b506001949350505050565b6001600160a01b038316612b4457612b3f81600880546000838152600960205260408120829055600182018355919091527ff3f7a9fe364faab93b216da50a3214154f22a0a2b415b23a84c8169e8b636ee30155565b612b67565b816001600160a01b0316836001600160a01b031614612b6757612b678382612cef565b6001600160a01b038216612b7e57610cb081612d8c565b826001600160a01b0316826001600160a01b031614610cb057610cb08282612e3b565b6001600160a01b038216612bf75760405162461bcd60e51b815260206004820181905260248201527f4552433732313a206d696e7420746f20746865207a65726f20616464726573736044820152606401610b7a565b6000818152600260205260409020546001600160a01b031615612c5c5760405162461bcd60e51b815260206004820152601c60248201527f4552433732313a20746f6b656e20616c7265616479206d696e746564000000006044820152606401610b7a565b612c68600083836128e6565b6001600160a01b0382166000908152600360205260408120805460019290612c919084906134ca565b909155505060008181526002602052604080822080546001600160a01b0319166001600160a01b03861690811790915590518392907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a45050565b60006001612cfc84611633565b612d069190613419565b600083815260076020526040902054909150808214612d59576001600160a01b03841660009081526006602090815260408083208584528252808320548484528184208190558352600790915290208190555b5060009182526007602090815260408084208490556001600160a01b039094168352600681528383209183525290812055565b600854600090612d9e90600190613419565b60008381526009602052604081205460088054939450909284908110612dc657612dc66134e2565b906000526020600020015490508060088381548110612de757612de76134e2565b6000918252602080832090910192909255828152600990915260408082208490558582528120556008805480612e1f57612e1f6136ca565b6001900381819060005260206000200160009055905550505050565b6000612e4683611633565b6001600160a01b039093166000908152600660209081526040808320868452825280832085905593825260079052919091209190915550565b828054612e8b90613393565b90600052602060002090601f016020900481019282612ead5760008555612ef3565b82601f10612ec657805160ff1916838001178555612ef3565b82800160010185558215612ef3579182015b82811115612ef3578251825591602001919060010190612ed8565b50612eff929150612f03565b5090565b5b80821115612eff5760008155600101612f04565b6001600160e01b0319811681146112be57600080fd5b600060208284031215612f4057600080fd5b8135612f4b81612f18565b9392505050565b60005b83811015612f6d578181015183820152602001612f55565b83811115611d8c5750506000910152565b60008151808452612f96816020860160208601612f52565b601f01601f19169290920160200192915050565b602081526000612f4b6020830184612f7e565b600060208284031215612fcf57600080fd5b5035919050565b80356001600160a01b0381168114612fed57600080fd5b919050565b6000806040838503121561300557600080fd5b61300e83612fd6565b946020939093013593505050565b634e487b7160e01b600052604160045260246000fd5b600067ffffffffffffffff8084111561304d5761304d61301c565b604051601f8501601f19908116603f011681019082821181831017156130755761307561301c565b8160405280935085815286868601111561308e57600080fd5b858560208301376000602087830101525050509392505050565b6000602082840312156130ba57600080fd5b813567ffffffffffffffff8111156130d157600080fd5b8201601f810184136130e257600080fd5b61236e84823560208401613032565b60008060006060848603121561310657600080fd5b61310f84612fd6565b925061311d60208501612fd6565b9150604084013590509250925092565b6000806020838503121561314057600080fd5b823567ffffffffffffffff8082111561315857600080fd5b818501915085601f83011261316c57600080fd5b81358181111561317b57600080fd5b8660208260051b850101111561319057600080fd5b60209290920196919550909350505050565b6000602082840312156131b457600080fd5b612f4b82612fd6565b6020808252825182820181905260009190848201906040850190845b818110156131f5578351835292840192918401916001016131d9565b50909695505050505050565b803560ff81168114612fed57600080fd5b60006020828403121561322457600080fd5b612f4b82613201565b6000806040838503121561324057600080fd5b61324983612fd6565b91506020830135801515811461325e57600080fd5b809150509250929050565b6000806040838503121561327c57600080fd5b61328583613201565b915061329360208401612fd6565b90509250929050565b600080600080608085870312156132b257600080fd5b6132bb85612fd6565b93506132c960208601612fd6565b925060408501359150606085013567ffffffffffffffff8111156132ec57600080fd5b8501601f810187136132fd57600080fd5b61330c87823560208401613032565b91505092959194509250565b634e487b7160e01b600052602160045260246000fd5b602081016004831061335057634e487b7160e01b600052602160045260246000fd5b91905290565b60006020828403121561336857600080fd5b813560048110612f4b57600080fd5b6000806040838503121561338a57600080fd5b61328583612fd6565b600181811c908216806133a757607f821691505b602082108114156133c857634e487b7160e01b600052602260045260246000fd5b50919050565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b634e487b7160e01b600052601160045260246000fd5b60008282101561342b5761342b613403565b500390565b60208082526031908201527f4552433732313a207472616e736665722063616c6c6572206973206e6f74206f6040820152701ddb995c881b9bdc88185c1c1c9bdd9959607a1b606082015260800190565b600081600019048311821515161561349b5761349b613403565b500290565b60208082526010908201526f14185d5cd8589b194e881c185d5cd95960821b604082015260600190565b600082198211156134dd576134dd613403565b500190565b634e487b7160e01b600052603260045260246000fd5b600060001982141561350c5761350c613403565b5060010190565b8054600090600181811c908083168061352d57607f831692505b602080841082141561354f57634e487b7160e01b600052602260045260246000fd5b8180156135635760018114613574576135a1565b60ff198616895284890196506135a1565b60008881526020902060005b868110156135995781548b820152908501908301613580565b505084890196505b50505050505092915050565b60006135b98286613513565b84516135c9818360208901612f52565b6135d581830186613513565b979650505050505050565b60208082526032908201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560408201527131b2b4bb32b91034b6b83632b6b2b73a32b960711b606082015260800190565b634e487b7160e01b600052601260045260246000fd5b60008261365757613657613632565b500490565b60008261366b5761366b613632565b500690565b6001600160a01b03858116825284166020820152604081018390526080606082018190526000906136a390830184612f7e565b9695505050505050565b6000602082840312156136bf57600080fd5b8151612f4b81612f18565b634e487b7160e01b600052603160045260246000fdfea26469706673582212209417ac7ae8b4eec52a75127bb2ce25f205ed66089bf35ca7d905920f20e3aa4964736f6c634300080a0033",
  "bytecodeSha1": "20efeab3e9873b835c66196893e7c7cd5332fb01",
  "compiler": {
    "evm_version": "istanbul",
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "version": "0.8.10+commit.fc410830"
  },
  "contractName": "CryptidToken",
  "coverageMap": {
    "branches": {
      "0": {
        "Ownable.transferOwnership": {
          "191": [
            2006,
            2028,
            true
          ]
        }
      },
      "1": {},
      "10": {},
      "11": {},
      "12": {
        "Strings.toString": {
          "193": [
            601,
            611,
            false
          ]
        }
      },
      "13": {
        "MerkleProof.processProof": {
          "190": [
            1628,
            1656,
            false
          ]
        }
      },
      "14": {},
      "15": {},
      "16": {
        "CryptidToken.airdropCryptid": {
          "166": [
            2751,
            2797,
            true
          ]
        },
        "CryptidToken.freezeBaseURI": {
          "168": [
            5550,
            5575,
            true
          ],
          "169": [
            5621,
            5636,
            true
          ]
        },
        "CryptidToken.freezeProvenanceHash": {
          "161": [
            6583,
            6615,
            true
          ],
          "162": [
            6670,
            6691,
            true
          ]
        },
        "CryptidToken.publicMint": {
          "163": [
            4458,
            4483,
            true
          ],
          "164": [
            4532,
            4579,
            true
          ],
          "165": [
            4639,
            4666,
            true
          ]
        },
        "CryptidToken.setBaseURI": {
          "158": [
            5401,
            5416,
            true
          ]
        },
        "CryptidToken.setProvenanceHash": {
          "151": [
            6312,
            6345,
            true
          ],
          "152": [
            6407,
            6428,
            true
          ]
        },
        "CryptidToken.setStage": {
          "167": [
            7183,
            7211,
            true
          ]
        },
        "CryptidToken.teamMint": {
          "159": [
            3833,
            3856,
            true
          ],
          "160": [
            3908,
            3953,
            true
          ]
        },
        "CryptidToken.whitelistMint": {
          "153": [
            2330,
            2389,
            true
          ],
          "154": [
            3310,
            3334,
            true
          ],
          "155": [
            3386,
            3414,
            true
          ],
          "156": [
            3469,
            3505,
            true
          ]
        },
        "CryptidToken.withdraw": {
          "157": [
            7072,
            7079,
            true
          ]
        }
      },
      "2": {
        "CryptidToken.publicMint": {
          "192": [
            2325,
            2344,
            true
          ]
        }
      },
      "3": {
        "ERC721._mint": {
          "182": [
            9142,
            9158,
            true
          ]
        },
        "ERC721._safeMint": {
          "181": [
            8604,
            8658,
            true
          ]
        },
        "ERC721._safeTransfer": {
          "180": [
            6731,
            6779,
            true
          ]
        },
        "ERC721._setApprovalForAll": {
          "179": [
            11442,
            11459,
            true
          ]
        },
        "ERC721._transfer": {
          "177": [
            10451,
            10482,
            true
          ],
          "178": [
            10546,
            10562,
            true
          ]
        },
        "ERC721.approve": {
          "170": [
            3659,
            3670,
            true
          ],
          "171": [
            3740,
            3761,
            true
          ],
          "172": [
            3765,
            3802,
            true
          ]
        },
        "ERC721.balanceOf": {
          "175": [
            2013,
            2032,
            true
          ]
        },
        "ERC721.ownerOf": {
          "174": [
            2317,
            2336,
            true
          ]
        },
        "ERC721.safeTransferFrom": {
          "176": [
            5521,
            5562,
            true
          ]
        },
        "ERC721.transferFrom": {
          "173": [
            4900,
            4941,
            true
          ]
        }
      },
      "4": {},
      "6": {
        "ERC721Enumerable._beforeTokenTransfer": {
          "185": [
            2823,
            2841,
            false
          ],
          "186": [
            2918,
            2928,
            false
          ],
          "187": [
            3015,
            3031,
            false
          ],
          "188": [
            3113,
            3123,
            false
          ]
        },
        "ERC721Enumerable._removeTokenFromOwnerEnumeration": {
          "189": [
            5154,
            5182,
            false
          ]
        },
        "ERC721Enumerable.tokenByIndex": {
          "184": [
            1900,
            1938,
            true
          ]
        },
        "ERC721Enumerable.tokenOfOwnerByIndex": {
          "183": [
            1415,
            1446,
            true
          ]
        }
      },
      "7": {},
      "8": {}
    },
    "statements": {
      "0": {
        "Ownable._transferOwnership": {
          "103": [
            2378,
            2395
          ],
          "104": [
            2405,
            2450
          ]
        },
        "Ownable.owner": {
          "1": [
            1101,
            1114
          ]
        },
        "Ownable.renounceOwnership": {
          "45": [
            1732,
            1762
          ]
        },
        "Ownable.transferOwnership": {
          "83": [
            1998,
            2071
          ],
          "84": [
            2081,
            2109
          ]
        }
      },
      "1": {
        "Pausable._pause": {
          "105": [
            1922,
            1936
          ],
          "106": [
            1946,
            1971
          ]
        },
        "Pausable._unpause": {
          "101": [
            2168,
            2183
          ],
          "102": [
            2193,
            2220
          ]
        },
        "Pausable.paused": {
          "0": [
            1161,
            1175
          ]
        }
      },
      "10": {
        "Context._msgSender": {
          "9": [
            712,
            729
          ]
        }
      },
      "11": {
        "Counters.current": {
          "16": [
            911,
            932
          ]
        },
        "Counters.increment": {
          "28": [
            1032,
            1051
          ]
        }
      },
      "12": {
        "Strings.toString": {
          "112": [
            627,
            637
          ],
          "113": [
            743,
            751
          ],
          "114": [
            765,
            775
          ],
          "115": [
            877,
            888
          ],
          "116": [
            902,
            958
          ],
          "117": [
            972,
            983
          ]
        }
      },
      "13": {
        "MerkleProof.processProof": {
          "121": [
            1754,
            1824
          ],
          "122": [
            1941,
            2011
          ],
          "123": [
            1560,
            1563
          ]
        },
        "MerkleProof.verify": {
          "99": [
            984,
            1024
          ]
        }
      },
      "14": {
        "ERC165.supportsInterface": {
          "119": [
            930,
            977
          ]
        }
      },
      "15": {},
      "16": {
        "CryptidToken._beforeTokenTransfer": {
          "120": [
            8659,
            8704
          ]
        },
        "CryptidToken.airdropCryptid": {
          "66": [
            2743,
            2844
          ],
          "67": [
            2910,
            2950
          ],
          "68": [
            2964,
            2991
          ],
          "69": [
            2891,
            2894
          ]
        },
        "CryptidToken.freezeBaseURI": {
          "80": [
            5542,
            5603
          ],
          "81": [
            5613,
            5667
          ],
          "82": [
            5677,
            5698
          ]
        },
        "CryptidToken.freezeProvenanceHash": {
          "54": [
            6575,
            6652
          ],
          "55": [
            6662,
            6730
          ],
          "56": [
            6740,
            6767
          ]
        },
        "CryptidToken.getTokensLeft": {
          "79": [
            8100,
            8138
          ]
        },
        "CryptidToken.lastMintAddress": {
          "42": [
            7501,
            7530
          ]
        },
        "CryptidToken.lastMintID": {
          "77": [
            7606,
            7627
          ]
        },
        "CryptidToken.overrideClaim": {
          "72": [
            5169,
            5194
          ]
        },
        "CryptidToken.pause": {
          "57": [
            4962,
            4970
          ]
        },
        "CryptidToken.publicMint": {
          "58": [
            4450,
            4514
          ],
          "59": [
            4524,
            4621
          ],
          "60": [
            4631,
            4713
          ],
          "61": [
            4782,
            4830
          ],
          "62": [
            4844,
            4871
          ],
          "63": [
            4763,
            4766
          ]
        },
        "CryptidToken.setBaseExtension": {
          "78": [
            5931,
            5964
          ]
        },
        "CryptidToken.setBaseURI": {
          "38": [
            5393,
            5439
          ],
          "39": [
            5449,
            5470
          ]
        },
        "CryptidToken.setMaxMintPerTx": {
          "40": [
            6173,
            6204
          ]
        },
        "CryptidToken.setMerkleRoot": {
          "53": [
            5280,
            5304
          ]
        },
        "CryptidToken.setProvenanceHash": {
          "12": [
            6304,
            6389
          ],
          "13": [
            6399,
            6459
          ],
          "14": [
            6469,
            6501
          ]
        },
        "CryptidToken.setPublicSalePrice": {
          "46": [
            6057,
            6082
          ]
        },
        "CryptidToken.setStage": {
          "75": [
            7175,
            7272
          ],
          "76": [
            7377,
            7391
          ]
        },
        "CryptidToken.setTeamMintSupply": {
          "17": [
            5795,
            5830
          ]
        },
        "CryptidToken.setWithdrawlAddress": {
          "85": [
            6865,
            6901
          ]
        },
        "CryptidToken.supportsInterface": {
          "3": [
            8904,
            8947
          ]
        },
        "CryptidToken.teamMint": {
          "47": [
            3825,
            3890
          ],
          "48": [
            3900,
            4000
          ],
          "49": [
            4016,
            4044
          ],
          "50": [
            4111,
            4159
          ],
          "51": [
            4173,
            4200
          ],
          "52": [
            4092,
            4095
          ]
        },
        "CryptidToken.tokenURI": {
          "73": [
            7859,
            7935
          ],
          "74": [
            7945,
            8020
          ]
        },
        "CryptidToken.totalSupply": {
          "15": [
            7712,
            7748
          ]
        },
        "CryptidToken.unpause": {
          "30": [
            5031,
            5041
          ]
        },
        "CryptidToken.walletOfOwner": {
          "32": [
            8421,
            8465
          ],
          "33": [
            8402,
            8405
          ],
          "34": [
            8485,
            8501
          ]
        },
        "CryptidToken.whitelistMint": {
          "22": [
            3302,
            3368
          ],
          "23": [
            3378,
            3450
          ],
          "24": [
            3461,
            3551
          ],
          "25": [
            3561,
            3587
          ],
          "26": [
            3597,
            3645
          ],
          "27": [
            3655,
            3682
          ]
        },
        "CryptidToken.withdraw": {
          "29": [
            7064,
            7101
          ]
        }
      },
      "2": {},
      "3": {
        "ERC721._approve": {
          "87": [
            11069,
            11098
          ],
          "88": [
            11108,
            11159
          ]
        },
        "ERC721._checkOnERC721Received": {
          "126": [
            12647,
            12707
          ],
          "127": [
            12481,
            12539
          ],
          "128": [
            12911,
            12922
          ]
        },
        "ERC721._exists": {
          "5": [
            7225,
            7262
          ]
        },
        "ERC721._isApprovedOrOwner": {
          "89": [
            7536,
            7609
          ],
          "90": [
            7668,
            7764
          ]
        },
        "ERC721._mint": {
          "135": [
            9134,
            9195
          ],
          "136": [
            9205,
            9263
          ],
          "137": [
            9274,
            9319
          ],
          "138": [
            9330,
            9348
          ],
          "139": [
            9358,
            9379
          ],
          "140": [
            9390,
            9428
          ]
        },
        "ERC721._safeMint": {
          "100": [
            8176,
            8202
          ],
          "124": [
            8555,
            8573
          ],
          "125": [
            8583,
            8734
          ]
        },
        "ERC721._safeTransfer": {
          "110": [
            6685,
            6713
          ],
          "111": [
            6723,
            6834
          ]
        },
        "ERC721._setApprovalForAll": {
          "107": [
            11434,
            11489
          ],
          "108": [
            11499,
            11545
          ],
          "109": [
            11555,
            11601
          ]
        },
        "ERC721._transfer": {
          "91": [
            10443,
            10528
          ],
          "92": [
            10538,
            10603
          ],
          "93": [
            10614,
            10653
          ],
          "94": [
            10715,
            10744
          ],
          "95": [
            10755,
            10775
          ],
          "96": [
            10785,
            10803
          ],
          "97": [
            10813,
            10834
          ],
          "98": [
            10845,
            10877
          ]
        },
        "ERC721.approve": {
          "8": [
            3651,
            3708
          ],
          "10": [
            3719,
            3884
          ],
          "11": [
            3895,
            3916
          ]
        },
        "ERC721.balanceOf": {
          "43": [
            2005,
            2079
          ],
          "44": [
            2089,
            2112
          ]
        },
        "ERC721.getApproved": {
          "6": [
            4079,
            4152
          ],
          "7": [
            4163,
            4194
          ]
        },
        "ERC721.isApprovedForAll": {
          "2": [
            4600,
            4642
          ]
        },
        "ERC721.name": {
          "4": [
            2552,
            2564
          ]
        },
        "ERC721.ownerOf": {
          "41": [
            2309,
            2382
          ]
        },
        "ERC721.safeTransferFrom": {
          "31": [
            5240,
            5279
          ],
          "70": [
            5513,
            5616
          ],
          "71": [
            5626,
            5665
          ]
        },
        "ERC721.setApprovalForAll": {
          "65": [
            4362,
            4414
          ]
        },
        "ERC721.supportsInterface": {
          "118": [
            1673,
            1848
          ]
        },
        "ERC721.symbol": {
          "64": [
            2716,
            2730
          ]
        },
        "ERC721.transferFrom": {
          "18": [
            4892,
            4995
          ],
          "19": [
            5006,
            5034
          ]
        }
      },
      "4": {},
      "6": {
        "ERC721Enumerable._addTokenToAllTokensEnumeration": {
          "130": [
            3978,
            4022
          ],
          "131": [
            4032,
            4056
          ]
        },
        "ERC721Enumerable._addTokenToOwnerEnumeration": {
          "149": [
            3621,
            3655
          ],
          "150": [
            3665,
            3700
          ]
        },
        "ERC721Enumerable._beforeTokenTransfer": {
          "129": [
            2857,
            2897
          ],
          "132": [
            2944,
            2991
          ],
          "133": [
            3047,
            3092
          ],
          "134": [
            3139,
            3179
          ]
        },
        "ERC721Enumerable._removeTokenFromAllTokensEnumeration": {
          "145": [
            6669,
            6705
          ],
          "146": [
            6773,
            6814
          ],
          "147": [
            6935,
            6966
          ],
          "148": [
            6976,
            6992
          ]
        },
        "ERC721Enumerable._removeTokenFromOwnerEnumeration": {
          "141": [
            5269,
            5313
          ],
          "142": [
            5385,
            5428
          ],
          "143": [
            5559,
            5592
          ],
          "144": [
            5602,
            5643
          ]
        },
        "ERC721Enumerable.supportsInterface": {
          "86": [
            1108,
            1205
          ]
        },
        "ERC721Enumerable.tokenByIndex": {
          "35": [
            1892,
            1987
          ],
          "37": [
            1997,
            2021
          ]
        },
        "ERC721Enumerable.tokenOfOwnerByIndex": {
          "20": [
            1407,
            1494
          ],
          "21": [
            1504,
            1537
          ]
        },
        "ERC721Enumerable.totalSupply": {
          "36": [
            1695,
            1719
          ]
        }
      },
      "7": {},
      "8": {}
    }
  },
  "dependencies": [
    "OpenZeppelin/openzeppelin-contracts@4.4.1/Context",
    "OpenZeppelin/openzeppelin-contracts@4.4.1/Counters",
    "OpenZeppelin/openzeppelin-contracts@4.4.1/ERC165",
    "OpenZeppelin/openzeppelin-contracts@4.4.1/ERC721",
    "OpenZeppelin/openzeppelin-contracts@4.4.1/ERC721Enumerable",
    "OpenZeppelin/openzeppelin-contracts@4.4.1/IERC165",
    "OpenZeppelin/openzeppelin-contracts@4.4.1/IERC721",
    "OpenZeppelin/openzeppelin-contracts@4.4.1/IERC721Enumerable",
    "OpenZeppelin/openzeppelin-contracts@4.4.1/IERC721Metadata",
    "OpenZeppelin/openzeppelin-contracts@4.4.1/MerkleProof",
    "OpenZeppelin/openzeppelin-contracts@4.4.1/Ownable",
    "OpenZeppelin/openzeppelin-contracts@4.4.1/Pausable",
    "OpenZeppelin/openzeppelin-contracts@4.4.1/ReentrancyGuard",
    "OpenZeppelin/openzeppelin-contracts@4.4.1/Strings"
  ],
  "deployedBytecode": "6080604052600436106103815760003560e01c80637cb64759116101d1578063c668286211610102578063de5f9866116100a0578063f2fde38b1161006f578063f2fde38b146109e5578063f4efa3e614610a05578063f51f96dd14610a25578063ffa9cd3b14610a3b57600080fd5b8063de5f986614610946578063de7fcb1d1461095b578063e7bc820814610987578063e985e9c51461099c57600080fd5b8063c884ef83116100dc578063c884ef83146108c1578063ce3cd997146108f1578063d6d67a0914610911578063da3ef23f1461092657600080fd5b8063c668286214610877578063c6ab67a31461088c578063c87b56dd146108a157600080fd5b8063a22cb4651161016f578063bbc903ea11610149578063bbc903ea146107fb578063c040e6b81461081b578063c29de63014610842578063c32145811461086157600080fd5b8063a22cb4651461079b578063b3caad01146107bb578063b88d4fde146107db57600080fd5b8063858e83b5116101ab578063858e83b5146107305780638da5cb5b1461074357806395d89b41146107665780639a2a9c3d1461077b57600080fd5b80637cb64759146106e657806381c162f2146107065780638456cb591461071b57600080fd5b80633f4ba83a116102b65780636352211e11610254578063715018a611610223578063715018a61461067b5780637823197814610690578063791a2519146106a65780637b671780146106c657600080fd5b80636352211e146106115780636c0360eb146106315780636cbb89851461064657806370a082311461065b57600080fd5b80634f6ccce7116102905780634f6ccce71461059957806355f804b3146105b95780635c975abb146105d9578063622e4e78146105f157600080fd5b80633f4ba83a1461053757806342842e0e1461054c578063438b63001461056c57600080fd5b806320841a6a116103235780632f745c59116102fd5780632f745c59146104e657806333e6141314610506578063372f657c1461051c5780633ccfd60b1461052f57600080fd5b806320841a6a1461049057806323b872dd146104b05780632eb4a7ab146104d057600080fd5b8063088139a61161035f578063088139a614610415578063095ea7b314610439578063109695231461045b57806318160ddd1461047b57600080fd5b806301ffc9a71461038657806306fdde03146103bb578063081812fc146103dd575b600080fd5b34801561039257600080fd5b506103a66103a1366004612f2e565b610a62565b60405190151581526020015b60405180910390f35b3480156103c757600080fd5b506103d0610a73565b6040516103b29190612faa565b3480156103e957600080fd5b506103fd6103f8366004612fbd565b610b05565b6040516001600160a01b0390911681526020016103b2565b34801561042157600080fd5b5061042b60155481565b6040519081526020016103b2565b34801561044557600080fd5b50610459610454366004612ff2565b610b9f565b005b34801561046757600080fd5b506104596104763660046130a8565b610cb5565b34801561048757600080fd5b5061042b610db6565b34801561049c57600080fd5b506104596104ab366004612fbd565b610dd2565b3480156104bc57600080fd5b506104596104cb3660046130f1565b610e07565b3480156104dc57600080fd5b5061042b600d5481565b3480156104f257600080fd5b5061042b610501366004612ff2565b610e38565b34801561051257600080fd5b5061042b60125481565b61045961052a36600461312d565b610ece565b6104596111f0565b34801561054357600080fd5b506104596112c1565b34801561055857600080fd5b506104596105673660046130f1565b6112fb565b34801561057857600080fd5b5061058c6105873660046131a2565b611316565b6040516103b291906131bd565b3480156105a557600080fd5b5061042b6105b4366004612fbd565b6113b8565b3480156105c557600080fd5b506104596105d43660046130a8565b61144b565b3480156105e557600080fd5b50600a5460ff166103a6565b3480156105fd57600080fd5b5061045961060c366004613212565b6114db565b34801561061d57600080fd5b506103fd61062c366004612fbd565b611521565b34801561063d57600080fd5b506103d0611598565b34801561065257600080fd5b506103fd611626565b34801561066757600080fd5b5061042b6106763660046131a2565b611633565b34801561068757600080fd5b506104596116ba565b34801561069c57600080fd5b5061042b60165481565b3480156106b257600080fd5b506104596106c1366004612fbd565b6116f4565b3480156106d257600080fd5b506104596106e1366004613212565b611729565b3480156106f257600080fd5b50610459610701366004612fbd565b611888565b34801561071257600080fd5b506104596118bd565b34801561072757600080fd5b506104596119c2565b61045961073e366004613212565b6119fa565b34801561074f57600080fd5b50600a5461010090046001600160a01b03166103fd565b34801561077257600080fd5b506103d0611c5c565b34801561078757600080fd5b506011546103a69062010000900460ff1681565b3480156107a757600080fd5b506104596107b636600461322d565b611c6b565b3480156107c757600080fd5b506104596107d6366004613269565b611c76565b3480156107e757600080fd5b506104596107f636600461329c565b611d5a565b34801561080757600080fd5b506104596108163660046131a2565b611d92565b34801561082757600080fd5b506018546108359060ff1681565b6040516103b2919061332e565b34801561084e57600080fd5b506011546103a690610100900460ff1681565b34801561086d57600080fd5b5061042b60145481565b34801561088357600080fd5b506103d0611de6565b34801561089857600080fd5b506103d0611df3565b3480156108ad57600080fd5b506103d06108bc366004612fbd565b611e00565b3480156108cd57600080fd5b506103a66108dc3660046131a2565b60136020526000908152604090205460ff1681565b3480156108fd57600080fd5b5061045961090c366004613356565b611eb4565b34801561091d57600080fd5b5061042b611f8e565b34801561093257600080fd5b506104596109413660046130a8565b611f98565b34801561095257600080fd5b5061042b611fdb565b34801561096757600080fd5b506011546109759060ff1681565b60405160ff90911681526020016103b2565b34801561099357600080fd5b50610459611ff2565b3480156109a857600080fd5b506103a66109b7366004613377565b6001600160a01b03918216600090815260056020908152604080832093909416825291909152205460ff1690565b3480156109f157600080fd5b50610459610a003660046131a2565b6120e9565b348015610a1157600080fd5b50610459610a203660046131a2565b612187565b348015610a3157600080fd5b5061042b60175481565b348015610a4757600080fd5b506011546103fd90630100000090046001600160a01b031681565b6000610a6d826121ec565b92915050565b606060008054610a8290613393565b80601f0160208091040260200160405190810160405280929190818152602001828054610aae90613393565b8015610afb5780601f10610ad057610100808354040283529160200191610afb565b820191906000526020600020905b815481529060010190602001808311610ade57829003601f168201915b5050505050905090565b6000818152600260205260408120546001600160a01b0316610b835760405162461bcd60e51b815260206004820152602c60248201527f4552433732313a20617070726f76656420717565727920666f72206e6f6e657860448201526b34b9ba32b73a103a37b5b2b760a11b60648201526084015b60405180910390fd5b506000908152600460205260409020546001600160a01b031690565b6000610baa82611521565b9050806001600160a01b0316836001600160a01b03161415610c185760405162461bcd60e51b815260206004820152602160248201527f4552433732313a20617070726f76616c20746f2063757272656e74206f776e656044820152603960f91b6064820152608401610b7a565b336001600160a01b0382161480610c345750610c3481336109b7565b610ca65760405162461bcd60e51b815260206004820152603860248201527f4552433732313a20617070726f76652063616c6c6572206973206e6f74206f7760448201527f6e6572206e6f7220617070726f76656420666f7220616c6c00000000000000006064820152608401610b7a565b610cb08383612211565b505050565b600a546001600160a01b03610100909104163314610ce55760405162461bcd60e51b8152600401610b7a906133ce565b6000815111610d465760405162461bcd60e51b815260206004820152602760248201527f50726f76656e616e636520686173682063616e6e6f7420626520656d7074792060448201526639ba3934b7339760c91b6064820152608401610b7a565b60115462010000900460ff1615610d9f5760405162461bcd60e51b815260206004820152601a60248201527f50726f76656e616e636520686173682069732066726f7a656e2e0000000000006044820152606401610b7a565b8051610db290600e906020840190612e7f565b5050565b60006001610dc3600c5490565b610dcd9190613419565b905090565b600a546001600160a01b03610100909104163314610e025760405162461bcd60e51b8152600401610b7a906133ce565b601455565b610e11338261227f565b610e2d5760405162461bcd60e51b8152600401610b7a90613430565b610cb0838383612376565b6000610e4383611633565b8210610ea55760405162461bcd60e51b815260206004820152602b60248201527f455243373231456e756d657261626c653a206f776e657220696e646578206f7560448201526a74206f6620626f756e647360a81b6064820152608401610b7a565b506001600160a01b03919091166000908152600660209081526040808320938352929052205490565b600d546040516bffffffffffffffffffffffff193360601b16602082015283918391610f4c908290603401604051602081830303815290604052805190602001208585808060200260200160405190810160405280939291908181526020018383602002808284376000920191909152509294939250506125219050565b610f985760405162461bcd60e51b815260206004820152601960248201527f41646472657373206e6f7420696e2077686974656c6973742e000000000000006044820152606401610b7a565b601754600134610fa88284613481565b14610ff15760405162461bcd60e51b815260206004820152601960248201527824b731b7b93932b1ba1022aa24103b30b63ab29039b2b73a1760391b6044820152606401610b7a565b6002600b5414156110445760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c006044820152606401610b7a565b6002600b55600a5460ff161561106c5760405162461bcd60e51b8152600401610b7a906134a0565b600160185460ff16600381111561108557611085613318565b146110d25760405162461bcd60e51b815260206004820152601d60248201527f57686974656c6973742073616c65206e6f7420696e697469617465642e0000006044820152606401610b7a565b3360009081526013602052604090205460ff16156111325760405162461bcd60e51b815260206004820152601f60248201527f57686974656c697374206d696e7420616c726561647920636c61696d65642e006044820152606401610b7a565b60125461113d610db6565b6111489060016134ca565b11156111a85760405162461bcd60e51b815260206004820152602960248201527f4d696e7420616d6f756e742077696c6c206578636565642077686974656c69736044820152683a1039bab838363c9760b91b6064820152608401610b7a565b336000818152601360205260409020805460ff191660011790556111d4906111cf600c5490565b612537565b6111e2600c80546001019055565b50506001600b555050505050565b600a546001600160a01b036101009091041633146112205760405162461bcd60e51b8152600401610b7a906133ce565b601154604051600091630100000090046001600160a01b03169047908381818185875af1925050503d8060008114611274576040519150601f19603f3d011682016040523d82523d6000602084013e611279565b606091505b50509050806112be5760405162461bcd60e51b81526020600482015260116024820152702bb4ba34323930bbb6103330b4b632b21760791b6044820152606401610b7a565b50565b600a546001600160a01b036101009091041633146112f15760405162461bcd60e51b8152600401610b7a906133ce565b6112f9612551565b565b610cb083838360405180602001604052806000815250611d5a565b6060600061132383611633565b905060008167ffffffffffffffff8111156113405761134061301c565b604051908082528060200260200182016040528015611369578160200160208202803683370190505b50905060005b828110156113b0576113818582610e38565b828281518110611393576113936134e2565b6020908102919091010152806113a8816134f8565b91505061136f565b509392505050565b60006113c360085490565b82106114265760405162461bcd60e51b815260206004820152602c60248201527f455243373231456e756d657261626c653a20676c6f62616c20696e646578206f60448201526b7574206f6620626f756e647360a01b6064820152608401610b7a565b60088281548110611439576114396134e2565b90600052602060002001549050919050565b600a546001600160a01b0361010090910416331461147b5760405162461bcd60e51b8152600401610b7a906133ce565b601154610100900460ff16156114c85760405162461bcd60e51b81526020600482015260126024820152712130b9b2aaa9249034b990333937bd32b71760711b6044820152606401610b7a565b8051610db290600f906020840190612e7f565b600a546001600160a01b0361010090910416331461150b5760405162461bcd60e51b8152600401610b7a906133ce565b6011805460ff191660ff92909216919091179055565b6000818152600260205260408120546001600160a01b031680610a6d5760405162461bcd60e51b815260206004820152602960248201527f4552433732313a206f776e657220717565727920666f72206e6f6e657869737460448201526832b73a103a37b5b2b760b91b6064820152608401610b7a565b600f80546115a590613393565b80601f01602080910402602001604051908101604052809291908181526020018280546115d190613393565b801561161e5780601f106115f35761010080835404028352916020019161161e565b820191906000526020600020905b81548152906001019060200180831161160157829003601f168201915b505050505081565b6000610dcd61062c610db6565b60006001600160a01b03821661169e5760405162461bcd60e51b815260206004820152602a60248201527f4552433732313a2062616c616e636520717565727920666f7220746865207a65604482015269726f206164647265737360b01b6064820152608401610b7a565b506001600160a01b031660009081526003602052604090205490565b600a546001600160a01b036101009091041633146116ea5760405162461bcd60e51b8152600401610b7a906133ce565b6112f960006125e4565b600a546001600160a01b036101009091041633146117245760405162461bcd60e51b8152600401610b7a906133ce565b601755565b600a546001600160a01b036101009091041633146117595760405162461bcd60e51b8152600401610b7a906133ce565b600260185460ff16600381111561177257611772613318565b146117bf5760405162461bcd60e51b815260206004820152601d60248201527f57686974656c6973742073616c65206e6f7420696e697469617465642e0000006044820152606401610b7a565b6014546015546117d29060ff84166134ca565b11156118335760405162461bcd60e51b815260206004820152602a60248201527f5472616e73616374696f6e206578636565647320746f74616c207465616d2d73604482015269616c6520737570706c7960b01b6064820152608401610b7a565b8060ff166015600082825461184891906134ca565b90915550600190505b8160ff168111610db257611868336111cf600c5490565b611876600c80546001019055565b80611880816134f8565b915050611851565b600a546001600160a01b036101009091041633146118b85760405162461bcd60e51b8152600401610b7a906133ce565b600d55565b600a546001600160a01b036101009091041633146118ed5760405162461bcd60e51b8152600401610b7a906133ce565b6000600e80546118fc90613393565b90501161194b5760405162461bcd60e51b815260206004820181905260248201527f50726f76656e616e636520686173682063616e6e6f7420626520656d7074792e6044820152606401610b7a565b60115462010000900460ff16156119af5760405162461bcd60e51b815260206004820152602260248201527f50726f76656e616e6365206861736820697320616c72656164792066726f7a65604482015261371760f11b6064820152608401610b7a565b6011805462ff0000191662010000179055565b600a546001600160a01b036101009091041633146119f25760405162461bcd60e51b8152600401610b7a906133ce565b6112f961263e565b60175460ff821634611a0c8284613481565b14611a555760405162461bcd60e51b815260206004820152601960248201527824b731b7b93932b1ba1022aa24103b30b63ab29039b2b73a1760391b6044820152606401610b7a565b6002600b541415611aa85760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c006044820152606401610b7a565b6002600b55600a5460ff1615611ad05760405162461bcd60e51b8152600401610b7a906134a0565b600360185460ff166003811115611ae957611ae9613318565b14611b365760405162461bcd60e51b815260206004820152601a60248201527f5075626c69632053616c65206e6f7420696e697469617465642e0000000000006044820152606401610b7a565b6016548360ff16611b45610db6565b611b4f91906134ca565b1115611bab5760405162461bcd60e51b815260206004820152602560248201527f5472616e73616374696f6e206578636565647320746f74616c2073616c6520736044820152647570706c7960d81b6064820152608401610b7a565b60115460ff9081169084161115611c175760405162461bcd60e51b815260206004820152602a60248201527f45786365656473206d617820616c6c6f776564206d696e74732070657220747260448201526930b739b0b1ba34b7b71760b11b6064820152608401610b7a565b60015b8360ff168111611c5157611c31336111cf600c5490565b611c3f600c80546001019055565b80611c49816134f8565b915050611c1a565b50506001600b555050565b606060018054610a8290613393565b610db2338383612696565b600a546001600160a01b03610100909104163314611ca65760405162461bcd60e51b8152600401610b7a906133ce565b6016548260ff16611cb5610db6565b611cbf91906134ca565b1115611d205760405162461bcd60e51b815260206004820152602a60248201527f4d696e7420616d6f756e742077696c6c2065786365656420746f74616c20736160448201526936329039bab838363c9760b11b6064820152608401610b7a565b60015b8260ff168111610cb057611d3a826111cf600c5490565b611d48600c80546001019055565b80611d52816134f8565b915050611d23565b611d64338361227f565b611d805760405162461bcd60e51b8152600401610b7a90613430565b611d8c84848484612765565b50505050565b600a546001600160a01b03610100909104163314611dc25760405162461bcd60e51b8152600401610b7a906133ce565b6001600160a01b03166000908152601360205260409020805460ff19166001179055565b601080546115a590613393565b600e80546115a590613393565b6000818152600260205260409020546060906001600160a01b0316611e7f5760405162461bcd60e51b815260206004820152602f60248201527f4552433732314d657461646174613a2055524920717565727920666f72206e6f60448201526e3732bc34b9ba32b73a103a37b5b2b760891b6064820152608401610b7a565b600f611e8a83612798565b6010604051602001611e9e939291906135ad565b6040516020818303038152906040529050919050565b600a546001600160a01b03610100909104163314611ee45760405162461bcd60e51b8152600401610b7a906133ce565b60115462010000900460ff161515600114611f675760405162461bcd60e51b815260206004820152603860248201527f50726f76656e616e63652068617368206d7573742062652066726f7a656e206260448201527f65666f7265206d696e74696e672063616e2073746172742e00000000000000006064820152608401610b7a565b6018805482919060ff19166001836003811115611f8657611f86613318565b021790555050565b6000610dcd610db6565b600a546001600160a01b03610100909104163314611fc85760405162461bcd60e51b8152600401610b7a906133ce565b8051610db2906010906020840190612e7f565b6000611fe5610db6565b601654610dcd9190613419565b600a546001600160a01b036101009091041633146120225760405162461bcd60e51b8152600401610b7a906133ce565b6000600f805461203190613393565b9050116120805760405162461bcd60e51b815260206004820152601760248201527f626173655552492063616e6e6f7420626520656d7074790000000000000000006044820152606401610b7a565b601154610100900460ff16156120d85760405162461bcd60e51b815260206004820152601a60248201527f4261736555524920697320616c72656164792066726f7a656e2e0000000000006044820152606401610b7a565b6011805461ff001916610100179055565b600a546001600160a01b036101009091041633146121195760405162461bcd60e51b8152600401610b7a906133ce565b6001600160a01b03811661217e5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610b7a565b6112be816125e4565b600a546001600160a01b036101009091041633146121b75760405162461bcd60e51b8152600401610b7a906133ce565b601180546001600160a01b039092166301000000026301000000600160b81b0319909216919091179055565b80546001019055565b60006001600160e01b0319821663780e9d6360e01b1480610a6d5750610a6d82612896565b600081815260046020526040902080546001600160a01b0319166001600160a01b038416908117909155819061224682611521565b6001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b6000818152600260205260408120546001600160a01b03166122f85760405162461bcd60e51b815260206004820152602c60248201527f4552433732313a206f70657261746f7220717565727920666f72206e6f6e657860448201526b34b9ba32b73a103a37b5b2b760a11b6064820152608401610b7a565b600061230383611521565b9050806001600160a01b0316846001600160a01b0316148061233e5750836001600160a01b031661233384610b05565b6001600160a01b0316145b8061236e57506001600160a01b0380821660009081526005602090815260408083209388168352929052205460ff165b949350505050565b826001600160a01b031661238982611521565b6001600160a01b0316146123f15760405162461bcd60e51b815260206004820152602960248201527f4552433732313a207472616e73666572206f6620746f6b656e2074686174206960448201526839903737ba1037bbb760b91b6064820152608401610b7a565b6001600160a01b0382166124535760405162461bcd60e51b8152602060048201526024808201527f4552433732313a207472616e7366657220746f20746865207a65726f206164646044820152637265737360e01b6064820152608401610b7a565b61245e8383836128e6565b612469600082612211565b6001600160a01b0383166000908152600360205260408120805460019290612492908490613419565b90915550506001600160a01b03821660009081526003602052604081208054600192906124c09084906134ca565b909155505060008181526002602052604080822080546001600160a01b0319166001600160a01b0386811691821790925591518493918716917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4505050565b60008261252e8584612914565b14949350505050565b610db28282604051806020016040528060008152506129b8565b600a5460ff1661259a5760405162461bcd60e51b815260206004820152601460248201527314185d5cd8589b194e881b9bdd081c185d5cd95960621b6044820152606401610b7a565b600a805460ff191690557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa335b6040516001600160a01b03909116815260200160405180910390a1565b600a80546001600160a01b03838116610100818102610100600160a81b031985161790945560405193909204169182907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b600a5460ff16156126615760405162461bcd60e51b8152600401610b7a906134a0565b600a805460ff191660011790557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a2586125c73390565b816001600160a01b0316836001600160a01b031614156126f85760405162461bcd60e51b815260206004820152601960248201527f4552433732313a20617070726f766520746f2063616c6c6572000000000000006044820152606401610b7a565b6001600160a01b03838116600081815260056020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b612770848484612376565b61277c848484846129eb565b611d8c5760405162461bcd60e51b8152600401610b7a906135e0565b6060816127bc5750506040805180820190915260018152600360fc1b602082015290565b8160005b81156127e657806127d0816134f8565b91506127df9050600a83613648565b91506127c0565b60008167ffffffffffffffff8111156128015761280161301c565b6040519080825280601f01601f19166020018201604052801561282b576020820181803683370190505b5090505b841561236e57612840600183613419565b915061284d600a8661365c565b6128589060306134ca565b60f81b81838151811061286d5761286d6134e2565b60200101906001600160f81b031916908160001a90535061288f600a86613648565b945061282f565b60006001600160e01b031982166380ac58cd60e01b14806128c757506001600160e01b03198216635b5e139f60e01b145b80610a6d57506301ffc9a760e01b6001600160e01b0319831614610a6d565b600a5460ff16156129095760405162461bcd60e51b8152600401610b7a906134a0565b610cb0838383612ae9565b600081815b84518110156113b0576000858281518110612936576129366134e2565b602002602001015190508083116129785760408051602081018590529081018290526060016040516020818303038152906040528051906020012092506129a5565b60408051602081018390529081018490526060016040516020818303038152906040528051906020012092505b50806129b0816134f8565b915050612919565b6129c28383612ba1565b6129cf60008484846129eb565b610cb05760405162461bcd60e51b8152600401610b7a906135e0565b60006001600160a01b0384163b15612ade57604051630a85bd0160e11b81526001600160a01b0385169063150b7a0290612a2f903390899088908890600401613670565b6020604051808303816000875af1925050508015612a6a575060408051601f3d908101601f19168201909252612a67918101906136ad565b60015b612ac4573d808015612a98576040519150601f19603f3d011682016040523d82523d6000602084013e612a9d565b606091505b508051612abc5760405162461bcd60e51b8152600401610b7a906135e0565b805181602001fd5b6001600160e01b031916630a85bd0160e11b14905061236e565b506001949350505050565b6001600160a01b038316612b4457612b3f81600880546000838152600960205260408120829055600182018355919091527ff3f7a9fe364faab93b216da50a3214154f22a0a2b415b23a84c8169e8b636ee30155565b612b67565b816001600160a01b0316836001600160a01b031614612b6757612b678382612cef565b6001600160a01b038216612b7e57610cb081612d8c565b826001600160a01b0316826001600160a01b031614610cb057610cb08282612e3b565b6001600160a01b038216612bf75760405162461bcd60e51b815260206004820181905260248201527f4552433732313a206d696e7420746f20746865207a65726f20616464726573736044820152606401610b7a565b6000818152600260205260409020546001600160a01b031615612c5c5760405162461bcd60e51b815260206004820152601c60248201527f4552433732313a20746f6b656e20616c7265616479206d696e746564000000006044820152606401610b7a565b612c68600083836128e6565b6001600160a01b0382166000908152600360205260408120805460019290612c919084906134ca565b909155505060008181526002602052604080822080546001600160a01b0319166001600160a01b03861690811790915590518392907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a45050565b60006001612cfc84611633565b612d069190613419565b600083815260076020526040902054909150808214612d59576001600160a01b03841660009081526006602090815260408083208584528252808320548484528184208190558352600790915290208190555b5060009182526007602090815260408084208490556001600160a01b039094168352600681528383209183525290812055565b600854600090612d9e90600190613419565b60008381526009602052604081205460088054939450909284908110612dc657612dc66134e2565b906000526020600020015490508060088381548110612de757612de76134e2565b6000918252602080832090910192909255828152600990915260408082208490558582528120556008805480612e1f57612e1f6136ca565b6001900381819060005260206000200160009055905550505050565b6000612e4683611633565b6001600160a01b039093166000908152600660209081526040808320868452825280832085905593825260079052919091209190915550565b828054612e8b90613393565b90600052602060002090601f016020900481019282612ead5760008555612ef3565b82601f10612ec657805160ff1916838001178555612ef3565b82800160010185558215612ef3579182015b82811115612ef3578251825591602001919060010190612ed8565b50612eff929150612f03565b5090565b5b80821115612eff5760008155600101612f04565b6001600160e01b0319811681146112be57600080fd5b600060208284031215612f4057600080fd5b8135612f4b81612f18565b9392505050565b60005b83811015612f6d578181015183820152602001612f55565b83811115611d8c5750506000910152565b60008151808452612f96816020860160208601612f52565b601f01601f19169290920160200192915050565b602081526000612f4b6020830184612f7e565b600060208284031215612fcf57600080fd5b5035919050565b80356001600160a01b0381168114612fed57600080fd5b919050565b6000806040838503121561300557600080fd5b61300e83612fd6565b946020939093013593505050565b634e487b7160e01b600052604160045260246000fd5b600067ffffffffffffffff8084111561304d5761304d61301c565b604051601f8501601f19908116603f011681019082821181831017156130755761307561301c565b8160405280935085815286868601111561308e57600080fd5b858560208301376000602087830101525050509392505050565b6000602082840312156130ba57600080fd5b813567ffffffffffffffff8111156130d157600080fd5b8201601f810184136130e257600080fd5b61236e84823560208401613032565b60008060006060848603121561310657600080fd5b61310f84612fd6565b925061311d60208501612fd6565b9150604084013590509250925092565b6000806020838503121561314057600080fd5b823567ffffffffffffffff8082111561315857600080fd5b818501915085601f83011261316c57600080fd5b81358181111561317b57600080fd5b8660208260051b850101111561319057600080fd5b60209290920196919550909350505050565b6000602082840312156131b457600080fd5b612f4b82612fd6565b6020808252825182820181905260009190848201906040850190845b818110156131f5578351835292840192918401916001016131d9565b50909695505050505050565b803560ff81168114612fed57600080fd5b60006020828403121561322457600080fd5b612f4b82613201565b6000806040838503121561324057600080fd5b61324983612fd6565b91506020830135801515811461325e57600080fd5b809150509250929050565b6000806040838503121561327c57600080fd5b61328583613201565b915061329360208401612fd6565b90509250929050565b600080600080608085870312156132b257600080fd5b6132bb85612fd6565b93506132c960208601612fd6565b925060408501359150606085013567ffffffffffffffff8111156132ec57600080fd5b8501601f810187136132fd57600080fd5b61330c87823560208401613032565b91505092959194509250565b634e487b7160e01b600052602160045260246000fd5b602081016004831061335057634e487b7160e01b600052602160045260246000fd5b91905290565b60006020828403121561336857600080fd5b813560048110612f4b57600080fd5b6000806040838503121561338a57600080fd5b61328583612fd6565b600181811c908216806133a757607f821691505b602082108114156133c857634e487b7160e01b600052602260045260246000fd5b50919050565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b634e487b7160e01b600052601160045260246000fd5b60008282101561342b5761342b613403565b500390565b60208082526031908201527f4552433732313a207472616e736665722063616c6c6572206973206e6f74206f6040820152701ddb995c881b9bdc88185c1c1c9bdd9959607a1b606082015260800190565b600081600019048311821515161561349b5761349b613403565b500290565b60208082526010908201526f14185d5cd8589b194e881c185d5cd95960821b604082015260600190565b600082198211156134dd576134dd613403565b500190565b634e487b7160e01b600052603260045260246000fd5b600060001982141561350c5761350c613403565b5060010190565b8054600090600181811c908083168061352d57607f831692505b602080841082141561354f57634e487b7160e01b600052602260045260246000fd5b8180156135635760018114613574576135a1565b60ff198616895284890196506135a1565b60008881526020902060005b868110156135995781548b820152908501908301613580565b505084890196505b50505050505092915050565b60006135b98286613513565b84516135c9818360208901612f52565b6135d581830186613513565b979650505050505050565b60208082526032908201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560408201527131b2b4bb32b91034b6b83632b6b2b73a32b960711b606082015260800190565b634e487b7160e01b600052601260045260246000fd5b60008261365757613657613632565b500490565b60008261366b5761366b613632565b500690565b6001600160a01b03858116825284166020820152604081018390526080606082018190526000906136a390830184612f7e565b9695505050505050565b6000602082840312156136bf57600080fd5b8151612f4b81612f18565b634e487b7160e01b600052603160045260246000fdfea26469706673582212209417ac7ae8b4eec52a75127bb2ce25f205ed66089bf35ca7d905920f20e3aa4964736f6c634300080a0033",
  "deployedSourceMapi;:::-;;:::i;:::-;;;565:14:17;;558:22;540:41;;528:2;513:18;8785:169:16;;;;;;;;2473:98:3;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;3984:217::-;;;;;;;;;;-1:-1:-1;3984:217:3;;;;;:::i;:::-;;:::i;:::-;;;-1:-1:-1;;;;;1692:32:17;;;1674:51;;1662:2;1647:18;3984:217:3;1528:203:17;1553:28:16;;;;;;;;;;;;;;;;;;;1882:25:17;;;1870:2;1855:18;1553:28:16;1736:177:17;3522:401:3;;;;;;;;;;-1:-1:-1;3522:401:3;;;;;:::i;:::-;;:::i;:::-;;6217:291:16;;;;;;;;;;-1:-1:-1;6217:291:16;;;;;:::i;:::-;;:::i;7640:115::-;;;;;;;;;;;;;:::i;5711:126::-;;;;;;;;;;-1:-1:-1;5711:126:16;;;;;:::i;:::-;;:::i;4711:330:3:-;;;;;;;;;;-1:-1:-1;4711:330:3;;;;;:::i;:::-;;:::i;837:25:16:-;;;;;;;;;;;;;;;;1291:253:6;;;;;;;;;;-1:-1:-1;1291:253:6;;;;;:::i;:::-;;:::i;1342:30:16:-;;;;;;;;;;;;;;;;3046:643;;;;;;:::i;:::-;;:::i;6914:194::-;;;:::i;4983:65::-;;;;;;;;;;;;;:::i;5107:179:3:-;;;;;;;;;;-1:-1:-1;5107:179:3;;;;;:::i;:::-;;:::i;8155:353:16:-;;;;;;;;;;-1:-1:-1;8155:353:16;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;1798:230:6:-;;;;;;;;;;-1:-1:-1;1798:230:6;;;;;:::i;:::-;;:::i;5317:160:16:-;;;;;;;;;;-1:-1:-1;5317:160:16;;;;;:::i;:::-;;:::i;1098:84:1:-;;;;;;;;;;-1:-1:-1;1168:7:1;;;;1098:84;;6095:116:16;;;;;;;;;;-1:-1:-1;6095:116:16;;;;;:::i;:::-;;:::i;2176:235:3:-;;;;;;;;;;-1:-1:-1;2176:235:3;;;;;:::i;:::-;;:::i;903:26:16:-;;;;;;;;;;;;;:::i;7433:104::-;;;;;;;;;;;;;:::i;1914:205:3:-;;;;;;;;;;-1:-1:-1;1914:205:3;;;;;:::i;:::-;;:::i;1668:101:0:-;;;;;;;;;;;;;:::i;1617:30:16:-;;;;;;;;;;;;;;;;5977:112;;;;;;;;;;-1:-1:-1;5977:112:16;;;;;:::i;:::-;;:::i;3722:495::-;;;;;;;;;;-1:-1:-1;3722:495:16;;;;;:::i;:::-;;:::i;5207:104::-;;;;;;;;;;-1:-1:-1;5207:104:16;;;;;:::i;:::-;;:::i;6514:260::-;;;;;;;;;;;;;:::i;4916:61::-;;;;;;;;;;;;;:::i;4252:636::-;;;;;;:::i;:::-;;:::i;1036:85:0:-;;;;;;;;;;-1:-1:-1;1108:6:0;;;;;-1:-1:-1;;;;;1108:6:0;1036:85;;2635:102:3;;;;;;;;;;;;;:::i;1054:40:16:-;;;;;;;;;;-1:-1:-1;1054:40:16;;;;;;;;;;;4268:153:3;;;;;;;;;;-1:-1:-1;4268:153:3;;;;;:::i;:::-;;:::i;2615:393:16:-;;;;;;;;;;-1:-1:-1;2615:393:16;;;;;:::i;:::-;;:::i;5352:320:3:-;;;;;;;;;;-1:-1:-1;5352:320:3;;;;;:::i;:::-;;:::i;5099:102:16:-;;;;;;;;;;-1:-1:-1;5099:102:16;;;;;:::i;:::-;;:::i;1707:18::-;;;;;;;;;;-1:-1:-1;1707:18:16;;;;;;;;;;;;;;;:::i;1014:34::-;;;;;;;;;;-1:-1:-1;1014:34:16;;;;;;;;;;;1492:29;;;;;;;;;;;;;;;;935:37;;;;;;;;;;;;;:::i;869:28::-;;;;;;;;;;;;;:::i;7761:266::-;;;;;;;;;;-1:-1:-1;7761:266:16;;;;;:::i;:::-;;:::i;1401:39::-;;;;;;;;;;-1:-1:-1;1401:39:16;;;;;:::i;:::-;;;;;;;;;;;;;;;;7114:284;;;;;;;;;;-1:-1:-1;7114:284:16;;;;;:::i;:::-;;:::i;7543:91::-;;;;;;;;;;;;;:::i;5843:128::-;;;;;;;;;;-1:-1:-1;5843:128:16;;;;;:::i;:::-;;:::i;8033:112::-;;;;;;;;;;;;;:::i;978:25::-;;;;;;;;;;-1:-1:-1;978:25:16;;;;;;;;;;;8275:4:17;8263:17;;;8245:36;;8233:2;8218:18;978:25:16;8103:184:17;5488:217:16;;;;;;;;;;;;;:::i;4487:162:3:-;;;;;;;;;;-1:-1:-1;4487:162:3;;;;;:::i;:::-;-1:-1:-1;;;;;4607:25:3;;;4584:4;4607:25;;;:18;:25;;;;;;;;:35;;;;;;;;;;;;;;;4487:162;1918:198:0;;;;;;;;;;-1:-1:-1;1918:198:0;;;;;:::i;:::-;;:::i;6780:128:16:-;;;;;;;;;;-1:-1:-1;6780:128:16;;;;;:::i;:::-;;:::i;1662:36::-;;;;;;;;;;;;;;;;1101:76;;;;;;;;;;-1:-1:-1;1101:76:16;;;;;;;-1:-1:-1;;;;;1101:76:16;;;8785:169;8888:4;8911:36;8935:11;8911:23;:36::i;:::-;8904:43;8785:169;-1:-1:-1;;8785:169:16:o;2473:98:3:-;2527:13;2559:5;2552:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2473:98;:::o;3984:217::-;4060:7;7232:16;;;:7;:16;;;;;;-1:-1:-1;;;;;7232:16:3;4079:73;;;;-1:-1:-1;;;4079:73:3;;9144:2:17;4079:73:3;;;9126:21:17;9183:2;9163:18;;;9156:30;9222:34;9202:18;;;9195:62;-1:-1:-1;;;9273:18:17;;;9266:42;9325:19;;4079:73:3;;;;;;;;;-1:-1:-1;4170:24:3;;;;:15;:24;;;;;;-1:-1:-1;;;;;4170:24:3;;3984:217::o;3522:401::-;3602:13;3618:23;3633:7;3618:14;:23::i;:::-;3602:39;;3665:5;-1:-1:-1;;;;;3659:11:3;:2;-1:-1:-1;;;;;3659:11:3;;;3651:57;;;;-1:-1:-1;;;3651:57:3;;9557:2:17;3651:57:3;;;9539:21:17;9596:2;9576:18;;;9569:30;9635:34;9615:18;;;9608:62;-1:-1:-1;;;9686:18:17;;;9679:31;9727:19;;3651:57:3;9355:397:17;3651:57:3;719:10:10;-1:-1:-1;;;;;3740:21:3;;;;:62;;-1:-1:-1;3765:37:3;3782:5;719:10:10;4487:162:3;:::i;3765:37::-;3719:165;;;;-1:-1:-1;;;3719:165:3;;9959:2:17;3719:165:3;;;9941:21:17;9998:2;9978:18;;;9971:30;10037:34;10017:18;;;10010:62;10108:26;10088:18;;;10081:54;10152:19;;3719:165:3;9757:420:17;3719:165:3;3895:21;3904:2;3908:7;3895:8;:21::i;:::-;3592:331;3522:401;;:::o;6217:291:16:-;1108:6:0;;-1:-1:-1;;;;;1108:6:0;;;;;719:10:10;1248:23:0;1240:68;;;;-1:-1:-1;;;1240:68:0;;;;;;;:::i;:::-;6344:1:16::1;6318:15;6312:29;:33;6304:85;;;::::0;-1:-1:-1;;;6304:85:16;;10745:2:17;6304:85:16::1;::::0;::::1;10727:21:17::0;10784:2;10764:18;;;10757:30;10823:34;10803:18;;;10796:62;-1:-1:-1;;;10874:18:17;;;10867:37;10921:19;;6304:85:16::1;10543:403:17::0;6304:85:16::1;6408:20;::::0;;;::::1;;;6407:21;6399:60;;;::::0;-1:-1:-1;;;6399:60:16;;11153:2:17;6399:60:16::1;::::0;::::1;11135:21:17::0;11192:2;11172:18;;;11165:30;11231:28;11211:18;;;11204:56;11277:18;;6399:60:16::1;10951:350:17::0;6399:60:16::1;6469:32:::0;;::::1;::::0;:14:::1;::::0;:32:::1;::::0;::::1;::::0;::::1;:::i;:::-;;6217:291:::0;:::o;7640:115::-;7693:7;7747:1;7719:25;:15;918:14:11;;827:112;7719:25:16;:29;;;;:::i;:::-;7712:36;;7640:115;:::o;5711:126::-;1108:6:0;;-1:-1:-1;;;;;1108:6:0;;;;;719:10:10;1248:23:0;1240:68;;;;-1:-1:-1;;;1240:68:0;;;;;;;:::i;:::-;5795:14:16::1;:35:::0;5711:126::o;4711:330:3:-;4900:41;719:10:10;4933:7:3;4900:18;:41::i;:::-;4892:103;;;;-1:-1:-1;;;4892:103:3;;;;;;;:::i;:::-;5006:28;5016:4;5022:2;5026:7;5006:9;:28::i;1291:253:6:-;1388:7;1423:23;1440:5;1423:16;:23::i;:::-;1415:5;:31;1407:87;;;;-1:-1:-1;;;1407:87:6;;12188:2:17;1407:87:6;;;12170:21:17;12227:2;12207:18;;;12200:30;12266:34;12246:18;;;12239:62;-1:-1:-1;;;12317:18:17;;;12310:41;12368:19;;1407:87:6;11986:407:17;1407:87:6;-1:-1:-1;;;;;;1511:19:6;;;;;;;;:12;:19;;;;;;;;:26;;;;;;;;;1291:253::o;3046:643:16:-;3190:10;;2359:28;;-1:-1:-1;;2376:10:16;12547:2:17;12543:15;12539:53;2359:28:16;;;12527:66:17;3177:11:16;;;;2330:59;;3190:10;;12609:12:17;;2359:28:16;;;;;;;;;;;;2349:39;;;;;;2330:5;;:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2330:12:16;;:59;;-1:-1:-1;;2330:12:16;:59;-1:-1:-1;2330:59:16:i;:::-;2322:97;;;;-1:-1:-1;;;2322:97:16;;12834:2:17;2322:97:16;;;12816:21:17;12873:2;12853:18;;;12846:30;12912:27;12892:18;;;12885:55;12957:18;;2322:97:16;12632:349:17;2322:97:16;3228:9:::1;::::0;3239:1:::1;2552:9;2526:22;3239:1:::0;3228:9;2526:22:::1;:::i;:::-;:35;2518:73;;;::::0;-1:-1:-1;;;2518:73:16;;13361:2:17;2518:73:16::1;::::0;::::1;13343:21:17::0;13400:2;13380:18;;;13373:30;-1:-1:-1;;;13419:18:17;;;13412:55;13484:18;;2518:73:16::1;13159:349:17::0;2518:73:16::1;1744:1:2::2;2325:7;;:19;;2317:63;;;::::0;-1:-1:-1;;;2317:63:2;;13715:2:17;2317:63:2::2;::::0;::::2;13697:21:17::0;13754:2;13734:18;;;13727:30;13793:33;13773:18;;;13766:61;13844:18;;2317:63:2::2;13513:355:17::0;2317:63:2::2;1744:1;2455:7;:18:::0;1168:7:1;;;;1411:9:::3;1403:38;;;;-1:-1:-1::0;;;1403:38:1::3;;;;;;;:::i;:::-;3319:15:16::4;3310:5;::::0;::::4;;:24;::::0;::::4;;;;;;:::i;:::-;;3302:66;;;::::0;-1:-1:-1;;;3302:66:16;;14420:2:17;3302:66:16::4;::::0;::::4;14402:21:17::0;14459:2;14439:18;;;14432:30;14498:31;14478:18;;;14471:59;14547:18;;3302:66:16::4;14218:353:17::0;3302:66:16::4;3394:10;3386:19;::::0;;;:7:::4;:19;::::0;;;;;::::4;;:28;3378:72;;;::::0;-1:-1:-1;;;3378:72:16;;14778:2:17;3378:72:16::4;::::0;::::4;14760:21:17::0;14817:2;14797:18;;;14790:30;14856:33;14836:18;;;14829:61;14907:18;;3378:72:16::4;14576:355:17::0;3378:72:16::4;3490:15;;3469:13;:11;:13::i;:::-;:17;::::0;3485:1:::4;3469:17;:::i;:::-;:36;;3461:90;;;::::0;-1:-1:-1;;;3461:90:16;;15271:2:17;3461:90:16::4;::::0;::::4;15253:21:17::0;15310:2;15290:18;;;15283:30;15349:34;15329:18;;;15322:62;-1:-1:-1;;;15400:18:17;;;15393:39;15449:19;;3461:90:16::4;15069:405:17::0;3461:90:16::4;3569:10;3561:19;::::0;;;:7:::4;:19;::::0;;;;:26;;-1:-1:-1;;3561:26:16::4;3583:4;3561:26;::::0;;3597:48:::4;::::0;3619:25:::4;:15;918:14:11::0;;827:112;3619:25:16::4;3597:9;:48::i;:::-;3655:27;:15;1032:19:11::0;;1050:1;1032:19;;;945:123;3655:27:16::4;-1:-1:-1::0;;1701:1:2::2;2628:7;:22:::0;-1:-1:-1;;;;;3046:643:16:o;6914:194::-;1108:6:0;;-1:-1:-1;;;;;1108:6:0;;;;;719:10:10;1248:23:0;1240:68;;;;-1:-1:-1;;;1240:68:0;;;;;;;:::i;:::-;6998:16:16::1;::::0;6990:64:::1;::::0;6972:12:::1;::::0;6998:16;;::::1;-1:-1:-1::0;;;;;6998:16:16::1;::::0;7028:21:::1;::::0;6972:12;6990:64;6972:12;6990:64;7028:21;6998:16;6990:64:::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6971:83;;;7072:7;7064:37;;;::::0;-1:-1:-1;;;7064:37:16;;15891:2:17;7064:37:16::1;::::0;::::1;15873:21:17::0;15930:2;15910:18;;;15903:30;-1:-1:-1;;;15949:18:17;;;15942:47;16006:18;;7064:37:16::1;15689:341:17::0;7064:37:16::1;6961:147;6914:194::o:0;4983:65::-;1108:6:0;;-1:-1:-1;;;;;1108:6:0;;;;;719:10:10;1248:23:0;1240:68;;;;-1:-1:-1;;;1240:68:0;;;;;;;:::i;:::-;5031:10:16::1;:8;:10::i;:::-;4983:65::o:0;5107:179:3:-;5240:39;5257:4;5263:2;5267:7;5240:39;;;;;;;;;;;;:16;:39::i;8155:353:16:-;8216:16;8244:23;8270:16;8280:5;8270:9;:16::i;:::-;8244:42;;8296:26;8339:15;8325:30;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;8325:30:16;;8296:59;;8370:9;8365:111;8385:15;8381:1;:19;8365:111;;;8436:29;8456:5;8463:1;8436:19;:29::i;:::-;8421:9;8431:1;8421:12;;;;;;;;:::i;:::-;;;;;;;;;;:44;8402:3;;;;:::i;:::-;;;;8365:111;;;-1:-1:-1;8492:9:16;8155:353;-1:-1:-1;;;8155:353:16:o;1798:230:6:-;1873:7;1908:30;1702:10;:17;;1615:111;1908:30;1900:5;:38;1892:95;;;;-1:-1:-1;;;1892:95:6;;16509:2:17;1892:95:6;;;16491:21:17;16548:2;16528:18;;;16521:30;16587:34;16567:18;;;16560:62;-1:-1:-1;;;16638:18:17;;;16631:42;16690:19;;1892:95:6;16307:408:17;1892:95:6;2004:10;2015:5;2004:17;;;;;;;;:::i;:::-;;;;;;;;;1997:24;;1798:230;;;:::o;5317:160:16:-;1108:6:0;;-1:-1:-1;;;;;1108:6:0;;;;;719:10:10;1248:23:0;1240:68;;;;-1:-1:-1;;;1240:68:0;;;;;;;:::i;:::-;5402:14:16::1;::::0;::::1;::::0;::::1;;;5401:15;5393:46;;;::::0;-1:-1:-1;;;5393:46:16;;16922:2:17;5393:46:16::1;::::0;::::1;16904:21:17::0;16961:2;16941:18;;;16934:30;-1:-1:-1;;;16980:18:17;;;16973:48;17038:18;;5393:46:16::1;16720:342:17::0;5393:46:16::1;5449:21:::0;;::::1;::::0;:7:::1;::::0;:21:::1;::::0;::::1;::::0;::::1;:::i;6095:116::-:0;1108:6:0;;-1:-1:-1;;;;;1108:6:0;;;;;719:10:10;1248:23:0;1240:68;;;;-1:-1:-1;;;1240:68:0;;;;;;;:::i;:::-;6173:12:16::1;:31:::0;;-1:-1:-1;;6173:31:16::1;;::::0;;;::::1;::::0;;;::::1;::::0;;6095:116::o;2176:235:3:-;2248:7;2283:16;;;:7;:16;;;;;;-1:-1:-1;;;;;2283:16:3;2317:19;2309:73;;;;-1:-1:-1;;;2309:73:3;;17269:2:17;2309:73:3;;;17251:21:17;17308:2;17288:18;;;17281:30;17347:34;17327:18;;;17320:62;-1:-1:-1;;;17398:18:17;;;17391:39;17447:19;;2309:73:3;17067:405:17;903:26:16;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;7433:104::-;7483:7;7508:22;7516:13;:11;:13::i;1914:205:3:-;1986:7;-1:-1:-1;;;;;2013:19:3;;2005:74;;;;-1:-1:-1;;;2005:74:3;;17679:2:17;2005:74:3;;;17661:21:17;17718:2;17698:18;;;17691:30;17757:34;17737:18;;;17730:62;-1:-1:-1;;;17808:18:17;;;17801:40;17858:19;;2005:74:3;17477:406:17;2005:74:3;-1:-1:-1;;;;;;2096:16:3;;;;;:9;:16;;;;;;;1914:205::o;1668:101:0:-;1108:6;;-1:-1:-1;;;;;1108:6:0;;;;;719:10:10;1248:23:0;1240:68;;;;-1:-1:-1;;;1240:68:0;;;;;;;:::i;:::-;1732:30:::1;1759:1;1732:18;:30::i;5977:112:16:-:0;1108:6:0;;-1:-1:-1;;;;;1108:6:0;;;;;719:10:10;1248:23:0;1240:68;;;;-1:-1:-1;;;1240:68:0;;;;;;;:::i;:::-;6057:9:16::1;:25:::0;5977:112::o;3722:495::-;1108:6:0;;-1:-1:-1;;;;;1108:6:0;;;;;719:10:10;1248:23:0;1240:68;;;;-1:-1:-1;;;1240:68:0;;;;;;;:::i;:::-;3842:14:16::1;3833:5;::::0;::::1;;:23;::::0;::::1;;;;;;:::i;:::-;;3825:65;;;::::0;-1:-1:-1;;;3825:65:16;;14420:2:17;3825:65:16::1;::::0;::::1;14402:21:17::0;14459:2;14439:18;;;14432:30;14498:31;14478:18;;;14471:59;14547:18;;3825:65:16::1;14218:353:17::0;3825:65:16::1;3939:14;::::0;3922:13:::1;::::0;3908:27:::1;::::0;::::1;::::0;::::1;;:::i;:::-;:45;;3900:100;;;::::0;-1:-1:-1;;;3900:100:16;;18090:2:17;3900:100:16::1;::::0;::::1;18072:21:17::0;18129:2;18109:18;;;18102:30;18168:34;18148:18;;;18141:62;-1:-1:-1;;;18219:18:17;;;18212:40;18269:19;;3900:100:16::1;17888:406:17::0;3900:100:16::1;4033:11;4016:28;;:13;;:28;;;;;;;:::i;:::-;::::0;;;-1:-1:-1;4071:1:16::1;::::0;-1:-1:-1;4054:157:16::1;4079:11;4074:16;;:1;:16;4054:157;;4111:48;4121:10;4133:25;:15;918:14:11::0;;827:112;4111:48:16::1;4173:27;:15;1032:19:11::0;;1050:1;1032:19;;;945:123;4173:27:16::1;4092:3:::0;::::1;::::0;::::1;:::i;:::-;;;;4054:157;;5207:104:::0;1108:6:0;;-1:-1:-1;;;;;1108:6:0;;;;;719:10:10;1248:23:0;1240:68;;;;-1:-1:-1;;;1240:68:0;;;;;;;:::i;:::-;5280:10:16::1;:24:::0;5207:104::o;6514:260::-;1108:6:0;;-1:-1:-1;;;;;1108:6:0;;;;;719:10:10;1248:23:0;1240:68;;;;-1:-1:-1;;;1240:68:0;;;;;;;:::i;:::-;6614:1:16::1;6589:14;6583:28;;;;;:::i;:::-;;;:32;6575:77;;;::::0;-1:-1:-1;;;6575:77:16;;18501:2:17;6575:77:16::1;::::0;::::1;18483:21:17::0;;;18520:18;;;18513:30;18579:34;18559:18;;;18552:62;18631:18;;6575:77:16::1;18299:356:17::0;6575:77:16::1;6671:20;::::0;;;::::1;;;6670:21;6662:68;;;::::0;-1:-1:-1;;;6662:68:16;;18862:2:17;6662:68:16::1;::::0;::::1;18844:21:17::0;18901:2;18881:18;;;18874:30;18940:34;18920:18;;;18913:62;-1:-1:-1;;;18991:18:17;;;18984:32;19033:19;;6662:68:16::1;18660:398:17::0;6662:68:16::1;6740:20;:27:::0;;-1:-1:-1;;6740:27:16::1;::::0;::::1;::::0;;6514:260::o;4916:61::-;1108:6:0;;-1:-1:-1;;;;;1108:6:0;;;;;719:10:10;1248:23:0;1240:68;;;;-1:-1:-1;;;1240:68:0;;;;;;;:::i;:::-;4962:8:16::1;:6;:8::i;4252:636::-:0;4365:9;;2443:166;;;2552:9;2526:22;2443:166;4365:9;2526:22;:::i;:::-;:35;2518:73;;;;-1:-1:-1;;;2518:73:16;;13361:2:17;2518:73:16;;;13343:21:17;13400:2;13380:18;;;13373:30;-1:-1:-1;;;13419:18:17;;;13412:55;13484:18;;2518:73:16;13159:349:17;2518:73:16;1744:1:2::1;2325:7;;:19;;2317:63;;;::::0;-1:-1:-1;;;2317:63:2;;13715:2:17;2317:63:2::1;::::0;::::1;13697:21:17::0;13754:2;13734:18;;;13727:30;13793:33;13773:18;;;13766:61;13844:18;;2317:63:2::1;13513:355:17::0;2317:63:2::1;1744:1;2455:7;:18:::0;1168:7:1;;;;1411:9:::2;1403:38;;;;-1:-1:-1::0;;;1403:38:1::2;;;;;;;:::i;:::-;4467:16:16::3;4458:5;::::0;::::3;;:25;::::0;::::3;;;;;;:::i;:::-;;4450:64;;;::::0;-1:-1:-1;;;4450:64:16;;19265:2:17;4450:64:16::3;::::0;::::3;19247:21:17::0;19304:2;19284:18;;;19277:30;19343:28;19323:18;;;19316:56;19389:18;;4450:64:16::3;19063:350:17::0;4450:64:16::3;4564:15;;4549:11;4532:28;;:13;:11;:13::i;:::-;:28;;;;:::i;:::-;:47;;4524:97;;;::::0;-1:-1:-1;;;4524:97:16;;19620:2:17;4524:97:16::3;::::0;::::3;19602:21:17::0;19659:2;19639:18;;;19632:30;19698:34;19678:18;;;19671:62;-1:-1:-1;;;19749:18:17;;;19742:35;19794:19;;4524:97:16::3;19418:401:17::0;4524:97:16::3;4654:12;::::0;::::3;::::0;;::::3;4639:27:::0;;::::3;;;4631:82;;;::::0;-1:-1:-1;;;4631:82:16;;20026:2:17;4631:82:16::3;::::0;::::3;20008:21:17::0;20065:2;20045:18;;;20038:30;20104:34;20084:18;;;20077:62;-1:-1:-1;;;20155:18:17;;;20148:40;20205:19;;4631:82:16::3;19824:406:17::0;4631:82:16::3;4742:1;4725:157;4750:11;4745:16;;:1;:16;4725:157;;4782:48;4792:10;4804:25;:15;918:14:11::0;;827:112;4782:48:16::3;4844:27;:15;1032:19:11::0;;1050:1;1032:19;;;945:123;4844:27:16::3;4763:3:::0;::::3;::::0;::::3;:::i;:::-;;;;4725:157;;;-1:-1:-1::0;;1701:1:2::1;2628:7;:22:::0;-1:-1:-1;;4252:636:16:o;2635:102:3:-;2691:13;2723:7;2716:14;;;;;:::i;4268:153::-;4362:52;719:10:10;4395:8:3;4405;4362:18;:52::i;2615:393:16:-;1108:6:0;;-1:-1:-1;;;;;1108:6:0;;;;;719:10:10;1248:23:0;1240:68;;;;-1:-1:-1;;;1240:68:0;;;;;;;:::i;:::-;2782:15:16::1;;2768:10;2751:27;;:13;:11;:13::i;:::-;:27;;;;:::i;:::-;:46;;2743:101;;;::::0;-1:-1:-1;;;2743:101:16;;20437:2:17;2743:101:16::1;::::0;::::1;20419:21:17::0;20476:2;20456:18;;;20449:30;20515:34;20495:18;;;20488:62;-1:-1:-1;;;20566:18:17;;;20559:40;20616:19;;2743:101:16::1;20235:406:17::0;2743:101:16::1;2871:1;2854:148;2879:10;2874:15;;:1;:15;2854:148;;2910:40;2920:2;2924:25;:15;918:14:11::0;;827:112;2910:40:16::1;2964:27;:15;1032:19:11::0;;1050:1;1032:19;;;945:123;2964:27:16::1;2891:3:::0;::::1;::::0;::::1;:::i;:::-;;;;2854:148;;5352:320:3::0;5521:41;719:10:10;5554:7:3;5521:18;:41::i;:::-;5513:103;;;;-1:-1:-1;;;5513:103:3;;;;;;;:::i;:::-;5626:39;5640:4;5646:2;5650:7;5659:5;5626:13;:39::i;:::-;5352:320;;;;:::o;5099:102:16:-;1108:6:0;;-1:-1:-1;;;;;1108:6:0;;;;;719:10:10;1248:23:0;1240:68;;;;-1:-1:-1;;;1240:68:0;;;;;;;:::i;:::-;-1:-1:-1;;;;;5169:18:16::1;;::::0;;;:7:::1;:18;::::0;;;;:25;;-1:-1:-1;;5169:25:16::1;5190:4;5169:25;::::0;;5099:102::o;935:37::-;;;;;;;:::i;869:28::-;;;;;;;:::i;7761:266::-;7209:4:3;7232:16;;;:7;:16;;;;;;7834:13:16;;-1:-1:-1;;;;;7232:16:3;7859:76:16;;;;-1:-1:-1;;;7859:76:16;;20848:2:17;7859:76:16;;;20830:21:17;20887:2;20867:18;;;20860:30;20926:34;20906:18;;;20899:62;-1:-1:-1;;;20977:18:17;;;20970:45;21032:19;;7859:76:16;20646:411:17;7859:76:16;7976:7;7985:18;:7;:16;:18::i;:::-;8005:13;7959:60;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;7945:75;;7761:266;;;:::o;7114:284::-;1108:6:0;;-1:-1:-1;;;;;1108:6:0;;;;;719:10:10;1248:23:0;1240:68;;;;-1:-1:-1;;;1240:68:0;;;;;;;:::i;:::-;7183:20:16::1;::::0;;;::::1;;;:28;;7207:4;7183:28;7175:97;;;::::0;-1:-1:-1;;;7175:97:16;;22829:2:17;7175:97:16::1;::::0;::::1;22811:21:17::0;22868:2;22848:18;;;22841:30;22907:34;22887:18;;;22880:62;22978:26;22958:18;;;22951:54;23022:19;;7175:97:16::1;22627:420:17::0;7175:97:16::1;7377:5;:14:::0;;7385:6;;7377:5;-1:-1:-1;;7377:14:16::1;::::0;7385:6;7377:14:::1;::::0;::::1;;;;;;:::i;:::-;;;;;;7114:284:::0;:::o;7543:91::-;7588:7;7613:13;:11;:13::i;5843:128::-;1108:6:0;;-1:-1:-1;;;;;1108:6:0;;;;;719:10:10;1248:23:0;1240:68;;;;-1:-1:-1;;;1240:68:0;;;;;;;:::i;:::-;5931:33:16;;::::1;::::0;:13:::1;::::0;:33:::1;::::0;::::1;::::0;::::1;:::i;8033:112::-:0;8081:7;8125:13;:11;:13::i;:::-;8107:15;;:31;;;;:::i;5488:217::-;1108:6:0;;-1:-1:-1;;;;;1108:6:0;;;;;719:10:10;1248:23:0;1240:68;;;;-1:-1:-1;;;1240:68:0;;;;;;;:::i;:::-;5574:1:16::1;5556:7;5550:21;;;;;:::i;:::-;;;:25;5542:61;;;::::0;-1:-1:-1;;;5542:61:16;;23673:2:17;5542:61:16::1;::::0;::::1;23655:21:17::0;23712:2;23692:18;;;23685:30;23751:25;23731:18;;;23724:53;23794:18;;5542:61:16::1;23471:347:17::0;5542:61:16::1;5622:14;::::0;::::1;::::0;::::1;;;5621:15;5613:54;;;::::0;-1:-1:-1;;;5613:54:16;;24025:2:17;5613:54:16::1;::::0;::::1;24007:21:17::0;24064:2;24044:18;;;24037:30;24103:28;24083:18;;;24076:56;24149:18;;5613:54:16::1;23823:350:17::0;5613:54:16::1;5677:14;:21:::0;;-1:-1:-1;;5677:21:16::1;;;::::0;;5488:217::o;1918:198:0:-;1108:6;;-1:-1:-1;;;;;1108:6:0;;;;;719:10:10;1248:23:0;1240:68;;;;-1:-1:-1;;;1240:68:0;;;;;;;:::i;:::-;-1:-1:-1;;;;;2006:22:0;::::1;1998:73;;;::::0;-1:-1:-1;;;1998:73:0;;24380:2:17;1998:73:0::1;::::0;::::1;24362:21:17::0;24419:2;24399:18;;;24392:30;24458:34;24438:18;;;24431:62;-1:-1:-1;;;24509:18:17;;;24502:36;24555:19;;1998:73:0::1;24178:402:17::0;1998:73:0::1;2081:28;2100:8;2081:18;:28::i;6780:128:16:-:0;1108:6:0;;-1:-1:-1;;;;;1108:6:0;;;;;719:10:10;1248:23:0;1240:68;;;;-1:-1:-1;;;1240:68:0;;;;;;;:::i;:::-;6865:16:16::1;:36:::0;;-1:-1:-1;;;;;6865:36:16;;::::1;::::0;::::1;-1:-1:-1::0;;;;;;6865:36:16;;::::1;::::0;;;::::1;::::0;;6780:128::o;945:123:11:-;1032:19;;1050:1;1032:19;;;945:123::o;990:222:6:-;1092:4;-1:-1:-1;;;;;;1115:50:6;;-1:-1:-1;;;1115:50:6;;:90;;;1169:36;1193:11;1169:23;:36::i;10995:171:3:-;11069:24;;;;:15;:24;;;;;:29;;-1:-1:-1;;;;;;11069:29:3;-1:-1:-1;;;;;11069:29:3;;;;;;;;:24;;11122:23;11069:24;11122:14;:23::i;:::-;-1:-1:-1;;;;;11113:46:3;;;;;;;;;;;10995:171;;:::o;7427:344::-;7520:4;7232:16;;;:7;:16;;;;;;-1:-1:-1;;;;;7232:16:3;7536:73;;;;-1:-1:-1;;;7536:73:3;;24787:2:17;7536:73:3;;;24769:21:17;24826:2;24806:18;;;24799:30;24865:34;24845:18;;;24838:62;-1:-1:-1;;;24916:18:17;;;24909:42;24968:19;;7536:73:3;24585:408:17;7536:73:3;7619:13;7635:23;7650:7;7635:14;:23::i;:::-;7619:39;;7687:5;-1:-1:-1;;;;;7676:16:3;:7;-1:-1:-1;;;;;7676:16:3;;:51;;;;7720:7;-1:-1:-1;;;;;7696:31:3;:20;7708:7;7696:11;:20::i;:::-;-1:-1:-1;;;;;7696:31:3;;7676:51;:87;;;-1:-1:-1;;;;;;4607:25:3;;;4584:4;4607:25;;;:18;:25;;;;;;;;:35;;;;;;;;;;;;7731:32;7668:96;7427:344;-1:-1:-1;;;;7427:344:3:o;10324:560::-;10478:4;-1:-1:-1;;;;;10451:31:3;:23;10466:7;10451:14;:23::i;:::-;-1:-1:-1;;;;;10451:31:3;;10443:85;;;;-1:-1:-1;;;10443:85:3;;25200:2:17;10443:85:3;;;25182:21:17;25239:2;25219:18;;;25212:30;25278:34;25258:18;;;25251:62;-1:-1:-1;;;25329:18:17;;;25322:39;25378:19;;10443:85:3;24998:405:17;10443:85:3;-1:-1:-1;;;;;10546:16:3;;10538:65;;;;-1:-1:-1;;;10538:65:3;;25610:2:17;10538:65:3;;;25592:21:17;25649:2;25629:18;;;25622:30;25688:34;25668:18;;;25661:62;-1:-1:-1;;;25739:18:17;;;25732:34;25783:19;;10538:65:3;25408:400:17;10538:65:3;10614:39;10635:4;10641:2;10645:7;10614:20;:39::i;:::-;10715:29;10732:1;10736:7;10715:8;:29::i;:::-;-1:-1:-1;;;;;10755:15:3;;;;;;:9;:15;;;;;:20;;10774:1;;10755:15;:20;;10774:1;;10755:20;:::i;:::-;;;;-1:-1:-1;;;;;;;10785:13:3;;;;;;:9;:13;;;;;:18;;10802:1;;10785:13;:18;;10802:1;;10785:18;:::i;:::-;;;;-1:-1:-1;;10813:16:3;;;;:7;:16;;;;;;:21;;-1:-1:-1;;;;;;10813:21:3;-1:-1:-1;;;;;10813:21:3;;;;;;;;;10850:27;;10813:16;;10850:27;;;;;;;10324:560;;;:::o;847:184:13:-;968:4;1020;991:25;1004:5;1011:4;991:12;:25::i;:::-;:33;;847:184;-1:-1:-1;;;;847:184:13:o;8101:108:3:-;8176:26;8186:2;8190:7;8176:26;;;;;;;;;;;;:9;:26::i;2110:117:1:-;1168:7;;;;1669:41;;;;-1:-1:-1;;;1669:41:1;;26015:2:17;1669:41:1;;;25997:21:17;26054:2;26034:18;;;26027:30;-1:-1:-1;;;26073:18:17;;;26066:50;26133:18;;1669:41:1;25813:344:17;1669:41:1;2168:7:::1;:15:::0;;-1:-1:-1;;2168:15:1::1;::::0;;2198:22:::1;719:10:10::0;2207:12:1::1;2198:22;::::0;-1:-1:-1;;;;;1692:32:17;;;1674:51;;1662:2;1647:18;2198:22:1::1;;;;;;;2110:117::o:0;2270:187:0:-;2362:6;;;-1:-1:-1;;;;;2378:17:0;;;2362:6;2378:17;;;-1:-1:-1;;;;;;2378:17:0;;;;;;2410:40;;2362:6;;;;;;;;2410:40;;2343:16;;2410:40;2333:124;2270:187;:::o;1863:115:1:-;1168:7;;;;1411:9;1403:38;;;;-1:-1:-1;;;1403:38:1;;;;;;;:::i;:::-;1922:7:::1;:14:::0;;-1:-1:-1;;1922:14:1::1;1932:4;1922:14;::::0;;1951:20:::1;1958:12;719:10:10::0;;640:96;11301:307:3;11451:8;-1:-1:-1;;;;;11442:17:3;:5;-1:-1:-1;;;;;11442:17:3;;;11434:55;;;;-1:-1:-1;;;11434:55:3;;26364:2:17;11434:55:3;;;26346:21:17;26403:2;26383:18;;;26376:30;26442:27;26422:18;;;26415:55;26487:18;;11434:55:3;26162:349:17;11434:55:3;-1:-1:-1;;;;;11499:25:3;;;;;;;:18;:25;;;;;;;;:35;;;;;;;;;;;;;:46;;-1:-1:-1;;11499:46:3;;;;;;;;;;11560:41;;540::17;;;11560::3;;513:18:17;11560:41:3;;;;;;;11301:307;;;:::o;6534:::-;6685:28;6695:4;6701:2;6705:7;6685:9;:28::i;:::-;6731:48;6754:4;6760:2;6764:7;6773:5;6731:22;:48::i;:::-;6723:111;;;;-1:-1:-1;;;6723:111:3;;;;;;;:::i;328:703:12:-;384:13;601:10;597:51;;-1:-1:-1;;627:10:12;;;;;;;;;;;;-1:-1:-1;;;627:10:12;;;;;328:703::o;597:51::-;672:5;657:12;711:75;718:9;;711:75;;743:8;;;;:::i;:::-;;-1:-1:-1;765:10:12;;-1:-1:-1;773:2:12;765:10;;:::i;:::-;;;711:75;;;795:19;827:6;817:17;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;817:17:12;;795:39;;844:150;851:10;;844:150;;877:11;887:1;877:11;;:::i;:::-;;-1:-1:-1;945:10:12;953:2;945:5;:10;:::i;:::-;932:24;;:2;:24;:::i;:::-;919:39;;902:6;909;902:14;;;;;;;;:::i;:::-;;;;:56;-1:-1:-1;;;;;902:56:12;;;;;;;;-1:-1:-1;972:11:12;981:2;972:11;;:::i;:::-;;;844:150;;1555:300:3;1657:4;-1:-1:-1;;;;;;1692:40:3;;-1:-1:-1;;;1692:40:3;;:104;;-1:-1:-1;;;;;;;1748:48:3;;-1:-1:-1;;;1748:48:3;1692:104;:156;;;-1:-1:-1;;;;;;;;;;937:40:14;;;1812:36:3;829:155:14;8518:193:16;1168:7:1;;;;1411:9;1403:38;;;;-1:-1:-1;;;1403:38:1;;;;;;;:::i;:::-;8659:45:16::1;8686:4;8692:2;8696:7;8659:26;:45::i;1383:688:13:-:0;1466:7;1508:4;1466:7;1522:514;1546:5;:12;1542:1;:16;1522:514;;;1579:20;1602:5;1608:1;1602:8;;;;;;;;:::i;:::-;;;;;;;1579:31;;1644:12;1628;:28;1624:402;;1779:44;;;;;;27466:19:17;;;27501:12;;;27494:28;;;27538:12;;1779:44:13;;;;;;;;;;;;1769:55;;;;;;1754:70;;1624:402;;;1966:44;;;;;;27466:19:17;;;27501:12;;;27494:28;;;27538:12;;1966:44:13;;;;;;;;;;;;1956:55;;;;;;1941:70;;1624:402;-1:-1:-1;1560:3:13;;;;:::i;:::-;;;;1522:514;;8430:311:3;8555:18;8561:2;8565:7;8555:5;:18::i;:::-;8604:54;8635:1;8639:2;8643:7;8652:5;8604:22;:54::i;:::-;8583:151;;;;-1:-1:-1;;;8583:151:3;;;;;;;:::i;12161:778::-;12311:4;-1:-1:-1;;;;;12331:13:3;;1087:20:9;1133:8;12327:606:3;;12366:72;;-1:-1:-1;;;12366:72:3;;-1:-1:-1;;;;;12366:36:3;;;;;:72;;719:10:10;;12417:4:3;;12423:7;;12432:5;;12366:72;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;-1:-1:-1;12366:72:3;;;;;;;;-1:-1:-1;;12366:72:3;;;;;;;;;;;;:::i;:::-;;;12362:519;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;12605:13:3;;12601:266;;12647:60;;-1:-1:-1;;;12647:60:3;;;;;;;:::i;12601:266::-;12819:6;12813:13;12804:6;12800:2;12796:15;12789:38;12362:519;-1:-1:-1;;;;;;12488:51:3;-1:-1:-1;;;12488:51:3;;-1:-1:-1;12481:58:3;;12327:606;-1:-1:-1;12918:4:3;12161:778;;;;;;:::o;2624:572:6:-;-1:-1:-1;;;;;2823:18:6;;2819:183;;2857:40;2889:7;4005:10;:17;;3978:24;;;;:15;:24;;;;;:44;;;4032:24;;;;;;;;;;;;3902:161;2857:40;2819:183;;;2926:2;-1:-1:-1;;;;;2918:10:6;:4;-1:-1:-1;;;;;2918:10:6;;2914:88;;2944:47;2977:4;2983:7;2944:32;:47::i;:::-;-1:-1:-1;;;;;3015:16:6;;3011:179;;3047:45;3084:7;3047:36;:45::i;3011:179::-;3119:4;-1:-1:-1;;;;;3113:10:6;:2;-1:-1:-1;;;;;3113:10:6;;3109:81;;3139:40;3167:2;3171:7;3139:27;:40::i;9063:372:3:-;-1:-1:-1;;;;;9142:16:3;;9134:61;;;;-1:-1:-1;;;9134:61:3;;28511:2:17;9134:61:3;;;28493:21:17;;;28530:18;;;28523:30;28589:34;28569:18;;;28562:62;28641:18;;9134:61:3;28309:356:17;9134:61:3;7209:4;7232:16;;;:7;:16;;;;;;-1:-1:-1;;;;;7232:16:3;:30;9205:58;;;;-1:-1:-1;;;9205:58:3;;28872:2:17;9205:58:3;;;28854:21:17;28911:2;28891:18;;;28884:30;28950;28930:18;;;28923:58;28998:18;;9205:58:3;28670:352:17;9205:58:3;9274:45;9303:1;9307:2;9311:7;9274:20;:45::i;:::-;-1:-1:-1;;;;;9330:13:3;;;;;;:9;:13;;;;;:18;;9347:1;;9330:13;:18;;9347:1;;9330:18;:::i;:::-;;;;-1:-1:-1;;9358:16:3;;;;:7;:16;;;;;;:21;;-1:-1:-1;;;;;;9358:21:3;-1:-1:-1;;;;;9358:21:3;;;;;;;;9395:33;;9358:16;;;9395:33;;9358:16;;9395:33;9063:372;;:::o;4680:970:6:-;4942:22;4992:1;4967:22;4984:4;4967:16;:22::i;:::-;:26;;;;:::i;:::-;5003:18;5024:26;;;:17;:26;;;;;;4942:51;;-1:-1:-1;5154:28:6;;;5150:323;;-1:-1:-1;;;;;5220:18:6;;5198:19;5220:18;;;:12;:18;;;;;;;;:34;;;;;;;;;5269:30;;;;;;:44;;;5385:30;;:17;:30;;;;;:43;;;5150:323;-1:-1:-1;5566:26:6;;;;:17;:26;;;;;;;;5559:33;;;-1:-1:-1;;;;;5609:18:6;;;;;:12;:18;;;;;:34;;;;;;;5602:41;4680:970::o;5938:1061::-;6212:10;:17;6187:22;;6212:21;;6232:1;;6212:21;:::i;:::-;6243:18;6264:24;;;:15;:24;;;;;;6632:10;:26;;6187:46;;-1:-1:-1;6264:24:6;;6187:46;;6632:26;;;;;;:::i;:::-;;;;;;;;;6610:48;;6694:11;6669:10;6680;6669:22;;;;;;;;:::i;:::-;;;;;;;;;;;;:36;;;;6773:28;;;:15;:28;;;;;;;:41;;;6942:24;;;;;6935:31;6976:10;:16;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;6009:990;;;5938:1061;:::o;3490:217::-;3574:14;3591:20;3608:2;3591:16;:20::i;:::-;-1:-1:-1;;;;;3621:16:6;;;;;;;:12;:16;;;;;;;;:24;;;;;;;;:34;;;3665:26;;;:17;:26;;;;;;:35;;;;-1:-1:-1;3490:217:6:o;-1:-1:-1:-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;14:131:17;-1:-1:-1;;;;;;88:32:17;;78:43;;68:71;;135:1;132;125:12;150:245;208:6;261:2;249:9;240:7;236:23;232:32;229:52;;;277:1;274;267:12;229:52;316:9;303:23;335:30;359:5;335:30;:::i;:::-;384:5;150:245;-1:-1:-1;;;150:245:17:o;592:258::-;664:1;674:113;688:6;685:1;682:13;674:113;;;764:11;;;758:18;745:11;;;738:39;710:2;703:10;674:113;;;805:6;802:1;799:13;796:48;;;-1:-1:-1;;840:1:17;822:16;;815:27;592:258::o;855:::-;897:3;935:5;929:12;962:6;957:3;950:19;978:63;1034:6;1027:4;1022:3;1018:14;1011:4;1004:5;1000:16;978:63;:::i;:::-;1095:2;1074:15;-1:-1:-1;;1070:29:17;1061:39;;;;1102:4;1057:50;;855:258;-1:-1:-1;;855:258:17:o;1118:220::-;1267:2;1256:9;1249:21;1230:4;1287:45;1328:2;1317:9;1313:18;1305:6;1287:45;:::i;1343:180::-;1402:6;1455:2;1443:9;1434:7;1430:23;1426:32;1423:52;;;1471:1;1468;1461:12;1423:52;-1:-1:-1;1494:23:17;;1343:180;-1:-1:-1;1343:180:17:o;1918:173::-;1986:20;;-1:-1:-1;;;;;2035:31:17;;2025:42;;2015:70;;2081:1;2078;2071:12;2015:70;1918:173;;;:::o;2096:254::-;2164:6;2172;2225:2;2213:9;2204:7;2200:23;2196:32;2193:52;;;2241:1;2238;2231:12;2193:52;2264:29;2283:9;2264:29;:::i;:::-;2254:39;2340:2;2325:18;;;;2312:32;;-1:-1:-1;;;2096:254:17:o;2355:127::-;2416:10;2411:3;2407:20;2404:1;2397:31;2447:4;2444:1;2437:15;2471:4;2468:1;2461:15;2487:632;2552:5;2582:18;2623:2;2615:6;2612:14;2609:40;;;2629:18;;:::i;:::-;2704:2;2698:9;2672:2;2758:15;;-1:-1:-1;;2754:24:17;;;2780:2;2750:33;2746:42;2734:55;;;2804:18;;;2824:22;;;2801:46;2798:72;;;2850:18;;:::i;:::-;2890:10;2886:2;2879:22;2919:6;2910:15;;2949:6;2941;2934:22;2989:3;2980:6;2975:3;2971:16;2968:25;2965:45;;;3006:1;3003;2996:12;2965:45;3056:6;3051:3;3044:4;3036:6;3032:17;3019:44;3111:1;3104:4;3095:6;3087;3083:19;3079:30;3072:41;;;;2487:632;;;;;:::o;3124:451::-;3193:6;3246:2;3234:9;3225:7;3221:23;3217:32;3214:52;;;3262:1;3259;3252:12;3214:52;3302:9;3289:23;3335:18;3327:6;3324:30;3321:50;;;3367:1;3364;3357:12;3321:50;3390:22;;3443:4;3435:13;;3431:27;-1:-1:-1;3421:55:17;;3472:1;3469;3462:12;3421:55;3495:74;3561:7;3556:2;3543:16;3538:2;3534;3530:11;3495:74;:::i;3580:328::-;3657:6;3665;3673;3726:2;3714:9;3705:7;3701:23;3697:32;3694:52;;;3742:1;3739;3732:12;3694:52;3765:29;3784:9;3765:29;:::i;:::-;3755:39;;3813:38;3847:2;3836:9;3832:18;3813:38;:::i;:::-;3803:48;;3898:2;3887:9;3883:18;3870:32;3860:42;;3580:328;;;;;:::o;4095:615::-;4181:6;4189;4242:2;4230:9;4221:7;4217:23;4213:32;4210:52;;;4258:1;4255;4248:12;4210:52;4298:9;4285:23;4327:18;4368:2;4360:6;4357:14;4354:34;;;4384:1;4381;4374:12;4354:34;4422:6;4411:9;4407:22;4397:32;;4467:7;4460:4;4456:2;4452:13;4448:27;4438:55;;4489:1;4486;4479:12;4438:55;4529:2;4516:16;4555:2;4547:6;4544:14;4541:34;;;4571:1;4568;4561:12;4541:34;4624:7;4619:2;4609:6;4606:1;4602:14;4598:2;4594:23;4590:32;4587:45;4584:65;;;4645:1;4642;4635:12;4584:65;4676:2;4668:11;;;;;4698:6;;-1:-1:-1;4095:615:17;;-1:-1:-1;;;;4095:615:17:o;4715:186::-;4774:6;4827:2;4815:9;4806:7;4802:23;4798:32;4795:52;;;4843:1;4840;4833:12;4795:52;4866:29;4885:9;4866:29;:::i;4906:632::-;5077:2;5129:21;;;5199:13;;5102:18;;;5221:22;;;5048:4;;5077:2;5300:15;;;;5274:2;5259:18;;;5048:4;5343:169;5357:6;5354:1;5351:13;5343:169;;;5418:13;;5406:26;;5487:15;;;;5452:12;;;;5379:1;5372:9;5343:169;;;-1:-1:-1;5529:3:17;;4906:632;-1:-1:-1;;;;;;4906:632:17:o;5543:156::-;5609:20;;5669:4;5658:16;;5648:27;;5638:55;;5689:1;5686;5679:12;5704:182;5761:6;5814:2;5802:9;5793:7;5789:23;5785:32;5782:52;;;5830:1;5827;5820:12;5782:52;5853:27;5870:9;5853:27;:::i;6076:347::-;6141:6;6149;6202:2;6190:9;6181:7;6177:23;6173:32;6170:52;;;6218:1;6215;6208:12;6170:52;6241:29;6260:9;6241:29;:::i;:::-;6231:39;;6320:2;6309:9;6305:18;6292:32;6367:5;6360:13;6353:21;6346:5;6343:32;6333:60;;6389:1;6386;6379:12;6333:60;6412:5;6402:15;;;6076:347;;;;;:::o;6428:256::-;6494:6;6502;6555:2;6543:9;6534:7;6530:23;6526:32;6523:52;;;6571:1;6568;6561:12;6523:52;6594:27;6611:9;6594:27;:::i;:::-;6584:37;;6640:38;6674:2;6663:9;6659:18;6640:38;:::i;:::-;6630:48;;6428:256;;;;;:::o;6689:667::-;6784:6;6792;6800;6808;6861:3;6849:9;6840:7;6836:23;6832:33;6829:53;;;6878:1;6875;6868:12;6829:53;6901:29;6920:9;6901:29;:::i;:::-;6891:39;;6949:38;6983:2;6972:9;6968:18;6949:38;:::i;:::-;6939:48;;7034:2;7023:9;7019:18;7006:32;6996:42;;7089:2;7078:9;7074:18;7061:32;7116:18;7108:6;7105:30;7102:50;;;7148:1;7145;7138:12;7102:50;7171:22;;7224:4;7216:13;;7212:27;-1:-1:-1;7202:55:17;;7253:1;7250;7243:12;7202:55;7276:74;7342:7;7337:2;7324:16;7319:2;7315;7311:11;7276:74;:::i;:::-;7266:84;;;6689:667;;;;;;;:::o;7361:127::-;7422:10;7417:3;7413:20;7410:1;7403:31;7453:4;7450:1;7443:15;7477:4;7474:1;7467:15;7493:336;7633:2;7618:18;;7666:1;7655:13;;7645:144;;7711:10;7706:3;7702:20;7699:1;7692:31;7746:4;7743:1;7736:15;7774:4;7771:1;7764:15;7645:144;7798:25;;;7493:336;:::o;7834:264::-;7901:6;7954:2;7942:9;7933:7;7929:23;7925:32;7922:52;;;7970:1;7967;7960:12;7922:52;8009:9;7996:23;8048:1;8041:5;8038:12;8028:40;;8064:1;8061;8054:12;8292:260;8360:6;8368;8421:2;8409:9;8400:7;8396:23;8392:32;8389:52;;;8437:1;8434;8427:12;8389:52;8460:29;8479:9;8460:29;:::i;8557:380::-;8636:1;8632:12;;;;8679;;;8700:61;;8754:4;8746:6;8742:17;8732:27;;8700:61;8807:2;8799:6;8796:14;8776:18;8773:38;8770:161;;;8853:10;8848:3;8844:20;8841:1;8834:31;8888:4;8885:1;8878:15;8916:4;8913:1;8906:15;8770:161;;8557:380;;;:::o;10182:356::-;10384:2;10366:21;;;10403:18;;;10396:30;10462:34;10457:2;10442:18;;10435:62;10529:2;10514:18;;10182:356::o;11306:127::-;11367:10;11362:3;11358:20;11355:1;11348:31;11398:4;11395:1;11388:15;11422:4;11419:1;11412:15;11438:125;11478:4;11506:1;11503;11500:8;11497:34;;;11511:18;;:::i;:::-;-1:-1:-1;11548:9:17;;11438:125::o;11568:413::-;11770:2;11752:21;;;11809:2;11789:18;;;11782:30;11848:34;11843:2;11828:18;;11821:62;-1:-1:-1;;;11914:2:17;11899:18;;11892:47;11971:3;11956:19;;11568:413::o;12986:168::-;13026:7;13092:1;13088;13084:6;13080:14;13077:1;13074:21;13069:1;13062:9;13055:17;13051:45;13048:71;;;13099:18;;:::i;:::-;-1:-1:-1;13139:9:17;;12986:168::o;13873:340::-;14075:2;14057:21;;;14114:2;14094:18;;;14087:30;-1:-1:-1;;;14148:2:17;14133:18;;14126:46;14204:2;14189:18;;13873:340::o;14936:128::-;14976:3;15007:1;15003:6;15000:1;14997:13;14994:39;;;15013:18;;:::i;:::-;-1:-1:-1;15049:9:17;;14936:128::o;16035:127::-;16096:10;16091:3;16087:20;16084:1;16077:31;16127:4;16124:1;16117:15;16151:4;16148:1;16141:15;16167:135;16206:3;-1:-1:-1;;16227:17:17;;16224:43;;;16247:18;;:::i;:::-;-1:-1:-1;16294:1:17;16283:13;;16167:135::o;21188:973::-;21273:12;;21238:3;;21328:1;21348:18;;;;21401;;;;21428:61;;21482:4;21474:6;21470:17;21460:27;;21428:61;21508:2;21556;21548:6;21545:14;21525:18;21522:38;21519:161;;;21602:10;21597:3;21593:20;21590:1;21583:31;21637:4;21634:1;21627:15;21665:4;21662:1;21655:15;21519:161;21696:18;21723:104;;;;21841:1;21836:319;;;;21689:466;;21723:104;-1:-1:-1;;21756:24:17;;21744:37;;21801:16;;;;-1:-1:-1;21723:104:17;;21836:319;21135:1;21128:14;;;21172:4;21159:18;;21930:1;21944:165;21958:6;21955:1;21952:13;21944:165;;;22036:14;;22023:11;;;22016:35;22079:16;;;;21973:10;;21944:165;;;21948:3;;22138:6;22133:3;22129:16;22122:23;;21689:466;;;;;;;21188:973;;;;:::o;22166:456::-;22387:3;22415:38;22449:3;22441:6;22415:38;:::i;:::-;22482:6;22476:13;22498:52;22543:6;22539:2;22532:4;22524:6;22520:17;22498:52;:::i;:::-;22566:50;22608:6;22604:2;22600:15;22592:6;22566:50;:::i;:::-;22559:57;22166:456;-1:-1:-1;;;;;;;22166:456:17:o;26516:414::-;26718:2;26700:21;;;26757:2;26737:18;;;26730:30;26796:34;26791:2;26776:18;;26769:62;-1:-1:-1;;;26862:2:17;26847:18;;26840:48;26920:3;26905:19;;26516:414::o;26935:127::-;26996:10;26991:3;26987:20;26984:1;26977:31;27027:4;27024:1;27017:15;27051:4;27048:1;27041:15;27067:120;27107:1;27133;27123:35;;27138:18;;:::i;:::-;-1:-1:-1;27172:9:17;;27067:120::o;27192:112::-;27224:1;27250;27240:35;;27255:18;;:::i;:::-;-1:-1:-1;27289:9:17;;27192:112::o;27561:489::-;-1:-1:-1;;;;;27830:15:17;;;27812:34;;27882:15;;27877:2;27862:18;;27855:43;27929:2;27914:18;;27907:34;;;27977:3;27972:2;27957:18;;27950:31;;;27755:4;;27998:46;;28024:19;;28016:6;27998:46;:::i;:::-;27990:54;27561:489;-1:-1:-1;;;;;;27561:489:17:o;28055:249::-;28124:6;28177:2;28165:9;28156:7;28152:23;28148:32;28145:52;;;28193:1;28190;28183:12;28145:52;28225:9;28219:16;28244:30;28268:5;28244:30;:::i;29027:127::-;29088:10;29083:3;29079:20;29076:1;29069:31;29119:4;29116:1;29109:15;29143:4;29140:1;29133:15",
  "language": "Solidity",
  "natspec": {
    "kind": "dev",
    "methods": {
      "approve(address,uint256)": {
        "details": "See {IERC721-approve}."
      },
      "balanceOf(address)": {
        "details": "See {IERC721-balanceOf}."
      },
      "getApproved(uint256)": {
        "details": "See {IERC721-getApproved}."
      },
      "isApprovedForAll(address,address)": {
        "details": "See {IERC721-isApprovedForAll}."
      },
      "name()": {
        "details": "See {IERC721Metadata-name}."
      },
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "ownerOf(uint256)": {
        "details": "See {IERC721-ownerOf}."
      },
      "paused()": {
        "details": "Returns true if the contract is paused, and false otherwise."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "safeTransferFrom(address,address,uint256)": {
        "details": "See {IERC721-safeTransferFrom}."
      },
      "safeTransferFrom(address,address,uint256,bytes)": {
        "details": "See {IERC721-safeTransferFrom}."
      },
      "setApprovalForAll(address,bool)": {
        "details": "See {IERC721-setApprovalForAll}."
      },
      "symbol()": {
        "details": "See {IERC721Metadata-symbol}."
      },
      "tokenByIndex(uint256)": {
        "details": "See {IERC721Enumerable-tokenByIndex}."
      },
      "tokenOfOwnerByIndex(address,uint256)": {
        "details": "See {IERC721Enumerable-tokenOfOwnerByIndex}."
      },
      "tokenURI(uint256)": {
        "details": "See {IERC721Metadata-tokenURI}."
      },
      "totalSupply()": {
        "details": "See {IERC721Enumerable-totalSupply}."
      },
      "transferFrom(address,address,uint256)": {
        "details": "See {IERC721-transferFrom}."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "version": 1
  },
  "offset": [
    490,
    8957
  ],
  "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x381 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x7CB64759 GT PUSH2 0x1D1 JUMPI DUP1 PUSH4 0xC6682862 GT PUSH2 0x102 JUMPI DUP1 PUSH4 0xDE5F9866 GT PUSH2 0xA0 JUMPI DUP1 PUSH4 0xF2FDE38B GT PUSH2 0x6F JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x9E5 JUMPI DUP1 PUSH4 0xF4EFA3E6 EQ PUSH2 0xA05 JUMPI DUP1 PUSH4 0xF51F96DD EQ PUSH2 0xA25 JUMPI DUP1 PUSH4 0xFFA9CD3B EQ PUSH2 0xA3B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xDE5F9866 EQ PUSH2 0x946 JUMPI DUP1 PUSH4 0xDE7FCB1D EQ PUSH2 0x95B JUMPI DUP1 PUSH4 0xE7BC8208 EQ PUSH2 0x987 JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x99C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xC884EF83 GT PUSH2 0xDC JUMPI DUP1 PUSH4 0xC884EF83 EQ PUSH2 0x8C1 JUMPI DUP1 PUSH4 0xCE3CD997 EQ PUSH2 0x8F1 JUMPI DUP1 PUSH4 0xD6D67A09 EQ PUSH2 0x911 JUMPI DUP1 PUSH4 0xDA3EF23F EQ PUSH2 0x926 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xC6682862 EQ PUSH2 0x877 JUMPI DUP1 PUSH4 0xC6AB67A3 EQ PUSH2 0x88C JUMPI DUP1 PUSH4 0xC87B56DD EQ PUSH2 0x8A1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xA22CB465 GT PUSH2 0x16F JUMPI DUP1 PUSH4 0xBBC903EA GT PUSH2 0x149 JUMPI DUP1 PUSH4 0xBBC903EA EQ PUSH2 0x7FB JUMPI DUP1 PUSH4 0xC040E6B8 EQ PUSH2 0x81B JUMPI DUP1 PUSH4 0xC29DE630 EQ PUSH2 0x842 JUMPI DUP1 PUSH4 0xC3214581 EQ PUSH2 0x861 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x79B JUMPI DUP1 PUSH4 0xB3CAAD01 EQ PUSH2 0x7BB JUMPI DUP1 PUSH4 0xB88D4FDE EQ PUSH2 0x7DB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x858E83B5 GT PUSH2 0x1AB JUMPI DUP1 PUSH4 0x858E83B5 EQ PUSH2 0x730 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x743 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x766 JUMPI DUP1 PUSH4 0x9A2A9C3D EQ PUSH2 0x77B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x7CB64759 EQ PUSH2 0x6E6 JUMPI DUP1 PUSH4 0x81C162F2 EQ PUSH2 0x706 JUMPI DUP1 PUSH4 0x8456CB59 EQ PUSH2 0x71B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x3F4BA83A GT PUSH2 0x2B6 JUMPI DUP1 PUSH4 0x6352211E GT PUSH2 0x254 JUMPI DUP1 PUSH4 0x715018A6 GT PUSH2 0x223 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x67B JUMPI DUP1 PUSH4 0x78231978 EQ PUSH2 0x690 JUMPI DUP1 PUSH4 0x791A2519 EQ PUSH2 0x6A6 JUMPI DUP1 PUSH4 0x7B671780 EQ PUSH2 0x6C6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6352211E EQ PUSH2 0x611 JUMPI DUP1 PUSH4 0x6C0360EB EQ PUSH2 0x631 JUMPI DUP1 PUSH4 0x6CBB8985 EQ PUSH2 0x646 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x65B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x4F6CCCE7 GT PUSH2 0x290 JUMPI DUP1 PUSH4 0x4F6CCCE7 EQ PUSH2 0x599 JUMPI DUP1 PUSH4 0x55F804B3 EQ PUSH2 0x5B9 JUMPI DUP1 PUSH4 0x5C975ABB EQ PUSH2 0x5D9 JUMPI DUP1 PUSH4 0x622E4E78 EQ PUSH2 0x5F1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x3F4BA83A EQ PUSH2 0x537 JUMPI DUP1 PUSH4 0x42842E0E EQ PUSH2 0x54C JUMPI DUP1 PUSH4 0x438B6300 EQ PUSH2 0x56C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x20841A6A GT PUSH2 0x323 JUMPI DUP1 PUSH4 0x2F745C59 GT PUSH2 0x2FD JUMPI DUP1 PUSH4 0x2F745C59 EQ PUSH2 0x4E6 JUMPI DUP1 PUSH4 0x33E61413 EQ PUSH2 0x506 JUMPI DUP1 PUSH4 0x372F657C EQ PUSH2 0x51C JUMPI DUP1 PUSH4 0x3CCFD60B EQ PUSH2 0x52F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x20841A6A EQ PUSH2 0x490 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x4B0 JUMPI DUP1 PUSH4 0x2EB4A7AB EQ PUSH2 0x4D0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x88139A6 GT PUSH2 0x35F JUMPI DUP1 PUSH4 0x88139A6 EQ PUSH2 0x415 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x439 JUMPI DUP1 PUSH4 0x10969523 EQ PUSH2 0x45B JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x47B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x386 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x3BB JUMPI DUP1 PUSH4 0x81812FC EQ PUSH2 0x3DD JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x392 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3A6 PUSH2 0x3A1 CALLDATASIZE PUSH1 0x4 PUSH2 0x2F2E JUMP JUMPDEST PUSH2 0xA62 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3C7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3D0 PUSH2 0xA73 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3B2 SWAP2 SWAP1 PUSH2 0x2FAA JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3E9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3FD PUSH2 0x3F8 CALLDATASIZE PUSH1 0x4 PUSH2 0x2FBD JUMP JUMPDEST PUSH2 0xB05 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x3B2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x421 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x42B PUSH1 0x15 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x3B2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x445 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x459 PUSH2 0x454 CALLDATASIZE PUSH1 0x4 PUSH2 0x2FF2 JUMP JUMPDEST PUSH2 0xB9F JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x467 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x459 PUSH2 0x476 CALLDATASIZE PUSH1 0x4 PUSH2 0x30A8 JUMP JUMPDEST PUSH2 0xCB5 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x487 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x42B PUSH2 0xDB6 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x49C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x459 PUSH2 0x4AB CALLDATASIZE PUSH1 0x4 PUSH2 0x2FBD JUMP JUMPDEST PUSH2 0xDD2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4BC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x459 PUSH2 0x4CB CALLDATASIZE PUSH1 0x4 PUSH2 0x30F1 JUMP JUMPDEST PUSH2 0xE07 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4DC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x42B PUSH1 0xD SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4F2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x42B PUSH2 0x501 CALLDATASIZE PUSH1 0x4 PUSH2 0x2FF2 JUMP JUMPDEST PUSH2 0xE38 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x512 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x42B PUSH1 0x12 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x459 PUSH2 0x52A CALLDATASIZE PUSH1 0x4 PUSH2 0x312D JUMP JUMPDEST PUSH2 0xECE JUMP JUMPDEST PUSH2 0x459 PUSH2 0x11F0 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x543 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x459 PUSH2 0x12C1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x558 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x459 PUSH2 0x567 CALLDATASIZE PUSH1 0x4 PUSH2 0x30F1 JUMP JUMPDEST PUSH2 0x12FB JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x578 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x58C PUSH2 0x587 CALLDATASIZE PUSH1 0x4 PUSH2 0x31A2 JUMP JUMPDEST PUSH2 0x1316 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3B2 SWAP2 SWAP1 PUSH2 0x31BD JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5A5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x42B PUSH2 0x5B4 CALLDATASIZE PUSH1 0x4 PUSH2 0x2FBD JUMP JUMPDEST PUSH2 0x13B8 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5C5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x459 PUSH2 0x5D4 CALLDATASIZE PUSH1 0x4 PUSH2 0x30A8 JUMP JUMPDEST PUSH2 0x144B JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5E5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0xA SLOAD PUSH1 0xFF AND PUSH2 0x3A6 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5FD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x459 PUSH2 0x60C CALLDATASIZE PUSH1 0x4 PUSH2 0x3212 JUMP JUMPDEST PUSH2 0x14DB JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x61D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3FD PUSH2 0x62C CALLDATASIZE PUSH1 0x4 PUSH2 0x2FBD JUMP JUMPDEST PUSH2 0x1521 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x63D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3D0 PUSH2 0x1598 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x652 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3FD PUSH2 0x1626 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x667 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x42B PUSH2 0x676 CALLDATASIZE PUSH1 0x4 PUSH2 0x31A2 JUMP JUMPDEST PUSH2 0x1633 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x687 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x459 PUSH2 0x16BA JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x69C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x42B PUSH1 0x16 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x6B2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x459 PUSH2 0x6C1 CALLDATASIZE PUSH1 0x4 PUSH2 0x2FBD JUMP JUMPDEST PUSH2 0x16F4 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x6D2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x459 PUSH2 0x6E1 CALLDATASIZE PUSH1 0x4 PUSH2 0x3212 JUMP JUMPDEST PUSH2 0x1729 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x6F2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x459 PUSH2 0x701 CALLDATASIZE PUSH1 0x4 PUSH2 0x2FBD JUMP JUMPDEST PUSH2 0x1888 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x712 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x459 PUSH2 0x18BD JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x727 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x459 PUSH2 0x19C2 JUMP JUMPDEST PUSH2 0x459 PUSH2 0x73E CALLDATASIZE PUSH1 0x4 PUSH2 0x3212 JUMP JUMPDEST PUSH2 0x19FA JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x74F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0xA SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x3FD JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x772 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3D0 PUSH2 0x1C5C JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x787 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x11 SLOAD PUSH2 0x3A6 SWAP1 PUSH3 0x10000 SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x7A7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x459 PUSH2 0x7B6 CALLDATASIZE PUSH1 0x4 PUSH2 0x322D JUMP JUMPDEST PUSH2 0x1C6B JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x7C7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x459 PUSH2 0x7D6 CALLDATASIZE PUSH1 0x4 PUSH2 0x3269 JUMP JUMPDEST PUSH2 0x1C76 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x7E7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x459 PUSH2 0x7F6 CALLDATASIZE PUSH1 0x4 PUSH2 0x329C JUMP JUMPDEST PUSH2 0x1D5A JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x807 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x459 PUSH2 0x816 CALLDATASIZE PUSH1 0x4 PUSH2 0x31A2 JUMP JUMPDEST PUSH2 0x1D92 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x827 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x18 SLOAD PUSH2 0x835 SWAP1 PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3B2 SWAP2 SWAP1 PUSH2 0x332E JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x84E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x11 SLOAD PUSH2 0x3A6 SWAP1 PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x86D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x42B PUSH1 0x14 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x883 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3D0 PUSH2 0x1DE6 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x898 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3D0 PUSH2 0x1DF3 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x8AD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3D0 PUSH2 0x8BC CALLDATASIZE PUSH1 0x4 PUSH2 0x2FBD JUMP JUMPDEST PUSH2 0x1E00 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x8CD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3A6 PUSH2 0x8DC CALLDATASIZE PUSH1 0x4 PUSH2 0x31A2 JUMP JUMPDEST PUSH1 0x13 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x8FD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x459 PUSH2 0x90C CALLDATASIZE PUSH1 0x4 PUSH2 0x3356 JUMP JUMPDEST PUSH2 0x1EB4 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x91D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x42B PUSH2 0x1F8E JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x932 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x459 PUSH2 0x941 CALLDATASIZE PUSH1 0x4 PUSH2 0x30A8 JUMP JUMPDEST PUSH2 0x1F98 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x952 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x42B PUSH2 0x1FDB JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x967 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x11 SLOAD PUSH2 0x975 SWAP1 PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0xFF SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x3B2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x993 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x459 PUSH2 0x1FF2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x9A8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3A6 PUSH2 0x9B7 CALLDATASIZE PUSH1 0x4 PUSH2 0x3377 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x9F1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x459 PUSH2 0xA00 CALLDATASIZE PUSH1 0x4 PUSH2 0x31A2 JUMP JUMPDEST PUSH2 0x20E9 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xA11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x459 PUSH2 0xA20 CALLDATASIZE PUSH1 0x4 PUSH2 0x31A2 JUMP JUMPDEST PUSH2 0x2187 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xA31 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x42B PUSH1 0x17 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xA47 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x11 SLOAD PUSH2 0x3FD SWAP1 PUSH4 0x1000000 SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xA6D DUP3 PUSH2 0x21EC JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP1 SLOAD PUSH2 0xA82 SWAP1 PUSH2 0x3393 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xAAE SWAP1 PUSH2 0x3393 JUMP JUMPDEST DUP1 ISZERO PUSH2 0xAFB JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xAD0 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xAFB JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xADE JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xB83 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A20617070726F76656420717565727920666F72206E6F6E6578 PUSH1 0x44 DUP3 ADD MSTORE PUSH12 0x34B9BA32B73A103A37B5B2B7 PUSH1 0xA1 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xBAA DUP3 PUSH2 0x1521 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO PUSH2 0xC18 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A20617070726F76616C20746F2063757272656E74206F776E65 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x39 PUSH1 0xF9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xB7A JUMP JUMPDEST CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND EQ DUP1 PUSH2 0xC34 JUMPI POP PUSH2 0xC34 DUP2 CALLER PUSH2 0x9B7 JUMP JUMPDEST PUSH2 0xCA6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x38 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A20617070726F76652063616C6C6572206973206E6F74206F77 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6E6572206E6F7220617070726F76656420666F7220616C6C0000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xB7A JUMP JUMPDEST PUSH2 0xCB0 DUP4 DUP4 PUSH2 0x2211 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0xA SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x100 SWAP1 SWAP2 DIV AND CALLER EQ PUSH2 0xCE5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB7A SWAP1 PUSH2 0x33CE JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD GT PUSH2 0xD46 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x27 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x50726F76656E616E636520686173682063616E6E6F7420626520656D70747920 PUSH1 0x44 DUP3 ADD MSTORE PUSH7 0x39BA3934B73397 PUSH1 0xC9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xB7A JUMP JUMPDEST PUSH1 0x11 SLOAD PUSH3 0x10000 SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0xD9F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x50726F76656E616E636520686173682069732066726F7A656E2E000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xB7A JUMP JUMPDEST DUP1 MLOAD PUSH2 0xDB2 SWAP1 PUSH1 0xE SWAP1 PUSH1 0x20 DUP5 ADD SWAP1 PUSH2 0x2E7F JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH2 0xDC3 PUSH1 0xC SLOAD SWAP1 JUMP JUMPDEST PUSH2 0xDCD SWAP2 SWAP1 PUSH2 0x3419 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0xA SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x100 SWAP1 SWAP2 DIV AND CALLER EQ PUSH2 0xE02 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB7A SWAP1 PUSH2 0x33CE JUMP JUMPDEST PUSH1 0x14 SSTORE JUMP JUMPDEST PUSH2 0xE11 CALLER DUP3 PUSH2 0x227F JUMP JUMPDEST PUSH2 0xE2D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB7A SWAP1 PUSH2 0x3430 JUMP JUMPDEST PUSH2 0xCB0 DUP4 DUP4 DUP4 PUSH2 0x2376 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xE43 DUP4 PUSH2 0x1633 JUMP JUMPDEST DUP3 LT PUSH2 0xEA5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243373231456E756D657261626C653A206F776E657220696E646578206F75 PUSH1 0x44 DUP3 ADD MSTORE PUSH11 0x74206F6620626F756E6473 PUSH1 0xA8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xB7A JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0xD SLOAD PUSH1 0x40 MLOAD PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF NOT CALLER PUSH1 0x60 SHL AND PUSH1 0x20 DUP3 ADD MSTORE DUP4 SWAP2 DUP4 SWAP2 PUSH2 0xF4C SWAP1 DUP3 SWAP1 PUSH1 0x34 ADD PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 DUP6 DUP6 DUP1 DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 PUSH1 0x20 MUL DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP SWAP3 SWAP5 SWAP4 SWAP3 POP POP PUSH2 0x2521 SWAP1 POP JUMP JUMPDEST PUSH2 0xF98 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x41646472657373206E6F7420696E2077686974656C6973742E00000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xB7A JUMP JUMPDEST PUSH1 0x17 SLOAD PUSH1 0x1 CALLVALUE PUSH2 0xFA8 DUP3 DUP5 PUSH2 0x3481 JUMP JUMPDEST EQ PUSH2 0xFF1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH25 0x24B731B7B93932B1BA1022AA24103B30B63AB29039B2B73A17 PUSH1 0x39 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xB7A JUMP JUMPDEST PUSH1 0x2 PUSH1 0xB SLOAD EQ ISZERO PUSH2 0x1044 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xB7A JUMP JUMPDEST PUSH1 0x2 PUSH1 0xB SSTORE PUSH1 0xA SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x106C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB7A SWAP1 PUSH2 0x34A0 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x18 SLOAD PUSH1 0xFF AND PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x1085 JUMPI PUSH2 0x1085 PUSH2 0x3318 JUMP JUMPDEST EQ PUSH2 0x10D2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x57686974656C6973742073616C65206E6F7420696E697469617465642E000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xB7A JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x13 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x1132 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x57686974656C697374206D696E7420616C726561647920636C61696D65642E00 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xB7A JUMP JUMPDEST PUSH1 0x12 SLOAD PUSH2 0x113D PUSH2 0xDB6 JUMP JUMPDEST PUSH2 0x1148 SWAP1 PUSH1 0x1 PUSH2 0x34CA JUMP JUMPDEST GT ISZERO PUSH2 0x11A8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4D696E7420616D6F756E742077696C6C206578636565642077686974656C6973 PUSH1 0x44 DUP3 ADD MSTORE PUSH9 0x3A1039BAB838363C97 PUSH1 0xB9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xB7A JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x13 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE PUSH2 0x11D4 SWAP1 PUSH2 0x11CF PUSH1 0xC SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x2537 JUMP JUMPDEST PUSH2 0x11E2 PUSH1 0xC DUP1 SLOAD PUSH1 0x1 ADD SWAP1 SSTORE JUMP JUMPDEST POP POP PUSH1 0x1 PUSH1 0xB SSTORE POP POP POP POP POP JUMP JUMPDEST PUSH1 0xA SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x100 SWAP1 SWAP2 DIV AND CALLER EQ PUSH2 0x1220 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB7A SWAP1 PUSH2 0x33CE JUMP JUMPDEST PUSH1 0x11 SLOAD PUSH1 0x40 MLOAD PUSH1 0x0 SWAP2 PUSH4 0x1000000 SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 SELFBALANCE SWAP1 DUP4 DUP2 DUP2 DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x1274 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1279 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0x12BE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x11 PUSH1 0x24 DUP3 ADD MSTORE PUSH17 0x2BB4BA34323930BBB6103330B4B632B217 PUSH1 0x79 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xB7A JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0xA SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x100 SWAP1 SWAP2 DIV AND CALLER EQ PUSH2 0x12F1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB7A SWAP1 PUSH2 0x33CE JUMP JUMPDEST PUSH2 0x12F9 PUSH2 0x2551 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0xCB0 DUP4 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x1D5A JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH2 0x1323 DUP4 PUSH2 0x1633 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1340 JUMPI PUSH2 0x1340 PUSH2 0x301C JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x1369 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x13B0 JUMPI PUSH2 0x1381 DUP6 DUP3 PUSH2 0xE38 JUMP JUMPDEST DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x1393 JUMPI PUSH2 0x1393 PUSH2 0x34E2 JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE DUP1 PUSH2 0x13A8 DUP2 PUSH2 0x34F8 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x136F JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x13C3 PUSH1 0x8 SLOAD SWAP1 JUMP JUMPDEST DUP3 LT PUSH2 0x1426 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243373231456E756D657261626C653A20676C6F62616C20696E646578206F PUSH1 0x44 DUP3 ADD MSTORE PUSH12 0x7574206F6620626F756E6473 PUSH1 0xA0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xB7A JUMP JUMPDEST PUSH1 0x8 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x1439 JUMPI PUSH2 0x1439 PUSH2 0x34E2 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0xA SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x100 SWAP1 SWAP2 DIV AND CALLER EQ PUSH2 0x147B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB7A SWAP1 PUSH2 0x33CE JUMP JUMPDEST PUSH1 0x11 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x14C8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH18 0x2130B9B2AAA9249034B990333937BD32B717 PUSH1 0x71 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xB7A JUMP JUMPDEST DUP1 MLOAD PUSH2 0xDB2 SWAP1 PUSH1 0xF SWAP1 PUSH1 0x20 DUP5 ADD SWAP1 PUSH2 0x2E7F JUMP JUMPDEST PUSH1 0xA SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x100 SWAP1 SWAP2 DIV AND CALLER EQ PUSH2 0x150B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB7A SWAP1 PUSH2 0x33CE JUMP JUMPDEST PUSH1 0x11 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0xFF SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP1 PUSH2 0xA6D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A206F776E657220717565727920666F72206E6F6E6578697374 PUSH1 0x44 DUP3 ADD MSTORE PUSH9 0x32B73A103A37B5B2B7 PUSH1 0xB9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xB7A JUMP JUMPDEST PUSH1 0xF DUP1 SLOAD PUSH2 0x15A5 SWAP1 PUSH2 0x3393 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x15D1 SWAP1 PUSH2 0x3393 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x161E JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x15F3 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x161E JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x1601 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xDCD PUSH2 0x62C PUSH2 0xDB6 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x169E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A2062616C616E636520717565727920666F7220746865207A65 PUSH1 0x44 DUP3 ADD MSTORE PUSH10 0x726F2061646472657373 PUSH1 0xB0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xB7A JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0xA SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x100 SWAP1 SWAP2 DIV AND CALLER EQ PUSH2 0x16EA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB7A SWAP1 PUSH2 0x33CE JUMP JUMPDEST PUSH2 0x12F9 PUSH1 0x0 PUSH2 0x25E4 JUMP JUMPDEST PUSH1 0xA SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x100 SWAP1 SWAP2 DIV AND CALLER EQ PUSH2 0x1724 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB7A SWAP1 PUSH2 0x33CE JUMP JUMPDEST PUSH1 0x17 SSTORE JUMP JUMPDEST PUSH1 0xA SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x100 SWAP1 SWAP2 DIV AND CALLER EQ PUSH2 0x1759 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB7A SWAP1 PUSH2 0x33CE JUMP JUMPDEST PUSH1 0x2 PUSH1 0x18 SLOAD PUSH1 0xFF AND PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x1772 JUMPI PUSH2 0x1772 PUSH2 0x3318 JUMP JUMPDEST EQ PUSH2 0x17BF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x57686974656C6973742073616C65206E6F7420696E697469617465642E000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xB7A JUMP JUMPDEST PUSH1 0x14 SLOAD PUSH1 0x15 SLOAD PUSH2 0x17D2 SWAP1 PUSH1 0xFF DUP5 AND PUSH2 0x34CA JUMP JUMPDEST GT ISZERO PUSH2 0x1833 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5472616E73616374696F6E206578636565647320746F74616C207465616D2D73 PUSH1 0x44 DUP3 ADD MSTORE PUSH10 0x616C6520737570706C79 PUSH1 0xB0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xB7A JUMP JUMPDEST DUP1 PUSH1 0xFF AND PUSH1 0x15 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x1848 SWAP2 SWAP1 PUSH2 0x34CA JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH1 0x1 SWAP1 POP JUMPDEST DUP2 PUSH1 0xFF AND DUP2 GT PUSH2 0xDB2 JUMPI PUSH2 0x1868 CALLER PUSH2 0x11CF PUSH1 0xC SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x1876 PUSH1 0xC DUP1 SLOAD PUSH1 0x1 ADD SWAP1 SSTORE JUMP JUMPDEST DUP1 PUSH2 0x1880 DUP2 PUSH2 0x34F8 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x1851 JUMP JUMPDEST PUSH1 0xA SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x100 SWAP1 SWAP2 DIV AND CALLER EQ PUSH2 0x18B8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB7A SWAP1 PUSH2 0x33CE JUMP JUMPDEST PUSH1 0xD SSTORE JUMP JUMPDEST PUSH1 0xA SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x100 SWAP1 SWAP2 DIV AND CALLER EQ PUSH2 0x18ED JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB7A SWAP1 PUSH2 0x33CE JUMP JUMPDEST PUSH1 0x0 PUSH1 0xE DUP1 SLOAD PUSH2 0x18FC SWAP1 PUSH2 0x3393 JUMP JUMPDEST SWAP1 POP GT PUSH2 0x194B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x50726F76656E616E636520686173682063616E6E6F7420626520656D7074792E PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xB7A JUMP JUMPDEST PUSH1 0x11 SLOAD PUSH3 0x10000 SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x19AF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x50726F76656E616E6365206861736820697320616C72656164792066726F7A65 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x3717 PUSH1 0xF1 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xB7A JUMP JUMPDEST PUSH1 0x11 DUP1 SLOAD PUSH3 0xFF0000 NOT AND PUSH3 0x10000 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0xA SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x100 SWAP1 SWAP2 DIV AND CALLER EQ PUSH2 0x19F2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB7A SWAP1 PUSH2 0x33CE JUMP JUMPDEST PUSH2 0x12F9 PUSH2 0x263E JUMP JUMPDEST PUSH1 0x17 SLOAD PUSH1 0xFF DUP3 AND CALLVALUE PUSH2 0x1A0C DUP3 DUP5 PUSH2 0x3481 JUMP JUMPDEST EQ PUSH2 0x1A55 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH25 0x24B731B7B93932B1BA1022AA24103B30B63AB29039B2B73A17 PUSH1 0x39 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xB7A JUMP JUMPDEST PUSH1 0x2 PUSH1 0xB SLOAD EQ ISZERO PUSH2 0x1AA8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xB7A JUMP JUMPDEST PUSH1 0x2 PUSH1 0xB SSTORE PUSH1 0xA SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x1AD0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB7A SWAP1 PUSH2 0x34A0 JUMP JUMPDEST PUSH1 0x3 PUSH1 0x18 SLOAD PUSH1 0xFF AND PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x1AE9 JUMPI PUSH2 0x1AE9 PUSH2 0x3318 JUMP JUMPDEST EQ PUSH2 0x1B36 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5075626C69632053616C65206E6F7420696E697469617465642E000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xB7A JUMP JUMPDEST PUSH1 0x16 SLOAD DUP4 PUSH1 0xFF AND PUSH2 0x1B45 PUSH2 0xDB6 JUMP JUMPDEST PUSH2 0x1B4F SWAP2 SWAP1 PUSH2 0x34CA JUMP JUMPDEST GT ISZERO PUSH2 0x1BAB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5472616E73616374696F6E206578636565647320746F74616C2073616C652073 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x7570706C79 PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xB7A JUMP JUMPDEST PUSH1 0x11 SLOAD PUSH1 0xFF SWAP1 DUP2 AND SWAP1 DUP5 AND GT ISZERO PUSH2 0x1C17 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45786365656473206D617820616C6C6F776564206D696E747320706572207472 PUSH1 0x44 DUP3 ADD MSTORE PUSH10 0x30B739B0B1BA34B7B717 PUSH1 0xB1 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xB7A JUMP JUMPDEST PUSH1 0x1 JUMPDEST DUP4 PUSH1 0xFF AND DUP2 GT PUSH2 0x1C51 JUMPI PUSH2 0x1C31 CALLER PUSH2 0x11CF PUSH1 0xC SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x1C3F PUSH1 0xC DUP1 SLOAD PUSH1 0x1 ADD SWAP1 SSTORE JUMP JUMPDEST DUP1 PUSH2 0x1C49 DUP2 PUSH2 0x34F8 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x1C1A JUMP JUMPDEST POP POP PUSH1 0x1 PUSH1 0xB SSTORE POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x1 DUP1 SLOAD PUSH2 0xA82 SWAP1 PUSH2 0x3393 JUMP JUMPDEST PUSH2 0xDB2 CALLER DUP4 DUP4 PUSH2 0x2696 JUMP JUMPDEST PUSH1 0xA SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x100 SWAP1 SWAP2 DIV AND CALLER EQ PUSH2 0x1CA6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB7A SWAP1 PUSH2 0x33CE JUMP JUMPDEST PUSH1 0x16 SLOAD DUP3 PUSH1 0xFF AND PUSH2 0x1CB5 PUSH2 0xDB6 JUMP JUMPDEST PUSH2 0x1CBF SWAP2 SWAP1 PUSH2 0x34CA JUMP JUMPDEST GT ISZERO PUSH2 0x1D20 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4D696E7420616D6F756E742077696C6C2065786365656420746F74616C207361 PUSH1 0x44 DUP3 ADD MSTORE PUSH10 0x36329039BAB838363C97 PUSH1 0xB1 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xB7A JUMP JUMPDEST PUSH1 0x1 JUMPDEST DUP3 PUSH1 0xFF AND DUP2 GT PUSH2 0xCB0 JUMPI PUSH2 0x1D3A DUP3 PUSH2 0x11CF PUSH1 0xC SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x1D48 PUSH1 0xC DUP1 SLOAD PUSH1 0x1 ADD SWAP1 SSTORE JUMP JUMPDEST DUP1 PUSH2 0x1D52 DUP2 PUSH2 0x34F8 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x1D23 JUMP JUMPDEST PUSH2 0x1D64 CALLER DUP4 PUSH2 0x227F JUMP JUMPDEST PUSH2 0x1D80 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB7A SWAP1 PUSH2 0x3430 JUMP JUMPDEST PUSH2 0x1D8C DUP5 DUP5 DUP5 DUP5 PUSH2 0x2765 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0xA SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x100 SWAP1 SWAP2 DIV AND CALLER EQ PUSH2 0x1DC2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB7A SWAP1 PUSH2 0x33CE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x13 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x10 DUP1 SLOAD PUSH2 0x15A5 SWAP1 PUSH2 0x3393 JUMP JUMPDEST PUSH1 0xE DUP1 SLOAD PUSH2 0x15A5 SWAP1 PUSH2 0x3393 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x60 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x1E7F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732314D657461646174613A2055524920717565727920666F72206E6F PUSH1 0x44 DUP3 ADD MSTORE PUSH15 0x3732BC34B9BA32B73A103A37B5B2B7 PUSH1 0x89 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xB7A JUMP JUMPDEST PUSH1 0xF PUSH2 0x1E8A DUP4 PUSH2 0x2798 JUMP JUMPDEST PUSH1 0x10 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x1E9E SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x35AD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0xA SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x100 SWAP1 SWAP2 DIV AND CALLER EQ PUSH2 0x1EE4 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB7A SWAP1 PUSH2 0x33CE JUMP JUMPDEST PUSH1 0x11 SLOAD PUSH3 0x10000 SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO PUSH1 0x1 EQ PUSH2 0x1F67 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x38 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x50726F76656E616E63652068617368206D7573742062652066726F7A656E2062 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x65666F7265206D696E74696E672063616E2073746172742E0000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xB7A JUMP JUMPDEST PUSH1 0x18 DUP1 SLOAD DUP3 SWAP2 SWAP1 PUSH1 0xFF NOT AND PUSH1 0x1 DUP4 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x1F86 JUMPI PUSH2 0x1F86 PUSH2 0x3318 JUMP JUMPDEST MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xDCD PUSH2 0xDB6 JUMP JUMPDEST PUSH1 0xA SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x100 SWAP1 SWAP2 DIV AND CALLER EQ PUSH2 0x1FC8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB7A SWAP1 PUSH2 0x33CE JUMP JUMPDEST DUP1 MLOAD PUSH2 0xDB2 SWAP1 PUSH1 0x10 SWAP1 PUSH1 0x20 DUP5 ADD SWAP1 PUSH2 0x2E7F JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1FE5 PUSH2 0xDB6 JUMP JUMPDEST PUSH1 0x16 SLOAD PUSH2 0xDCD SWAP2 SWAP1 PUSH2 0x3419 JUMP JUMPDEST PUSH1 0xA SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x100 SWAP1 SWAP2 DIV AND CALLER EQ PUSH2 0x2022 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB7A SWAP1 PUSH2 0x33CE JUMP JUMPDEST PUSH1 0x0 PUSH1 0xF DUP1 SLOAD PUSH2 0x2031 SWAP1 PUSH2 0x3393 JUMP JUMPDEST SWAP1 POP GT PUSH2 0x2080 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x626173655552492063616E6E6F7420626520656D707479000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xB7A JUMP JUMPDEST PUSH1 0x11 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x20D8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4261736555524920697320616C72656164792066726F7A656E2E000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xB7A JUMP JUMPDEST PUSH1 0x11 DUP1 SLOAD PUSH2 0xFF00 NOT AND PUSH2 0x100 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0xA SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x100 SWAP1 SWAP2 DIV AND CALLER EQ PUSH2 0x2119 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB7A SWAP1 PUSH2 0x33CE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x217E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xB7A JUMP JUMPDEST PUSH2 0x12BE DUP2 PUSH2 0x25E4 JUMP JUMPDEST PUSH1 0xA SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x100 SWAP1 SWAP2 DIV AND CALLER EQ PUSH2 0x21B7 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB7A SWAP1 PUSH2 0x33CE JUMP JUMPDEST PUSH1 0x11 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND PUSH4 0x1000000 MUL PUSH4 0x1000000 PUSH1 0x1 PUSH1 0xB8 SHL SUB NOT SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST DUP1 SLOAD PUSH1 0x1 ADD SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x780E9D63 PUSH1 0xE0 SHL EQ DUP1 PUSH2 0xA6D JUMPI POP PUSH2 0xA6D DUP3 PUSH2 0x2896 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE DUP2 SWAP1 PUSH2 0x2246 DUP3 PUSH2 0x1521 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x22F8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A206F70657261746F7220717565727920666F72206E6F6E6578 PUSH1 0x44 DUP3 ADD MSTORE PUSH12 0x34B9BA32B73A103A37B5B2B7 PUSH1 0xA1 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xB7A JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2303 DUP4 PUSH2 0x1521 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ DUP1 PUSH2 0x233E JUMPI POP DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x2333 DUP5 PUSH2 0xB05 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ JUMPDEST DUP1 PUSH2 0x236E JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP9 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 SLOAD PUSH1 0xFF AND JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x2389 DUP3 PUSH2 0x1521 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x23F1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A207472616E73666572206F6620746F6B656E20746861742069 PUSH1 0x44 DUP3 ADD MSTORE PUSH9 0x39903737BA1037BBB7 PUSH1 0xB9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xB7A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x2453 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x4552433732313A207472616E7366657220746F20746865207A65726F20616464 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x72657373 PUSH1 0xE0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xB7A JUMP JUMPDEST PUSH2 0x245E DUP4 DUP4 DUP4 PUSH2 0x28E6 JUMP JUMPDEST PUSH2 0x2469 PUSH1 0x0 DUP3 PUSH2 0x2211 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD PUSH1 0x1 SWAP3 SWAP1 PUSH2 0x2492 SWAP1 DUP5 SWAP1 PUSH2 0x3419 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD PUSH1 0x1 SWAP3 SWAP1 PUSH2 0x24C0 SWAP1 DUP5 SWAP1 PUSH2 0x34CA JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 DUP2 AND SWAP2 DUP3 OR SWAP1 SWAP3 SSTORE SWAP2 MLOAD DUP5 SWAP4 SWAP2 DUP8 AND SWAP2 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP2 LOG4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x252E DUP6 DUP5 PUSH2 0x2914 JUMP JUMPDEST EQ SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH2 0xDB2 DUP3 DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x29B8 JUMP JUMPDEST PUSH1 0xA SLOAD PUSH1 0xFF AND PUSH2 0x259A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x14185D5CD8589B194E881B9BDD081C185D5CD959 PUSH1 0x62 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xB7A JUMP JUMPDEST PUSH1 0xA DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE PUSH32 0x5DB9EE0A495BF2E6FF9C91A7834C1BA4FDD244A5E8AA4E537BD38AEAE4B073AA CALLER JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP JUMPDEST PUSH1 0xA DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH2 0x100 DUP2 DUP2 MUL PUSH2 0x100 PUSH1 0x1 PUSH1 0xA8 SHL SUB NOT DUP6 AND OR SWAP1 SWAP5 SSTORE PUSH1 0x40 MLOAD SWAP4 SWAP1 SWAP3 DIV AND SWAP2 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH1 0x0 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0xA SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x2661 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB7A SWAP1 PUSH2 0x34A0 JUMP JUMPDEST PUSH1 0xA DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE PUSH32 0x62E78CEA01BEE320CD4E420270B5EA74000D11B0C9F74754EBDBFC544B05A258 PUSH2 0x25C7 CALLER SWAP1 JUMP JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO PUSH2 0x26F8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A20617070726F766520746F2063616C6C657200000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xB7A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND DUP7 ISZERO ISZERO SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE SWAP2 MLOAD SWAP2 DUP3 MSTORE PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH2 0x2770 DUP5 DUP5 DUP5 PUSH2 0x2376 JUMP JUMPDEST PUSH2 0x277C DUP5 DUP5 DUP5 DUP5 PUSH2 0x29EB JUMP JUMPDEST PUSH2 0x1D8C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB7A SWAP1 PUSH2 0x35E0 JUMP JUMPDEST PUSH1 0x60 DUP2 PUSH2 0x27BC JUMPI POP POP PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x1 DUP2 MSTORE PUSH1 0x3 PUSH1 0xFC SHL PUSH1 0x20 DUP3 ADD MSTORE SWAP1 JUMP JUMPDEST DUP2 PUSH1 0x0 JUMPDEST DUP2 ISZERO PUSH2 0x27E6 JUMPI DUP1 PUSH2 0x27D0 DUP2 PUSH2 0x34F8 JUMP JUMPDEST SWAP2 POP PUSH2 0x27DF SWAP1 POP PUSH1 0xA DUP4 PUSH2 0x3648 JUMP JUMPDEST SWAP2 POP PUSH2 0x27C0 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2801 JUMPI PUSH2 0x2801 PUSH2 0x301C JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x282B JUMPI PUSH1 0x20 DUP3 ADD DUP2 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP JUMPDEST DUP5 ISZERO PUSH2 0x236E JUMPI PUSH2 0x2840 PUSH1 0x1 DUP4 PUSH2 0x3419 JUMP JUMPDEST SWAP2 POP PUSH2 0x284D PUSH1 0xA DUP7 PUSH2 0x365C JUMP JUMPDEST PUSH2 0x2858 SWAP1 PUSH1 0x30 PUSH2 0x34CA JUMP JUMPDEST PUSH1 0xF8 SHL DUP2 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x286D JUMPI PUSH2 0x286D PUSH2 0x34E2 JUMP JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xF8 SHL SUB NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP PUSH2 0x288F PUSH1 0xA DUP7 PUSH2 0x3648 JUMP JUMPDEST SWAP5 POP PUSH2 0x282F JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x80AC58CD PUSH1 0xE0 SHL EQ DUP1 PUSH2 0x28C7 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x5B5E139F PUSH1 0xE0 SHL EQ JUMPDEST DUP1 PUSH2 0xA6D JUMPI POP PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP4 AND EQ PUSH2 0xA6D JUMP JUMPDEST PUSH1 0xA SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x2909 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB7A SWAP1 PUSH2 0x34A0 JUMP JUMPDEST PUSH2 0xCB0 DUP4 DUP4 DUP4 PUSH2 0x2AE9 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 JUMPDEST DUP5 MLOAD DUP2 LT ISZERO PUSH2 0x13B0 JUMPI PUSH1 0x0 DUP6 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x2936 JUMPI PUSH2 0x2936 PUSH2 0x34E2 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SWAP1 POP DUP1 DUP4 GT PUSH2 0x2978 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP2 ADD DUP6 SWAP1 MSTORE SWAP1 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x60 ADD PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP3 POP PUSH2 0x29A5 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP2 ADD DUP4 SWAP1 MSTORE SWAP1 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x60 ADD PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP3 POP JUMPDEST POP DUP1 PUSH2 0x29B0 DUP2 PUSH2 0x34F8 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x2919 JUMP JUMPDEST PUSH2 0x29C2 DUP4 DUP4 PUSH2 0x2BA1 JUMP JUMPDEST PUSH2 0x29CF PUSH1 0x0 DUP5 DUP5 DUP5 PUSH2 0x29EB JUMP JUMPDEST PUSH2 0xCB0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB7A SWAP1 PUSH2 0x35E0 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND EXTCODESIZE ISZERO PUSH2 0x2ADE JUMPI PUSH1 0x40 MLOAD PUSH4 0xA85BD01 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 PUSH4 0x150B7A02 SWAP1 PUSH2 0x2A2F SWAP1 CALLER SWAP1 DUP10 SWAP1 DUP9 SWAP1 DUP9 SWAP1 PUSH1 0x4 ADD PUSH2 0x3670 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x2A6A JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0x2A67 SWAP2 DUP2 ADD SWAP1 PUSH2 0x36AD JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x2AC4 JUMPI RETURNDATASIZE DUP1 DUP1 ISZERO PUSH2 0x2A98 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x2A9D JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP DUP1 MLOAD PUSH2 0x2ABC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB7A SWAP1 PUSH2 0x35E0 JUMP JUMPDEST DUP1 MLOAD DUP2 PUSH1 0x20 ADD REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT AND PUSH4 0xA85BD01 PUSH1 0xE1 SHL EQ SWAP1 POP PUSH2 0x236E JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x2B44 JUMPI PUSH2 0x2B3F DUP2 PUSH1 0x8 DUP1 SLOAD PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP3 SWAP1 SSTORE PUSH1 0x1 DUP3 ADD DUP4 SSTORE SWAP2 SWAP1 SWAP2 MSTORE PUSH32 0xF3F7A9FE364FAAB93B216DA50A3214154F22A0A2B415B23A84C8169E8B636EE3 ADD SSTORE JUMP JUMPDEST PUSH2 0x2B67 JUMP JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x2B67 JUMPI PUSH2 0x2B67 DUP4 DUP3 PUSH2 0x2CEF JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x2B7E JUMPI PUSH2 0xCB0 DUP2 PUSH2 0x2D8C JUMP JUMPDEST DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0xCB0 JUMPI PUSH2 0xCB0 DUP3 DUP3 PUSH2 0x2E3B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x2BF7 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A206D696E7420746F20746865207A65726F2061646472657373 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xB7A JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND ISZERO PUSH2 0x2C5C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A20746F6B656E20616C7265616479206D696E74656400000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xB7A JUMP JUMPDEST PUSH2 0x2C68 PUSH1 0x0 DUP4 DUP4 PUSH2 0x28E6 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD PUSH1 0x1 SWAP3 SWAP1 PUSH2 0x2C91 SWAP1 DUP5 SWAP1 PUSH2 0x34CA JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE SWAP1 MLOAD DUP4 SWAP3 SWAP1 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP1 DUP3 SWAP1 LOG4 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH2 0x2CFC DUP5 PUSH2 0x1633 JUMP JUMPDEST PUSH2 0x2D06 SWAP2 SWAP1 PUSH2 0x3419 JUMP JUMPDEST PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 SWAP2 POP DUP1 DUP3 EQ PUSH2 0x2D59 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP6 DUP5 MSTORE DUP3 MSTORE DUP1 DUP4 KECCAK256 SLOAD DUP5 DUP5 MSTORE DUP2 DUP5 KECCAK256 DUP2 SWAP1 SSTORE DUP4 MSTORE PUSH1 0x7 SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 DUP2 SWAP1 SSTORE JUMPDEST POP PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x7 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 DUP5 SWAP1 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP5 AND DUP4 MSTORE PUSH1 0x6 DUP2 MSTORE DUP4 DUP4 KECCAK256 SWAP2 DUP4 MSTORE MSTORE SWAP1 DUP2 KECCAK256 SSTORE JUMP JUMPDEST PUSH1 0x8 SLOAD PUSH1 0x0 SWAP1 PUSH2 0x2D9E SWAP1 PUSH1 0x1 SWAP1 PUSH2 0x3419 JUMP JUMPDEST PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH1 0x8 DUP1 SLOAD SWAP4 SWAP5 POP SWAP1 SWAP3 DUP5 SWAP1 DUP2 LT PUSH2 0x2DC6 JUMPI PUSH2 0x2DC6 PUSH2 0x34E2 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD SWAP1 POP DUP1 PUSH1 0x8 DUP4 DUP2 SLOAD DUP2 LT PUSH2 0x2DE7 JUMPI PUSH2 0x2DE7 PUSH2 0x34E2 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 SWAP1 SWAP2 ADD SWAP3 SWAP1 SWAP3 SSTORE DUP3 DUP2 MSTORE PUSH1 0x9 SWAP1 SWAP2 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP5 SWAP1 SSTORE DUP6 DUP3 MSTORE DUP2 KECCAK256 SSTORE PUSH1 0x8 DUP1 SLOAD DUP1 PUSH2 0x2E1F JUMPI PUSH2 0x2E1F PUSH2 0x36CA JUMP JUMPDEST PUSH1 0x1 SWAP1 SUB DUP2 DUP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SSTORE SWAP1 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2E46 DUP4 PUSH2 0x1633 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP7 DUP5 MSTORE DUP3 MSTORE DUP1 DUP4 KECCAK256 DUP6 SWAP1 SSTORE SWAP4 DUP3 MSTORE PUSH1 0x7 SWAP1 MSTORE SWAP2 SWAP1 SWAP2 KECCAK256 SWAP2 SWAP1 SWAP2 SSTORE POP JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH2 0x2E8B SWAP1 PUSH2 0x3393 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH2 0x2EAD JUMPI PUSH1 0x0 DUP6 SSTORE PUSH2 0x2EF3 JUMP JUMPDEST DUP3 PUSH1 0x1F LT PUSH2 0x2EC6 JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH2 0x2EF3 JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH2 0x2EF3 JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH2 0x2EF3 JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0x2ED8 JUMP JUMPDEST POP PUSH2 0x2EFF SWAP3 SWAP2 POP PUSH2 0x2F03 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0x2EFF JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x2F04 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND DUP2 EQ PUSH2 0x12BE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2F40 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x2F4B DUP2 PUSH2 0x2F18 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x2F6D JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x2F55 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x1D8C JUMPI POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH2 0x2F96 DUP2 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP7 ADD PUSH2 0x2F52 JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x20 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0x2F4B PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x2F7E JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2FCF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x2FED JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x3005 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x300E DUP4 PUSH2 0x2FD6 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP5 GT ISZERO PUSH2 0x304D JUMPI PUSH2 0x304D PUSH2 0x301C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP6 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP3 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH2 0x3075 JUMPI PUSH2 0x3075 PUSH2 0x301C JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP1 SWAP4 POP DUP6 DUP2 MSTORE DUP7 DUP7 DUP7 ADD GT ISZERO PUSH2 0x308E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP6 DUP6 PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 PUSH1 0x20 DUP8 DUP4 ADD ADD MSTORE POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x30BA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x30D1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD PUSH1 0x1F DUP2 ADD DUP5 SGT PUSH2 0x30E2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x236E DUP5 DUP3 CALLDATALOAD PUSH1 0x20 DUP5 ADD PUSH2 0x3032 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x3106 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x310F DUP5 PUSH2 0x2FD6 JUMP JUMPDEST SWAP3 POP PUSH2 0x311D PUSH1 0x20 DUP6 ADD PUSH2 0x2FD6 JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x20 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x3140 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x3158 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP6 ADD SWAP2 POP DUP6 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x316C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0x317B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP7 PUSH1 0x20 DUP3 PUSH1 0x5 SHL DUP6 ADD ADD GT ISZERO PUSH2 0x3190 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 SWAP3 SWAP1 SWAP3 ADD SWAP7 SWAP2 SWAP6 POP SWAP1 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x31B4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2F4B DUP3 PUSH2 0x2FD6 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP3 MLOAD DUP3 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP2 SWAP1 DUP5 DUP3 ADD SWAP1 PUSH1 0x40 DUP6 ADD SWAP1 DUP5 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x31F5 JUMPI DUP4 MLOAD DUP4 MSTORE SWAP3 DUP5 ADD SWAP3 SWAP2 DUP5 ADD SWAP2 PUSH1 0x1 ADD PUSH2 0x31D9 JUMP JUMPDEST POP SWAP1 SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0xFF DUP2 AND DUP2 EQ PUSH2 0x2FED JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3224 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2F4B DUP3 PUSH2 0x3201 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x3240 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x3249 DUP4 PUSH2 0x2FD6 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x325E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x327C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x3285 DUP4 PUSH2 0x3201 JUMP JUMPDEST SWAP2 POP PUSH2 0x3293 PUSH1 0x20 DUP5 ADD PUSH2 0x2FD6 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x32B2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x32BB DUP6 PUSH2 0x2FD6 JUMP JUMPDEST SWAP4 POP PUSH2 0x32C9 PUSH1 0x20 DUP7 ADD PUSH2 0x2FD6 JUMP JUMPDEST SWAP3 POP PUSH1 0x40 DUP6 ADD CALLDATALOAD SWAP2 POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x32EC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP6 ADD PUSH1 0x1F DUP2 ADD DUP8 SGT PUSH2 0x32FD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x330C DUP8 DUP3 CALLDATALOAD PUSH1 0x20 DUP5 ADD PUSH2 0x3032 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 DUP2 ADD PUSH1 0x4 DUP4 LT PUSH2 0x3350 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP2 SWAP1 MSTORE SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3368 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x4 DUP2 LT PUSH2 0x2F4B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x338A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x3285 DUP4 PUSH2 0x2FD6 JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x33A7 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0x33C8 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 DUP2 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0x342B JUMPI PUSH2 0x342B PUSH2 0x3403 JUMP JUMPDEST POP SUB SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x31 SWAP1 DUP3 ADD MSTORE PUSH32 0x4552433732313A207472616E736665722063616C6C6572206973206E6F74206F PUSH1 0x40 DUP3 ADD MSTORE PUSH17 0x1DDB995C881B9BDC88185C1C1C9BDD9959 PUSH1 0x7A SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 NOT DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x349B JUMPI PUSH2 0x349B PUSH2 0x3403 JUMP JUMPDEST POP MUL SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x10 SWAP1 DUP3 ADD MSTORE PUSH16 0x14185D5CD8589B194E881C185D5CD959 PUSH1 0x82 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x34DD JUMPI PUSH2 0x34DD PUSH2 0x3403 JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x0 NOT DUP3 EQ ISZERO PUSH2 0x350C JUMPI PUSH2 0x350C PUSH2 0x3403 JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST DUP1 SLOAD PUSH1 0x0 SWAP1 PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP1 DUP4 AND DUP1 PUSH2 0x352D JUMPI PUSH1 0x7F DUP4 AND SWAP3 POP JUMPDEST PUSH1 0x20 DUP1 DUP5 LT DUP3 EQ ISZERO PUSH2 0x354F JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP2 DUP1 ISZERO PUSH2 0x3563 JUMPI PUSH1 0x1 DUP2 EQ PUSH2 0x3574 JUMPI PUSH2 0x35A1 JUMP JUMPDEST PUSH1 0xFF NOT DUP7 AND DUP10 MSTORE DUP5 DUP10 ADD SWAP7 POP PUSH2 0x35A1 JUMP JUMPDEST PUSH1 0x0 DUP9 DUP2 MSTORE PUSH1 0x20 SWAP1 KECCAK256 PUSH1 0x0 JUMPDEST DUP7 DUP2 LT ISZERO PUSH2 0x3599 JUMPI DUP2 SLOAD DUP12 DUP3 ADD MSTORE SWAP1 DUP6 ADD SWAP1 DUP4 ADD PUSH2 0x3580 JUMP JUMPDEST POP POP DUP5 DUP10 ADD SWAP7 POP JUMPDEST POP POP POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x35B9 DUP3 DUP7 PUSH2 0x3513 JUMP JUMPDEST DUP5 MLOAD PUSH2 0x35C9 DUP2 DUP4 PUSH1 0x20 DUP10 ADD PUSH2 0x2F52 JUMP JUMPDEST PUSH2 0x35D5 DUP2 DUP4 ADD DUP7 PUSH2 0x3513 JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x32 SWAP1 DUP3 ADD MSTORE PUSH32 0x4552433732313A207472616E7366657220746F206E6F6E204552433732315265 PUSH1 0x40 DUP3 ADD MSTORE PUSH18 0x31B2B4BB32B91034B6B83632B6B2B73A32B9 PUSH1 0x71 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x3657 JUMPI PUSH2 0x3657 PUSH2 0x3632 JUMP JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x366B JUMPI PUSH2 0x366B PUSH2 0x3632 JUMP JUMPDEST POP MOD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND DUP3 MSTORE DUP5 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x80 PUSH1 0x60 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH2 0x36A3 SWAP1 DUP4 ADD DUP5 PUSH2 0x2F7E JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x36BF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x2F4B DUP2 PUSH2 0x2F18 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x31 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP5 OR 0xAC PUSH27 0xE8B4EEC52A75127BB2CE25F205ED66089BF35CA7D905920F20E3AA 0x49 PUSH5 0x736F6C6343 STOP ADDMOD EXP STOP CALLER ",
  "pcMap": {
    "0": {
      "offset": [
        490,
        8957
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x80"
    },
    "2": {
      "fn": null,
      "offset": [
        490,
        8957
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "4": {
      "fn": null,
      "offset": [
        490,
        8957
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "5": {
      "fn": null,
      "offset": [
        490,
        8957
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "7": {
      "fn": null,
      "offset": [
        490,
        8957
      ],
      "op": "CALLDATASIZE",
      "path": "16"
    },
    "8": {
      "fn": null,
      "offset": [
        490,
        8957
      ],
      "op": "LT",
      "path": "16"
    },
    "9": {
      "fn": null,
      "offset": [
        490,
        8957
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x381"
    },
    "12": {
      "fn": null,
      "offset": [
        490,
        8957
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "13": {
      "fn": null,
      "offset": [
        490,
        8957
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "15": {
      "fn": null,
      "offset": [
        490,
        8957
      ],
      "op": "CALLDATALOAD",
      "path": "16"
    },
    "16": {
      "fn": null,
      "offset": [
        490,
        8957
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0xE0"
    },
    "18": {
      "fn": null,
      "offset": [
        490,
        8957
      ],
      "op": "SHR",
      "path": "16"
    },
    "19": {
      "fn": null,
      "offset": [
        490,
        8957
      ],
      "op": "DUP1",
      "path": "16"
    },
    "20": {
      "fn": null,
      "offset": [
        490,
        8957
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0x7CB64759"
    },
    "25": {
      "fn": null,
      "offset": [
        490,
        8957
      ],
      "op": "GT",
      "path": "16"
    },
    "26": {
      "fn": null,
      "offset": [
        490,
        8957
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1D1"
    },
    "29": {
      "fn": null,
      "offset": [
        490,
        8957
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "30": {
      "fn": null,
      "offset": [
        490,
        8957
      ],
      "op": "DUP1",
      "path": "16"
    },
    "31": {
      "fn": null,
      "offset": [
        490,
        8957
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0xC6682862"
    },
    "36": {
      "fn": null,
      "offset": [
        490,
        8957
      ],
      "op": "GT",
      "path": "16"
    },
    "37": {
      "fn": null,
      "offset": [
        490,
        8957
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x102"
    },
    "40": {
      "fn": null,
      "offset": [
        490,
        8957
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "41": {
      "fn": null,
      "offset": [
        490,
        8957
      ],
      "op": "DUP1",
      "path": "16"
    },
    "42": {
      "fn": null,
      "offset": [
        490,
        8957
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0xDE5F9866"
    },
    "47": {
      "fn": null,
      "offset": [
        490,
        8957
      ],
      "op": "GT",
      "path": "16"
    },
    "48": {
      "fn": null,
      "offset": [
        490,
        8957
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xA0"
    },
    "51": {
      "fn": null,
      "offset": [
        490,
        8957
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "52": {
      "fn": null,
      "offset": [
        490,
        8957
      ],
      "op": "DUP1",
      "path": "16"
    },
    "53": {
      "fn": null,
      "offset": [
        490,
        8957
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0xF2FDE38B"
    },
    "58": {
      "fn": null,
      "offset": [
        490,
        8957
      ],
      "op": "GT",
      "path": "16"
    },
    "59": {
      "fn": null,
      "offset": [
        490,
        8957
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x6F"
    },
    "62": {
      "fn": null,
      "offset": [
        490,
        8957
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "63": {
      "fn": null,
      "offset": [
        490,
        8957
      ],
      "op": "DUP1",
      "path": "16"
    },
    "64": {
      "fn": null,
      "offset": [
        490,
        8957
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0xF2FDE38B"
    },
    "69": {
      "fn": null,
      "offset": [
        490,
        8957
      ],
      "op": "EQ",
      "path": "16"
    },
    "70": {
      "fn": null,
      "offset": [
        490,
        8957
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x9E5"
    },
    "73": {
      "fn": null,
      "offset": [
        490,
        8957
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "74": {
      "fn": null,
      "offset": [
        490,
        8957
      ],
      "op": "DUP1",
      "path": "16"
    },
    "75": {
      "fn": null,
      "offset": [
        490,
        8957
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0xF4EFA3E6"
    },
    "80": {
      "fn": null,
      "offset": [
        490,
        8957
      ],
      "op": "EQ",
      "path": "16"
    },
    "81": {
      "fn": null,
      "offset": [
        490,
        8957
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xA05"
    },
    "84": {
      "fn": null,
      "offset": [
        490,
        8957
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "85": {
      "fn": null,
      "offset": [
        490,
        8957
      ],
      "op": "DUP1",
      "path": "16"
    },
    "86": {
      "fn": null,
      "offset": [
        490,
        8957
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0xF51F96DD"
    },
    "91": {
      "fn": null,
      "offset": [
        490,
        8957
      ],
      "op": "EQ",
      "path": "16"
    },
    "92": {
      "fn": null,
      "offset": [
        490,
        8957
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xA25"
    },
    "95": {
      "fn": null,
      "offset": [
        490,
        8957
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "96": {
      "fn": null,
      "offset": [
        490,
        8957
      ],
      "op": "DUP1",
      "path": "16"
    },
    "97": {
      "fn": null,
      "offset": [
        490,
        8957
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0xFFA9CD3B"
    },
    "102": {
      "fn": null,
      "offset": [
        490,
        8957
      ],
      "op": "EQ",
      "path": "16"
    },
    "103": {
      "fn": null,
      "offset": [
        490,
        8957
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xA3B"
    },
    "106": {
      "fn": null,
      "offset": [
        490,
        8957
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "107": {
      "fn": null,
      "offset": [
        490,
        8957
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "109": {
      "fn": null,
      "offset": [
        490,
        8957
      ],
      "op": "DUP1",
      "path": "16"
    },
    "110": {
      "fn": null,
      "offset": [
        490,
        8957
      ],
      "op": "REVERT",
      "path": "16"
    },
    "111": {
      "fn": null,
      "offset": [
        490,
        8957
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "112": {
      "fn": null,
      "offset": [
        490,
        8957
      ],
      "op": "DUP1",
      "path": "16"
    },
    "113": {
      "fn": null,
      "offset": [
        490,
        8957
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0xDE5F9866"
    },
    "118": {
      "fn": null,
      "offset": [
        490,
        8957
      ],
      "op": "EQ",
      "path": "16"
    },
    "119": {
      "fn": null,
      "offset": [
        490,
        8957
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x946"
    },
    "122": {
      "fn": null,
      "offset": [
        490,
        8957
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "123": {
      "fn": null,
      "offset": [
        490,
        8957
      ],
      "op": "DUP1",
      "path": "16"
    },
    "124": {
      "fn": null,
      "offset": [
        490,
        8957
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0xDE7FCB1D"
    },
    "129": {
      "fn": null,
      "offset": [
        490,
        8957
      ],
      "op": "EQ",
      "path": "16"
    },
    "130": {
      "fn": null,
      "offset": [
        490,
        8957
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x95B"
    },
    "133": {
      "fn": null,
      "offset": [
        490,
        8957
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "134": {
      "fn": null,
      "offset": [
        490,
        8957
      ],
      "op": "DUP1",
      "path": "16"
    },
    "135": {
      "fn": null,
      "offset": [
        490,
        8957
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0xE7BC8208"
    },
    "140": {
      "fn": null,
      "offset": [
        490,
        8957
      ],
      "op": "EQ",
      "path": "16"
    },
    "141": {
      "fn": null,
      "offset": [
        490,
        8957
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x987"
    },
    "144": {
      "fn": null,
      "offset": [
        490,
        8957
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "145": {
      "fn": null,
      "offset": [
        490,
        8957
      ],
      "op": "DUP1",
      "path": "16"
    },
    "146": {
      "fn": null,
      "offset": [
        490,
        8957
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0xE985E9C5"
    },
    "151": {
      "fn": null,
      "offset": [
        490,
        8957
      ],
      "op": "EQ",
      "path": "16"
    },
    "152": {
      "fn": null,
      "offset": [
        490,
        8957
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x99C"
    },
    "155": {
      "fn": null,
      "offset": [
        490,
        8957
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "156": {
      "fn": null,
      "offset": [
        490,
        8957
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "158": {
      "fn": null,
      "offset": [
        490,
        8957
      ],
      "op": "DUP1",
      "path": "16"
    },
    "159": {
      "fn": null,
      "offset": [
        490,
        8957
      ],
      "op": "REVERT",
      "path": "16"
    },
    "160": {
      "fn": null,
      "offset": [
        490,
        8957
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "161": {
      "fn": null,
      "offset": [
        490,
        8957
      ],
      "op": "DUP1",
      "path": "16"
    },
    "162": {
      "fn": null,
      "offset": [
        490,
        8957
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0xC884EF83"
    },
    "167": {
      "fn": null,
      "offset": [
        490,
        8957
      ],
      "op": "GT",
      "path": "16"
    },
    "168": {
      "fn": null,
      "offset": [
        490,
        8957
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xDC"
    },
    "171": {
      "fn": null,
      "offset": [
        490,
        8957
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "172": {
      "fn": null,
      "offset": [
        490,
        8957
      ],
      "op": "DUP1",
      "path": "16"
    },
    "173": {
      "fn": null,
      "offset": [
        490,
        8957
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0xC884EF83"
    },
    "178": {
      "fn": null,
      "offset": [
        490,
        8957
      ],
      "op": "EQ",
      "path": "16"
    },
    "179": {
      "fn": null,
      "offset": [
        490,
        8957
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x8C1"
    },
    "182": {
      "fn": null,
      "offset": [
        490,
        8957
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "183": {
      "fn": null,
      "offset": [
        490,
        8957
      ],
      "op": "DUP1",
      "path": "16"
    },
    "184": {
      "fn": null,
      "offset": [
        490,
        8957
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0xCE3CD997"
    },
    "189": {
      "fn": null,
      "offset": [
        490,
        8957
      ],
      "op": "EQ",
      "path": "16"
    },
    "190": {
      "fn": null,
      "offset": [
        490,
        8957
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x8F1"
    },
    "193": {
      "fn": null,
      "offset": [
        490,
        8957
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "194": {
      "fn": null,
      "offset": [
        490,
        8957
      ],
      "op": "DUP1",
      "path": "16"
    },
    "195": {
      "fn": null,
      "offset": [
        490,
        8957
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0xD6D67A09"
    },
    "200": {
      "fn": null,
      "offset": [
        490,
        8957
      ],
      "op": "EQ",
      "path": "16"
    },
    "201": {
      "fn": null,
      "offset": [
        490,
        8957
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x911"
    },
    "204": {
      "fn": null,
      "offset": [
        490,
        8957
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "205": {
      "fn": null,
      "offset": [
        490,
        8957
      ],
      "op": "DUP1",
      "path": "16"
    },
    "206": {
      "fn": null,
      "offset": [
        490,
        8957
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0xDA3EF23F"
    },
    "211": {
      "fn": null,
      "offset": [
        490,
        8957
      ],
      "op": "EQ",
      "path": "16"
    },
    "212": {
      "fn": null,
      "offset": [
        490,
        8957
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x926"
    },
    "215": {
      "fn": null,
      "offset": [
        490,
        8957
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "216": {
      "fn": null,
      "offset": [
        490,
        8957
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "218": {
      "fn": null,
      "offset": [
        490,
        8957
      ],
      "op": "DUP1",
      "path": "16"
    },
    "219": {
      "fn": null,
      "offset": [
        490,
        8957
      ],
      "op": "REVERT",
      "path": "16"
    },
    "220": {
      "fn": null,
      "offset": [
        490,
        8957
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "221": {
      "fn": null,
      "offset": [
        490,
        8957
      ],
      "op": "DUP1",
      "path": "16"
    },
    "222": {
      "fn": null,
      "offset": [
        490,
        8957
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0xC6682862"
    },
    "227": {
      "fn": null,
      "offset": [
        490,
        8957
      ],
      "op": "EQ",
      "path": "16"
    },
    "228": {
      "fn": null,
      "offset": [
        490,
        8957
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x877"
    },
    "231": {
      "fn": null,
      "offset": [
        490,
        8957
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "232": {
      "fn": null,
      "offset": [
        490,
        8957
      ],
      "op": "DUP1",
      "path": "16"
    },
    "233": {
      "fn": null,
      "offset": [
        490,
        8957
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0xC6AB67A3"
    },
    "238": {
      "fn": null,
      "offset": [
        490,
        8957
      ],
      "op": "EQ",
      "path": "16"
    },
    "239": {
      "fn": null,
      "offset": [
        490,
        8957
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x88C"
    },
    "242": {
      "fn": null,
      "offset": [
        490,
        8957
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "243": {
      "fn": null,
      "offset": [
        490,
        8957
      ],
      "op": "DUP1",
      "path": "16"
    },
    "244": {
      "fn": null,
      "offset": [
        490,
        8957
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0xC87B56DD"
    },
    "249": {
      "fn": null,
      "offset": [
        490,
        8957
      ],
      "op": "EQ",
      "path": "16"
    },
    "250": {
      "fn": null,
      "offset": [
        490,
        8957
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x8A1"
    },
    "253": {
      "fn": null,
      "offset": [
        490,
        8957
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "254": {
      "fn": null,
      "offset": [
        490,
        8957
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "256": {
      "fn": null,
      "offset": [
        490,
        8957
      ],
      "op": "DUP1",
      "path": "16"
    },
    "257": {
      "fn": null,
      "offset": [
        490,
        8957
      ],
      "op": "REVERT",
      "path": "16"
    },
    "258": {
      "fn": null,
      "offset": [
        490,
        8957
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "259": {
      "fn": null,
      "offset": [
        490,
        8957
      ],
      "op": "DUP1",
      "path": "16"
    },
    "260": {
      "fn": null,
      "offset": [
        490,
        8957
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0xA22CB465"
    },
    "265": {
      "fn": null,
      "offset": [
        490,
        8957
      ],
      "op": "GT",
      "path": "16"
    },
    "266": {
      "fn": null,
      "offset": [
        490,
        8957
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x16F"
    },
    "269": {
      "fn": null,
      "offset": [
        490,
        8957
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "270": {
      "fn": null,
      "offset": [
        490,
        8957
      ],
      "op": "DUP1",
      "path": "16"
    },
    "271": {
      "fn": null,
      "offset": [
        490,
        8957
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0xBBC903EA"
    },
    "276": {
      "fn": null,
      "offset": [
        490,
        8957
      ],
      "op": "GT",
      "path": "16"
    },
    "277": {
      "fn": null,
      "offset": [
        490,
        8957
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x149"
    },
    "280": {
      "fn": null,
      "offset": [
        490,
        8957
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "281": {
      "fn": null,
      "offset": [
        490,
        8957
      ],
      "op": "DUP1",
      "path": "16"
    },
    "282": {
      "fn": null,
      "offset": [
        490,
        8957
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0xBBC903EA"
    },
    "287": {
      "fn": null,
      "offset": [
        490,
        8957
      ],
      "op": "EQ",
      "path": "16"
    },
    "288": {
      "fn": null,
      "offset": [
        490,
        8957
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x7FB"
    },
    "291": {
      "fn": null,
      "offset": [
        490,
        8957
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "292": {
      "fn": null,
      "offset": [
        490,
        8957
      ],
      "op": "DUP1",
      "path": "16"
    },
    "293": {
      "fn": null,
      "offset": [
        490,
        8957
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0xC040E6B8"
    },
    "298": {
      "fn": null,
      "offset": [
        490,
        8957
      ],
      "op": "EQ",
      "path": "16"
    },
    "299": {
      "fn": null,
      "offset": [
        490,
        8957
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x81B"
    },
    "302": {
      "fn": null,
      "offset": [
        490,
        8957
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "303": {
      "fn": null,
      "offset": [
        490,
        8957
      ],
      "op": "DUP1",
      "path": "16"
    },
    "304": {
      "fn": null,
      "offset": [
        490,
        8957
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0xC29DE630"
    },
    "309": {
      "fn": null,
      "offset": [
        490,
        8957
      ],
      "op": "EQ",
      "path": "16"
    },
    "310": {
      "fn": null,
      "offset": [
        490,
        8957
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x842"
    },
    "313": {
      "fn": null,
      "offset": [
        490,
        8957
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "314": {
      "fn": null,
      "offset": [
        490,
        8957
      ],
      "op": "DUP1",
      "path": "16"
    },
    "315": {
      "fn": null,
      "offset": [
        490,
        8957
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0xC3214581"
    },
    "320": {
      "fn": null,
      "offset": [
        490,
        8957
      ],
      "op": "EQ",
      "path": "16"
    },
    "321": {
      "fn": null,
      "offset": [
        490,
        8957
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x861"
    },
    "324": {
      "fn": null,
      "offset": [
        490,
        8957
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "325": {
      "fn": null,
      "offset": [
        490,
        8957
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "327": {
      "fn": null,
      "offset": [
        490,
        8957
      ],
      "op": "DUP1",
      "path": "16"
    },
    "328": {
      "fn": null,
      "offset": [
        490,
        8957
      ],
      "op": "REVERT",
      "path": "16"
    },
    "329": {
      "fn": null,
      "offset": [
        490,
        8957
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "330": {
      "fn": null,
      "offset": [
        490,
        8957
      ],
      "op": "DUP1",
      "path": "16"
    },
    "331": {
      "fn": null,
      "offset": [
        490,
        8957
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0xA22CB465"
    },
    "336": {
      "fn": null,
      "offset": [
        490,
        8957
      ],
      "op": "EQ",
      "path": "16"
    },
    "337": {
      "fn": null,
      "offset": [
        490,
        8957
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x79B"
    },
    "340": {
      "fn": null,
      "offset": [
        490,
        8957
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "341": {
      "fn": null,
      "offset": [
        490,
        8957
      ],
      "op": "DUP1",
      "path": "16"
    },
    "342": {
      "fn": null,
      "offset": [
        490,
        8957
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0xB3CAAD01"
    },
    "347": {
      "fn": null,
      "offset": [
        490,
        8957
      ],
      "op": "EQ",
      "path": "16"
    },
    "348": {
      "fn": null,
      "offset": [
        490,
        8957
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x7BB"
    },
    "351": {
      "fn": null,
      "offset": [
        490,
        8957
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "352": {
      "fn": null,
      "offset": [
        490,
        8957
      ],
      "op": "DUP1",
      "path": "16"
    },
    "353": {
      "fn": null,
      "offset": [
        490,
        8957
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0xB88D4FDE"
    },
    "358": {
      "fn": null,
      "offset": [
        490,
        8957
      ],
      "op": "EQ",
      "path": "16"
    },
    "359": {
      "fn": null,
      "offset": [
        490,
        8957
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x7DB"
    },
    "362": {
      "fn": null,
      "offset": [
        490,
        8957
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "363": {
      "fn": null,
      "offset": [
        490,
        8957
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "365": {
      "fn": null,
      "offset": [
        490,
        8957
      ],
      "op": "DUP1",
      "path": "16"
    },
    "366": {
      "fn": null,
      "offset": [
        490,
        8957
      ],
      "op": "REVERT",
      "path": "16"
    },
    "367": {
      "fn": null,
      "offset": [
        490,
        8957
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "368": {
      "fn": null,
      "offset": [
        490,
        8957
      ],
      "op": "DUP1",
      "path": "16"
    },
    "369": {
      "fn": null,
      "offset": [
        490,
        8957
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0x858E83B5"
    },
    "374": {
      "fn": null,
      "offset": [
        490,
        8957
      ],
      "op": "GT",
      "path": "16"
    },
    "375": {
      "fn": null,
      "offset": [
        490,
        8957
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1AB"
    },
    "378": {
      "fn": null,
      "offset": [
        490,
        8957
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "379": {
      "fn": null,
      "offset": [
        490,
        8957
      ],
      "op": "DUP1",
      "path": "16"
    },
    "380": {
      "fn": null,
      "offset": [
        490,
        8957
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0x858E83B5"
    },
    "385": {
      "fn": null,
      "offset": [
        490,
        8957
      ],
      "op": "EQ",
      "path": "16"
    },
    "386": {
      "fn": null,
      "offset": [
        490,
        8957
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x730"
    },
    "389": {
      "fn": null,
      "offset": [
        490,
        8957
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "390": {
      "fn": null,
      "offset": [
        490,
        8957
      ],
      "op": "DUP1",
      "path": "16"
    },
    "391": {
      "fn": null,
      "offset": [
        490,
        8957
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0x8DA5CB5B"
    },
    "396": {
      "fn": null,
      "offset": [
        490,
        8957
      ],
      "op": "EQ",
      "path": "16"
    },
    "397": {
      "fn": null,
      "offset": [
        490,
        8957
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x743"
    },
    "400": {
      "fn": null,
      "offset": [
        490,
        8957
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "401": {
      "fn": null,
      "offset": [
        490,
        8957
      ],
      "op": "DUP1",
      "path": "16"
    },
    "402": {
      "fn": null,
      "offset": [
        490,
        8957
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0x95D89B41"
    },
    "407": {
      "fn": null,
      "offset": [
        490,
        8957
      ],
      "op": "EQ",
      "path": "16"
    },
    "408": {
      "fn": null,
      "offset": [
        490,
        8957
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x766"
    },
    "411": {
      "fn": null,
      "offset": [
        490,
        8957
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "412": {
      "fn": null,
      "offset": [
        490,
        8957
      ],
      "op": "DUP1",
      "path": "16"
    },
    "413": {
      "fn": null,
      "offset": [
        490,
        8957
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0x9A2A9C3D"
    },
    "418": {
      "fn": null,
      "offset": [
        490,
        8957
      ],
      "op": "EQ",
      "path": "16"
    },
    "419": {
      "fn": null,
      "offset": [
        490,
        8957
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x77B"
    },
    "422": {
      "fn": null,
      "offset": [
        490,
        8957
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "423": {
      "fn": null,
      "offset": [
        490,
        8957
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "425": {
      "fn": null,
      "offset": [
        490,
        8957
      ],
      "op": "DUP1",
      "path": "16"
    },
    "426": {
      "fn": null,
      "offset": [
        490,
        8957
      ],
      "op": "REVERT",
      "path": "16"
    },
    "427": {
      "fn": null,
      "offset": [
        490,
        8957
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "428": {
      "fn": null,
      "offset": [
        490,
        8957
      ],
      "op": "DUP1",
      "path": "16"
    },
    "429": {
      "fn": null,
      "offset": [
        490,
        8957
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0x7CB64759"
    },
    "434": {
      "fn": null,
      "offset": [
        490,
        8957
      ],
      "op": "EQ",
      "path": "16"
    },
    "435": {
      "fn": null,
      "offset": [
        490,
        8957
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x6E6"
    },
    "438": {
      "fn": null,
      "offset": [
        490,
        8957
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "439": {
      "fn": null,
      "offset": [
        490,
        8957
      ],
      "op": "DUP1",
      "path": "16"
    },
    "440": {
      "fn": null,
      "offset": [
        490,
        8957
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0x81C162F2"
    },
    "445": {
      "fn": null,
      "offset": [
        490,
        8957
      ],
      "op": "EQ",
      "path": "16"
    },
    "446": {
      "fn": null,
      "offset": [
        490,
        8957
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x706"
    },
    "449": {
      "fn": null,
      "offset": [
        490,
        8957
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "450": {
      "fn": null,
      "offset": [
        490,
        8957
      ],
      "op": "DUP1",
      "path": "16"
    },
    "451": {
      "fn": null,
      "offset": [
        490,
        8957
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0x8456CB59"
    },
    "456": {
      "fn": null,
      "offset": [
        490,
        8957
      ],
      "op": "EQ",
      "path": "16"
    },
    "457": {
      "fn": null,
      "offset": [
        490,
        8957
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x71B"
    },
    "460": {
      "fn": null,
      "offset": [
        490,
        8957
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "461": {
      "fn": null,
      "offset": [
        490,
        8957
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "463": {
      "fn": null,
      "offset": [
        490,
        8957
      ],
      "op": "DUP1",
      "path": "16"
    },
    "464": {
      "fn": null,
      "offset": [
        490,
        8957
      ],
      "op": "REVERT",
      "path": "16"
    },
    "465": {
      "fn": null,
      "offset": [
        490,
        8957
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "466": {
      "fn": null,
      "offset": [
        490,
        8957
      ],
      "op": "DUP1",
      "path": "16"
    },
    "467": {
      "fn": null,
      "offset": [
        490,
        8957
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0x3F4BA83A"
    },
    "472": {
      "fn": null,
      "offset": [
        490,
        8957
      ],
      "op": "GT",
      "path": "16"
    },
    "473": {
      "fn": null,
      "offset": [
        490,
        8957
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x2B6"
    },
    "476": {
      "fn": null,
      "offset": [
        490,
        8957
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "477": {
      "fn": null,
      "offset": [
        490,
        8957
      ],
      "op": "DUP1",
      "path": "16"
    },
    "478": {
      "fn": null,
      "offset": [
        490,
        8957
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0x6352211E"
    },
    "483": {
      "fn": null,
      "offset": [
        490,
        8957
      ],
      "op": "GT",
      "path": "16"
    },
    "484": {
      "fn": null,
      "offset": [
        490,
        8957
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x254"
    },
    "487": {
      "fn": null,
      "offset": [
        490,
        8957
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "488": {
      "fn": null,
      "offset": [
        490,
        8957
      ],
      "op": "DUP1",
      "path": "16"
    },
    "489": {
      "fn": null,
      "offset": [
        490,
        8957
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0x715018A6"
    },
    "494": {
      "fn": null,
      "offset": [
        490,
        8957
      ],
      "op": "GT",
      "path": "16"
    },
    "495": {
      "fn": null,
      "offset": [
        490,
        8957
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x223"
    },
    "498": {
      "fn": null,
      "offset": [
        490,
        8957
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "499": {
      "fn": null,
      "offset": [
        490,
        8957
      ],
      "op": "DUP1",
      "path": "16"
    },
    "500": {
      "fn": null,
      "offset": [
        490,
        8957
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0x715018A6"
    },
    "505": {
      "fn": null,
      "offset": [
        490,
        8957
      ],
      "op": "EQ",
      "path": "16"
    },
    "506": {
      "fn": null,
      "offset": [
        490,
        8957
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x67B"
    },
    "509": {
      "fn": null,
      "offset": [
        490,
        8957
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "510": {
      "fn": null,
      "offset": [
        490,
        8957
      ],
      "op": "DUP1",
      "path": "16"
    },
    "511": {
      "fn": null,
      "offset": [
        490,
        8957
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0x78231978"
    },
    "516": {
      "fn": null,
      "offset": [
        490,
        8957
      ],
      "op": "EQ",
      "path": "16"
    },
    "517": {
      "fn": null,
      "offset": [
        490,
        8957
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x690"
    },
    "520": {
      "fn": null,
      "offset": [
        490,
        8957
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "521": {
      "fn": null,
      "offset": [
        490,
        8957
      ],
      "op": "DUP1",
      "path": "16"
    },
    "522": {
      "fn": null,
      "offset": [
        490,
        8957
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0x791A2519"
    },
    "527": {
      "fn": null,
      "offset": [
        490,
        8957
      ],
      "op": "EQ",
      "path": "16"
    },
    "528": {
      "fn": null,
      "offset": [
        490,
        8957
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x6A6"
    },
    "531": {
      "fn": null,
      "offset": [
        490,
        8957
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "532": {
      "fn": null,
      "offset": [
        490,
        8957
      ],
      "op": "DUP1",
      "path": "16"
    },
    "533": {
      "fn": null,
      "offset": [
        490,
        8957
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0x7B671780"
    },
    "538": {
      "fn": null,
      "offset": [
        490,
        8957
      ],
      "op": "EQ",
      "path": "16"
    },
    "539": {
      "fn": null,
      "offset": [
        490,
        8957
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x6C6"
    },
    "542": {
      "fn": null,
      "offset": [
        490,
        8957
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "543": {
      "fn": null,
      "offset": [
        490,
        8957
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "545": {
      "fn": null,
      "offset": [
        490,
        8957
      ],
      "op": "DUP1",
      "path": "16"
    },
    "546": {
      "fn": null,
      "offset": [
        490,
        8957
      ],
      "op": "REVERT",
      "path": "16"
    },
    "547": {
      "fn": null,
      "offset": [
        490,
        8957
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "548": {
      "fn": null,
      "offset": [
        490,
        8957
      ],
      "op": "DUP1",
      "path": "16"
    },
    "549": {
      "fn": null,
      "offset": [
        490,
        8957
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0x6352211E"
    },
    "554": {
      "fn": null,
      "offset": [
        490,
        8957
      ],
      "op": "EQ",
      "path": "16"
    },
    "555": {
      "fn": null,
      "offset": [
        490,
        8957
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x611"
    },
    "558": {
      "fn": null,
      "offset": [
        490,
        8957
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "559": {
      "fn": null,
      "offset": [
        490,
        8957
      ],
      "op": "DUP1",
      "path": "16"
    },
    "560": {
      "fn": null,
      "offset": [
        490,
        8957
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0x6C0360EB"
    },
    "565": {
      "fn": null,
      "offset": [
        490,
        8957
      ],
      "op": "EQ",
      "path": "16"
    },
    "566": {
      "fn": null,
      "offset": [
        490,
        8957
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x631"
    },
    "569": {
      "fn": null,
      "offset": [
        490,
        8957
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "570": {
      "fn": null,
      "offset": [
        490,
        8957
      ],
      "op": "DUP1",
      "path": "16"
    },
    "571": {
      "fn": null,
      "offset": [
        490,
        8957
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0x6CBB8985"
    },
    "576": {
      "fn": null,
      "offset": [
        490,
        8957
      ],
      "op": "EQ",
      "path": "16"
    },
    "577": {
      "fn": null,
      "offset": [
        490,
        8957
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x646"
    },
    "580": {
      "fn": null,
      "offset": [
        490,
        8957
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "581": {
      "fn": null,
      "offset": [
        490,
        8957
      ],
      "op": "DUP1",
      "path": "16"
    },
    "582": {
      "fn": null,
      "offset": [
        490,
        8957
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0x70A08231"
    },
    "587": {
      "fn": null,
      "offset": [
        490,
        8957
      ],
      "op": "EQ",
      "path": "16"
    },
    "588": {
      "fn": null,
      "offset": [
        490,
        8957
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x65B"
    },
    "591": {
      "fn": null,
      "offset": [
        490,
        8957
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "592": {
      "fn": null,
      "offset": [
        490,
        8957
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "594": {
      "fn": null,
      "offset": [
        490,
        8957
      ],
      "op": "DUP1",
      "path": "16"
    },
    "595": {
      "fn": null,
      "offset": [
        490,
        8957
      ],
      "op": "REVERT",
      "path": "16"
    },
    "596": {
      "fn": null,
      "offset": [
        490,
        8957
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "597": {
      "fn": null,
      "offset": [
        490,
        8957
      ],
      "op": "DUP1",
      "path": "16"
    },
    "598": {
      "fn": null,
      "offset": [
        490,
        8957
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0x4F6CCCE7"
    },
    "603": {
      "fn": null,
      "offset": [
        490,
        8957
      ],
      "op": "GT",
      "path": "16"
    },
    "604": {
      "fn": null,
      "offset": [
        490,
        8957
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x290"
    },
    "607": {
      "fn": null,
      "offset": [
        490,
        8957
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "608": {
      "fn": null,
      "offset": [
        490,
        8957
      ],
      "op": "DUP1",
      "path": "16"
    },
    "609": {
      "fn": null,
      "offset": [
        490,
        8957
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0x4F6CCCE7"
    },
    "614": {
      "fn": null,
      "offset": [
        490,
        8957
      ],
      "op": "EQ",
      "path": "16"
    },
    "615": {
      "fn": null,
      "offset": [
        490,
        8957
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x599"
    },
    "618": {
      "fn": null,
      "offset": [
        490,
        8957
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "619": {
      "fn": null,
      "offset": [
        490,
        8957
      ],
      "op": "DUP1",
      "path": "16"
    },
    "620": {
      "fn": null,
      "offset": [
        490,
        8957
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0x55F804B3"
    },
    "625": {
      "fn": null,
      "offset": [
        490,
        8957
      ],
      "op": "EQ",
      "path": "16"
    },
    "626": {
      "fn": null,
      "offset": [
        490,
        8957
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x5B9"
    },
    "629": {
      "fn": null,
      "offset": [
        490,
        8957
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "630": {
      "fn": null,
      "offset": [
        490,
        8957
      ],
      "op": "DUP1",
      "path": "16"
    },
    "631": {
      "fn": null,
      "offset": [
        490,
        8957
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0x5C975ABB"
    },
    "636": {
      "fn": null,
      "offset": [
        490,
        8957
      ],
      "op": "EQ",
      "path": "16"
    },
    "637": {
      "fn": null,
      "offset": [
        490,
        8957
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x5D9"
    },
    "640": {
      "fn": null,
      "offset": [
        490,
        8957
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "641": {
      "fn": null,
      "offset": [
        490,
        8957
      ],
      "op": "DUP1",
      "path": "16"
    },
    "642": {
      "fn": null,
      "offset": [
        490,
        8957
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0x622E4E78"
    },
    "647": {
      "fn": null,
      "offset": [
        490,
        8957
      ],
      "op": "EQ",
      "path": "16"
    },
    "648": {
      "fn": null,
      "offset": [
        490,
        8957
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x5F1"
    },
    "651": {
      "fn": null,
      "offset": [
        490,
        8957
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "652": {
      "fn": null,
      "offset": [
        490,
        8957
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "654": {
      "fn": null,
      "offset": [
        490,
        8957
      ],
      "op": "DUP1",
      "path": "16"
    },
    "655": {
      "fn": null,
      "offset": [
        490,
        8957
      ],
      "op": "REVERT",
      "path": "16"
    },
    "656": {
      "fn": null,
      "offset": [
        490,
        8957
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "657": {
      "fn": null,
      "offset": [
        490,
        8957
      ],
      "op": "DUP1",
      "path": "16"
    },
    "658": {
      "fn": null,
      "offset": [
        490,
        8957
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0x3F4BA83A"
    },
    "663": {
      "fn": null,
      "offset": [
        490,
        8957
      ],
      "op": "EQ",
      "path": "16"
    },
    "664": {
      "fn": null,
      "offset": [
        490,
        8957
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x537"
    },
    "667": {
      "fn": null,
      "offset": [
        490,
        8957
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "668": {
      "fn": null,
      "offset": [
        490,
        8957
      ],
      "op": "DUP1",
      "path": "16"
    },
    "669": {
      "fn": null,
      "offset": [
        490,
        8957
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0x42842E0E"
    },
    "674": {
      "fn": null,
      "offset": [
        490,
        8957
      ],
      "op": "EQ",
      "path": "16"
    },
    "675": {
      "fn": null,
      "offset": [
        490,
        8957
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x54C"
    },
    "678": {
      "fn": null,
      "offset": [
        490,
        8957
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "679": {
      "fn": null,
      "offset": [
        490,
        8957
      ],
      "op": "DUP1",
      "path": "16"
    },
    "680": {
      "fn": null,
      "offset": [
        490,
        8957
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0x438B6300"
    },
    "685": {
      "fn": null,
      "offset": [
        490,
        8957
      ],
      "op": "EQ",
      "path": "16"
    },
    "686": {
      "fn": null,
      "offset": [
        490,
        8957
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x56C"
    },
    "689": {
      "fn": null,
      "offset": [
        490,
        8957
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "690": {
      "fn": null,
      "offset": [
        490,
        8957
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "692": {
      "fn": null,
      "offset": [
        490,
        8957
      ],
      "op": "DUP1",
      "path": "16"
    },
    "693": {
      "fn": null,
      "offset": [
        490,
        8957
      ],
      "op": "REVERT",
      "path": "16"
    },
    "694": {
      "fn": null,
      "offset": [
        490,
        8957
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "695": {
      "fn": null,
      "offset": [
        490,
        8957
      ],
      "op": "DUP1",
      "path": "16"
    },
    "696": {
      "fn": null,
      "offset": [
        490,
        8957
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0x20841A6A"
    },
    "701": {
      "fn": null,
      "offset": [
        490,
        8957
      ],
      "op": "GT",
      "path": "16"
    },
    "702": {
      "fn": null,
      "offset": [
        490,
        8957
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x323"
    },
    "705": {
      "fn": null,
      "offset": [
        490,
        8957
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "706": {
      "fn": null,
      "offset": [
        490,
        8957
      ],
      "op": "DUP1",
      "path": "16"
    },
    "707": {
      "fn": null,
      "offset": [
        490,
        8957
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0x2F745C59"
    },
    "712": {
      "fn": null,
      "offset": [
        490,
        8957
      ],
      "op": "GT",
      "path": "16"
    },
    "713": {
      "fn": null,
      "offset": [
        490,
        8957
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x2FD"
    },
    "716": {
      "fn": null,
      "offset": [
        490,
        8957
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "717": {
      "fn": null,
      "offset": [
        490,
        8957
      ],
      "op": "DUP1",
      "path": "16"
    },
    "718": {
      "fn": null,
      "offset": [
        490,
        8957
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0x2F745C59"
    },
    "723": {
      "fn": null,
      "offset": [
        490,
        8957
      ],
      "op": "EQ",
      "path": "16"
    },
    "724": {
      "fn": null,
      "offset": [
        490,
        8957
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x4E6"
    },
    "727": {
      "fn": null,
      "offset": [
        490,
        8957
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "728": {
      "fn": null,
      "offset": [
        490,
        8957
      ],
      "op": "DUP1",
      "path": "16"
    },
    "729": {
      "fn": null,
      "offset": [
        490,
        8957
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0x33E61413"
    },
    "734": {
      "fn": null,
      "offset": [
        490,
        8957
      ],
      "op": "EQ",
      "path": "16"
    },
    "735": {
      "fn": null,
      "offset": [
        490,
        8957
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x506"
    },
    "738": {
      "fn": null,
      "offset": [
        490,
        8957
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "739": {
      "fn": null,
      "offset": [
        490,
        8957
      ],
      "op": "DUP1",
      "path": "16"
    },
    "740": {
      "fn": null,
      "offset": [
        490,
        8957
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0x372F657C"
    },
    "745": {
      "fn": null,
      "offset": [
        490,
        8957
      ],
      "op": "EQ",
      "path": "16"
    },
    "746": {
      "fn": null,
      "offset": [
        490,
        8957
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x51C"
    },
    "749": {
      "fn": null,
      "offset": [
        490,
        8957
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "750": {
      "fn": null,
      "offset": [
        490,
        8957
      ],
      "op": "DUP1",
      "path": "16"
    },
    "751": {
      "fn": null,
      "offset": [
        490,
        8957
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0x3CCFD60B"
    },
    "756": {
      "fn": null,
      "offset": [
        490,
        8957
      ],
      "op": "EQ",
      "path": "16"
    },
    "757": {
      "fn": null,
      "offset": [
        490,
        8957
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x52F"
    },
    "760": {
      "fn": null,
      "offset": [
        490,
        8957
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "761": {
      "fn": null,
      "offset": [
        490,
        8957
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "763": {
      "fn": null,
      "offset": [
        490,
        8957
      ],
      "op": "DUP1",
      "path": "16"
    },
    "764": {
      "fn": null,
      "offset": [
        490,
        8957
      ],
      "op": "REVERT",
      "path": "16"
    },
    "765": {
      "fn": null,
      "offset": [
        490,
        8957
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "766": {
      "fn": null,
      "offset": [
        490,
        8957
      ],
      "op": "DUP1",
      "path": "16"
    },
    "767": {
      "fn": null,
      "offset": [
        490,
        8957
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0x20841A6A"
    },
    "772": {
      "fn": null,
      "offset": [
        490,
        8957
      ],
      "op": "EQ",
      "path": "16"
    },
    "773": {
      "fn": null,
      "offset": [
        490,
        8957
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x490"
    },
    "776": {
      "fn": null,
      "offset": [
        490,
        8957
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "777": {
      "fn": null,
      "offset": [
        490,
        8957
      ],
      "op": "DUP1",
      "path": "16"
    },
    "778": {
      "fn": null,
      "offset": [
        490,
        8957
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0x23B872DD"
    },
    "783": {
      "fn": null,
      "offset": [
        490,
        8957
      ],
      "op": "EQ",
      "path": "16"
    },
    "784": {
      "fn": null,
      "offset": [
        490,
        8957
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x4B0"
    },
    "787": {
      "fn": null,
      "offset": [
        490,
        8957
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "788": {
      "fn": null,
      "offset": [
        490,
        8957
      ],
      "op": "DUP1",
      "path": "16"
    },
    "789": {
      "fn": null,
      "offset": [
        490,
        8957
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0x2EB4A7AB"
    },
    "794": {
      "fn": null,
      "offset": [
        490,
        8957
      ],
      "op": "EQ",
      "path": "16"
    },
    "795": {
      "fn": null,
      "offset": [
        490,
        8957
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x4D0"
    },
    "798": {
      "fn": null,
      "offset": [
        490,
        8957
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "799": {
      "fn": null,
      "offset": [
        490,
        8957
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "801": {
      "fn": null,
      "offset": [
        490,
        8957
      ],
      "op": "DUP1",
      "path": "16"
    },
    "802": {
      "fn": null,
      "offset": [
        490,
        8957
      ],
      "op": "REVERT",
      "path": "16"
    },
    "803": {
      "fn": null,
      "offset": [
        490,
        8957
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "804": {
      "fn": null,
      "offset": [
        490,
        8957
      ],
      "op": "DUP1",
      "path": "16"
    },
    "805": {
      "fn": null,
      "offset": [
        490,
        8957
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0x88139A6"
    },
    "810": {
      "fn": null,
      "offset": [
        490,
        8957
      ],
      "op": "GT",
      "path": "16"
    },
    "811": {
      "fn": null,
      "offset": [
        490,
        8957
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x35F"
    },
    "814": {
      "fn": null,
      "offset": [
        490,
        8957
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "815": {
      "fn": null,
      "offset": [
        490,
        8957
      ],
      "op": "DUP1",
      "path": "16"
    },
    "816": {
      "fn": null,
      "offset": [
        490,
        8957
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0x88139A6"
    },
    "821": {
      "fn": null,
      "offset": [
        490,
        8957
      ],
      "op": "EQ",
      "path": "16"
    },
    "822": {
      "fn": null,
      "offset": [
        490,
        8957
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x415"
    },
    "825": {
      "fn": null,
      "offset": [
        490,
        8957
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "826": {
      "fn": null,
      "offset": [
        490,
        8957
      ],
      "op": "DUP1",
      "path": "16"
    },
    "827": {
      "fn": null,
      "offset": [
        490,
        8957
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0x95EA7B3"
    },
    "832": {
      "fn": null,
      "offset": [
        490,
        8957
      ],
      "op": "EQ",
      "path": "16"
    },
    "833": {
      "fn": null,
      "offset": [
        490,
        8957
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x439"
    },
    "836": {
      "fn": null,
      "offset": [
        490,
        8957
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "837": {
      "fn": null,
      "offset": [
        490,
        8957
      ],
      "op": "DUP1",
      "path": "16"
    },
    "838": {
      "fn": null,
      "offset": [
        490,
        8957
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0x10969523"
    },
    "843": {
      "fn": null,
      "offset": [
        490,
        8957
      ],
      "op": "EQ",
      "path": "16"
    },
    "844": {
      "fn": null,
      "offset": [
        490,
        8957
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x45B"
    },
    "847": {
      "fn": null,
      "offset": [
        490,
        8957
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "848": {
      "fn": null,
      "offset": [
        490,
        8957
      ],
      "op": "DUP1",
      "path": "16"
    },
    "849": {
      "fn": null,
      "offset": [
        490,
        8957
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0x18160DDD"
    },
    "854": {
      "fn": null,
      "offset": [
        490,
        8957
      ],
      "op": "EQ",
      "path": "16"
    },
    "855": {
      "fn": null,
      "offset": [
        490,
        8957
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x47B"
    },
    "858": {
      "fn": null,
      "offset": [
        490,
        8957
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "859": {
      "fn": null,
      "offset": [
        490,
        8957
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "861": {
      "fn": null,
      "offset": [
        490,
        8957
      ],
      "op": "DUP1",
      "path": "16"
    },
    "862": {
      "fn": null,
      "offset": [
        490,
        8957
      ],
      "op": "REVERT",
      "path": "16"
    },
    "863": {
      "fn": null,
      "offset": [
        490,
        8957
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "864": {
      "fn": null,
      "offset": [
        490,
        8957
      ],
      "op": "DUP1",
      "path": "16"
    },
    "865": {
      "fn": null,
      "offset": [
        490,
        8957
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0x1FFC9A7"
    },
    "870": {
      "fn": null,
      "offset": [
        490,
        8957
      ],
      "op": "EQ",
      "path": "16"
    },
    "871": {
      "fn": null,
      "offset": [
        490,
        8957
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x386"
    },
    "874": {
      "fn": null,
      "offset": [
        490,
        8957
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "875": {
      "fn": null,
      "offset": [
        490,
        8957
      ],
      "op": "DUP1",
      "path": "16"
    },
    "876": {
      "fn": null,
      "offset": [
        490,
        8957
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0x6FDDE03"
    },
    "881": {
      "fn": null,
      "offset": [
        490,
        8957
      ],
      "op": "EQ",
      "path": "16"
    },
    "882": {
      "fn": null,
      "offset": [
        490,
        8957
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x3BB"
    },
    "885": {
      "fn": null,
      "offset": [
        490,
        8957
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "886": {
      "fn": null,
      "offset": [
        490,
        8957
      ],
      "op": "DUP1",
      "path": "16"
    },
    "887": {
      "fn": null,
      "offset": [
        490,
        8957
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0x81812FC"
    },
    "892": {
      "fn": null,
      "offset": [
        490,
        8957
      ],
      "op": "EQ",
      "path": "16"
    },
    "893": {
      "fn": null,
      "offset": [
        490,
        8957
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x3DD"
    },
    "896": {
      "fn": null,
      "offset": [
        490,
        8957
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "897": {
      "fn": null,
      "offset": [
        490,
        8957
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "898": {
      "fn": null,
      "offset": [
        490,
        8957
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "900": {
      "fn": null,
      "offset": [
        490,
        8957
      ],
      "op": "DUP1",
      "path": "16"
    },
    "901": {
      "first_revert": true,
      "fn": null,
      "offset": [
        490,
        8957
      ],
      "op": "REVERT",
      "path": "16"
    },
    "902": {
      "fn": "CryptidToken.supportsInterface",
      "offset": [
        8785,
        8954
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "903": {
      "fn": "CryptidToken.supportsInterface",
      "offset": [
        8785,
        8954
      ],
      "op": "CALLVALUE",
      "path": "16"
    },
    "904": {
      "fn": "CryptidToken.supportsInterface",
      "offset": [
        8785,
        8954
      ],
      "op": "DUP1",
      "path": "16"
    },
    "905": {
      "fn": "CryptidToken.supportsInterface",
      "offset": [
        8785,
        8954
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "906": {
      "fn": "CryptidToken.supportsInterface",
      "offset": [
        8785,
        8954
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x392"
    },
    "909": {
      "fn": "CryptidToken.supportsInterface",
      "offset": [
        8785,
        8954
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "910": {
      "fn": "CryptidToken.supportsInterface",
      "offset": [
        8785,
        8954
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "912": {
      "fn": "CryptidToken.supportsInterface",
      "offset": [
        8785,
        8954
      ],
      "op": "DUP1",
      "path": "16"
    },
    "913": {
      "fn": "CryptidToken.supportsInterface",
      "offset": [
        8785,
        8954
      ],
      "op": "REVERT",
      "path": "16"
    },
    "914": {
      "fn": "CryptidToken.supportsInterface",
      "offset": [
        8785,
        8954
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "915": {
      "op": "POP"
    },
    "916": {
      "fn": "CryptidToken.supportsInterface",
      "offset": [
        8785,
        8954
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x3A6"
    },
    "919": {
      "fn": "CryptidToken.supportsInterface",
      "offset": [
        8785,
        8954
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x3A1"
    },
    "922": {
      "fn": "CryptidToken.supportsInterface",
      "offset": [
        8785,
        8954
      ],
      "op": "CALLDATASIZE",
      "path": "16"
    },
    "923": {
      "fn": "CryptidToken.supportsInterface",
      "offset": [
        8785,
        8954
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "925": {
      "fn": "CryptidToken.supportsInterface",
      "offset": [
        8785,
        8954
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x2F2E"
    },
    "928": {
      "fn": "CryptidToken.supportsInterface",
      "jump": "i",
      "offset": [
        8785,
        8954
      ],
      "op": "JUMP",
      "path": "16"
    },
    "929": {
      "fn": "CryptidToken.supportsInterface",
      "offset": [
        8785,
        8954
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "930": {
      "fn": "CryptidToken.supportsInterface",
      "offset": [
        8785,
        8954
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xA62"
    },
    "933": {
      "fn": "CryptidToken.supportsInterface",
      "jump": "i",
      "offset": [
        8785,
        8954
      ],
      "op": "JUMP",
      "path": "16"
    },
    "934": {
      "fn": "CryptidToken.supportsInterface",
      "offset": [
        8785,
        8954
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "935": {
      "fn": "CryptidToken.supportsInterface",
      "offset": [
        8785,
        8954
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "937": {
      "fn": "CryptidToken.supportsInterface",
      "offset": [
        8785,
        8954
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "938": {
      "op": "SWAP1"
    },
    "939": {
      "op": "ISZERO"
    },
    "940": {
      "op": "ISZERO"
    },
    "941": {
      "op": "DUP2"
    },
    "942": {
      "op": "MSTORE"
    },
    "943": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "945": {
      "op": "ADD"
    },
    "946": {
      "fn": "CryptidToken.supportsInterface",
      "offset": [
        8785,
        8954
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "947": {
      "fn": "CryptidToken.supportsInterface",
      "offset": [
        8785,
        8954
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "949": {
      "fn": "CryptidToken.supportsInterface",
      "offset": [
        8785,
        8954
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "950": {
      "fn": "CryptidToken.supportsInterface",
      "offset": [
        8785,
        8954
      ],
      "op": "DUP1",
      "path": "16"
    },
    "951": {
      "fn": "CryptidToken.supportsInterface",
      "offset": [
        8785,
        8954
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "952": {
      "fn": "CryptidToken.supportsInterface",
      "offset": [
        8785,
        8954
      ],
      "op": "SUB",
      "path": "16"
    },
    "953": {
      "fn": "CryptidToken.supportsInterface",
      "offset": [
        8785,
        8954
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "954": {
      "fn": "CryptidToken.supportsInterface",
      "offset": [
        8785,
        8954
      ],
      "op": "RETURN",
      "path": "16"
    },
    "955": {
      "fn": "ERC721.name",
      "offset": [
        2473,
        2571
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "956": {
      "fn": "ERC721.name",
      "offset": [
        2473,
        2571
      ],
      "op": "CALLVALUE",
      "path": "3"
    },
    "957": {
      "fn": "ERC721.name",
      "offset": [
        2473,
        2571
      ],
      "op": "DUP1",
      "path": "3"
    },
    "958": {
      "fn": "ERC721.name",
      "offset": [
        2473,
        2571
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "959": {
      "fn": "ERC721.name",
      "offset": [
        2473,
        2571
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x3C7"
    },
    "962": {
      "fn": "ERC721.name",
      "offset": [
        2473,
        2571
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "963": {
      "fn": "ERC721.name",
      "offset": [
        2473,
        2571
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "965": {
      "fn": "ERC721.name",
      "offset": [
        2473,
        2571
      ],
      "op": "DUP1",
      "path": "3"
    },
    "966": {
      "fn": "ERC721.name",
      "offset": [
        2473,
        2571
      ],
      "op": "REVERT",
      "path": "3"
    },
    "967": {
      "fn": "ERC721.name",
      "offset": [
        2473,
        2571
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "968": {
      "fn": "ERC721.name",
      "offset": [
        2473,
        2571
      ],
      "op": "POP",
      "path": "3"
    },
    "969": {
      "fn": "ERC721.name",
      "offset": [
        2473,
        2571
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x3D0"
    },
    "972": {
      "fn": "ERC721.name",
      "offset": [
        2473,
        2571
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xA73"
    },
    "975": {
      "fn": "ERC721.name",
      "jump": "i",
      "offset": [
        2473,
        2571
      ],
      "op": "JUMP",
      "path": "3"
    },
    "976": {
      "fn": "ERC721.name",
      "offset": [
        2473,
        2571
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "977": {
      "fn": "ERC721.name",
      "offset": [
        2473,
        2571
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "979": {
      "fn": "ERC721.name",
      "offset": [
        2473,
        2571
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "980": {
      "fn": "ERC721.name",
      "offset": [
        2473,
        2571
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x3B2"
    },
    "983": {
      "fn": "ERC721.name",
      "offset": [
        2473,
        2571
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "984": {
      "fn": "ERC721.name",
      "offset": [
        2473,
        2571
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "985": {
      "fn": "ERC721.name",
      "offset": [
        2473,
        2571
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2FAA"
    },
    "988": {
      "fn": "ERC721.name",
      "jump": "i",
      "offset": [
        2473,
        2571
      ],
      "op": "JUMP",
      "path": "3"
    },
    "989": {
      "fn": "ERC721.getApproved",
      "offset": [
        3984,
        4201
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "990": {
      "fn": "ERC721.getApproved",
      "offset": [
        3984,
        4201
      ],
      "op": "CALLVALUE",
      "path": "3"
    },
    "991": {
      "fn": "ERC721.getApproved",
      "offset": [
        3984,
        4201
      ],
      "op": "DUP1",
      "path": "3"
    },
    "992": {
      "fn": "ERC721.getApproved",
      "offset": [
        3984,
        4201
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "993": {
      "fn": "ERC721.getApproved",
      "offset": [
        3984,
        4201
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x3E9"
    },
    "996": {
      "fn": "ERC721.getApproved",
      "offset": [
        3984,
        4201
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "997": {
      "fn": "ERC721.getApproved",
      "offset": [
        3984,
        4201
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "999": {
      "fn": "ERC721.getApproved",
      "offset": [
        3984,
        4201
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1000": {
      "fn": "ERC721.getApproved",
      "offset": [
        3984,
        4201
      ],
      "op": "REVERT",
      "path": "3"
    },
    "1001": {
      "fn": "ERC721.getApproved",
      "offset": [
        3984,
        4201
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1002": {
      "op": "POP"
    },
    "1003": {
      "fn": "ERC721.getApproved",
      "offset": [
        3984,
        4201
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x3FD"
    },
    "1006": {
      "fn": "ERC721.getApproved",
      "offset": [
        3984,
        4201
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x3F8"
    },
    "1009": {
      "fn": "ERC721.getApproved",
      "offset": [
        3984,
        4201
      ],
      "op": "CALLDATASIZE",
      "path": "3"
    },
    "1010": {
      "fn": "ERC721.getApproved",
      "offset": [
        3984,
        4201
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "1012": {
      "fn": "ERC721.getApproved",
      "offset": [
        3984,
        4201
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2FBD"
    },
    "1015": {
      "fn": "ERC721.getApproved",
      "jump": "i",
      "offset": [
        3984,
        4201
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1016": {
      "fn": "ERC721.getApproved",
      "offset": [
        3984,
        4201
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1017": {
      "fn": "ERC721.getApproved",
      "offset": [
        3984,
        4201
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xB05"
    },
    "1020": {
      "fn": "ERC721.getApproved",
      "jump": "i",
      "offset": [
        3984,
        4201
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1021": {
      "fn": "ERC721.getApproved",
      "offset": [
        3984,
        4201
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1022": {
      "fn": "ERC721.getApproved",
      "offset": [
        3984,
        4201
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "1024": {
      "fn": "ERC721.getApproved",
      "offset": [
        3984,
        4201
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "1025": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1027": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1029": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1031": {
      "op": "SHL"
    },
    "1032": {
      "op": "SUB"
    },
    "1033": {
      "op": "SWAP1"
    },
    "1034": {
      "op": "SWAP2"
    },
    "1035": {
      "op": "AND"
    },
    "1036": {
      "op": "DUP2"
    },
    "1037": {
      "op": "MSTORE"
    },
    "1038": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1040": {
      "op": "ADD"
    },
    "1041": {
      "fn": "ERC721.getApproved",
      "offset": [
        3984,
        4201
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x3B2"
    },
    "1044": {
      "op": "JUMP"
    },
    "1045": {
      "offset": [
        1553,
        1581
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1046": {
      "fn": "ERC721.getApproved",
      "offset": [
        1553,
        1581
      ],
      "op": "CALLVALUE",
      "path": "16"
    },
    "1047": {
      "fn": "ERC721.getApproved",
      "offset": [
        1553,
        1581
      ],
      "op": "DUP1",
      "path": "16"
    },
    "1048": {
      "fn": "ERC721.getApproved",
      "offset": [
        1553,
        1581
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "1049": {
      "fn": "ERC721.getApproved",
      "offset": [
        1553,
        1581
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x421"
    },
    "1052": {
      "fn": "ERC721.getApproved",
      "offset": [
        1553,
        1581
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "1053": {
      "fn": "ERC721.getApproved",
      "offset": [
        1553,
        1581
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "1055": {
      "fn": "ERC721.getApproved",
      "offset": [
        1553,
        1581
      ],
      "op": "DUP1",
      "path": "16"
    },
    "1056": {
      "fn": "ERC721.getApproved",
      "offset": [
        1553,
        1581
      ],
      "op": "REVERT",
      "path": "16"
    },
    "1057": {
      "fn": "ERC721.getApproved",
      "offset": [
        1553,
        1581
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1058": {
      "fn": "ERC721.getApproved",
      "offset": [
        1553,
        1581
      ],
      "op": "POP",
      "path": "16"
    },
    "1059": {
      "fn": "ERC721.getApproved",
      "offset": [
        1553,
        1581
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x42B"
    },
    "1062": {
      "fn": "ERC721.getApproved",
      "offset": [
        1553,
        1581
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x15"
    },
    "1064": {
      "fn": "ERC721.getApproved",
      "offset": [
        1553,
        1581
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "1065": {
      "fn": "ERC721.getApproved",
      "offset": [
        1553,
        1581
      ],
      "op": "DUP2",
      "path": "16"
    },
    "1066": {
      "fn": "ERC721.getApproved",
      "offset": [
        1553,
        1581
      ],
      "op": "JUMP",
      "path": "16"
    },
    "1067": {
      "fn": "ERC721.getApproved",
      "offset": [
        1553,
        1581
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1068": {
      "fn": "ERC721.getApproved",
      "offset": [
        1553,
        1581
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "1070": {
      "fn": "ERC721.getApproved",
      "offset": [
        1553,
        1581
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "1071": {
      "op": "SWAP1"
    },
    "1072": {
      "op": "DUP2"
    },
    "1073": {
      "op": "MSTORE"
    },
    "1074": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1076": {
      "op": "ADD"
    },
    "1077": {
      "offset": [
        1553,
        1581
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x3B2"
    },
    "1080": {
      "op": "JUMP"
    },
    "1081": {
      "fn": "ERC721.approve",
      "offset": [
        3522,
        3923
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1082": {
      "fn": "ERC721.approve",
      "offset": [
        3522,
        3923
      ],
      "op": "CALLVALUE",
      "path": "3"
    },
    "1083": {
      "fn": "ERC721.approve",
      "offset": [
        3522,
        3923
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1084": {
      "fn": "ERC721.approve",
      "offset": [
        3522,
        3923
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "1085": {
      "fn": "ERC721.approve",
      "offset": [
        3522,
        3923
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x445"
    },
    "1088": {
      "fn": "ERC721.approve",
      "offset": [
        3522,
        3923
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "1089": {
      "fn": "ERC721.approve",
      "offset": [
        3522,
        3923
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "1091": {
      "fn": "ERC721.approve",
      "offset": [
        3522,
        3923
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1092": {
      "fn": "ERC721.approve",
      "offset": [
        3522,
        3923
      ],
      "op": "REVERT",
      "path": "3"
    },
    "1093": {
      "fn": "ERC721.approve",
      "offset": [
        3522,
        3923
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1094": {
      "op": "POP"
    },
    "1095": {
      "fn": "ERC721.approve",
      "offset": [
        3522,
        3923
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x459"
    },
    "1098": {
      "fn": "ERC721.approve",
      "offset": [
        3522,
        3923
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x454"
    },
    "1101": {
      "fn": "ERC721.approve",
      "offset": [
        3522,
        3923
      ],
      "op": "CALLDATASIZE",
      "path": "3"
    },
    "1102": {
      "fn": "ERC721.approve",
      "offset": [
        3522,
        3923
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "1104": {
      "fn": "ERC721.approve",
      "offset": [
        3522,
        3923
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2FF2"
    },
    "1107": {
      "fn": "ERC721.approve",
      "jump": "i",
      "offset": [
        3522,
        3923
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1108": {
      "fn": "ERC721.approve",
      "offset": [
        3522,
        3923
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1109": {
      "fn": "ERC721.approve",
      "offset": [
        3522,
        3923
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xB9F"
    },
    "1112": {
      "fn": "ERC721.approve",
      "jump": "i",
      "offset": [
        3522,
        3923
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1113": {
      "fn": "ERC721.approve",
      "offset": [
        3522,
        3923
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1114": {
      "fn": "ERC721.approve",
      "offset": [
        3522,
        3923
      ],
      "op": "STOP",
      "path": "3"
    },
    "1115": {
      "fn": "CryptidToken.setProvenanceHash",
      "offset": [
        6217,
        6508
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1116": {
      "fn": "CryptidToken.setProvenanceHash",
      "offset": [
        6217,
        6508
      ],
      "op": "CALLVALUE",
      "path": "16"
    },
    "1117": {
      "fn": "CryptidToken.setProvenanceHash",
      "offset": [
        6217,
        6508
      ],
      "op": "DUP1",
      "path": "16"
    },
    "1118": {
      "fn": "CryptidToken.setProvenanceHash",
      "offset": [
        6217,
        6508
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "1119": {
      "fn": "CryptidToken.setProvenanceHash",
      "offset": [
        6217,
        6508
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x467"
    },
    "1122": {
      "fn": "CryptidToken.setProvenanceHash",
      "offset": [
        6217,
        6508
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "1123": {
      "fn": "CryptidToken.setProvenanceHash",
      "offset": [
        6217,
        6508
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "1125": {
      "fn": "CryptidToken.setProvenanceHash",
      "offset": [
        6217,
        6508
      ],
      "op": "DUP1",
      "path": "16"
    },
    "1126": {
      "fn": "CryptidToken.setProvenanceHash",
      "offset": [
        6217,
        6508
      ],
      "op": "REVERT",
      "path": "16"
    },
    "1127": {
      "fn": "CryptidToken.setProvenanceHash",
      "offset": [
        6217,
        6508
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1128": {
      "op": "POP"
    },
    "1129": {
      "fn": "CryptidToken.setProvenanceHash",
      "offset": [
        6217,
        6508
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x459"
    },
    "1132": {
      "fn": "CryptidToken.setProvenanceHash",
      "offset": [
        6217,
        6508
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x476"
    },
    "1135": {
      "fn": "CryptidToken.setProvenanceHash",
      "offset": [
        6217,
        6508
      ],
      "op": "CALLDATASIZE",
      "path": "16"
    },
    "1136": {
      "fn": "CryptidToken.setProvenanceHash",
      "offset": [
        6217,
        6508
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "1138": {
      "fn": "CryptidToken.setProvenanceHash",
      "offset": [
        6217,
        6508
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x30A8"
    },
    "1141": {
      "fn": "CryptidToken.setProvenanceHash",
      "jump": "i",
      "offset": [
        6217,
        6508
      ],
      "op": "JUMP",
      "path": "16"
    },
    "1142": {
      "fn": "CryptidToken.setProvenanceHash",
      "offset": [
        6217,
        6508
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1143": {
      "fn": "CryptidToken.setProvenanceHash",
      "offset": [
        6217,
        6508
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xCB5"
    },
    "1146": {
      "fn": "CryptidToken.setProvenanceHash",
      "jump": "i",
      "offset": [
        6217,
        6508
      ],
      "op": "JUMP",
      "path": "16"
    },
    "1147": {
      "fn": "CryptidToken.totalSupply",
      "offset": [
        7640,
        7755
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1148": {
      "fn": "CryptidToken.totalSupply",
      "offset": [
        7640,
        7755
      ],
      "op": "CALLVALUE",
      "path": "16"
    },
    "1149": {
      "fn": "CryptidToken.totalSupply",
      "offset": [
        7640,
        7755
      ],
      "op": "DUP1",
      "path": "16"
    },
    "1150": {
      "fn": "CryptidToken.totalSupply",
      "offset": [
        7640,
        7755
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "1151": {
      "fn": "CryptidToken.totalSupply",
      "offset": [
        7640,
        7755
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x487"
    },
    "1154": {
      "fn": "CryptidToken.totalSupply",
      "offset": [
        7640,
        7755
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "1155": {
      "fn": "CryptidToken.totalSupply",
      "offset": [
        7640,
        7755
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "1157": {
      "fn": "CryptidToken.totalSupply",
      "offset": [
        7640,
        7755
      ],
      "op": "DUP1",
      "path": "16"
    },
    "1158": {
      "fn": "CryptidToken.totalSupply",
      "offset": [
        7640,
        7755
      ],
      "op": "REVERT",
      "path": "16"
    },
    "1159": {
      "fn": "CryptidToken.totalSupply",
      "offset": [
        7640,
        7755
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1160": {
      "fn": "CryptidToken.totalSupply",
      "offset": [
        7640,
        7755
      ],
      "op": "POP",
      "path": "16"
    },
    "1161": {
      "fn": "CryptidToken.totalSupply",
      "offset": [
        7640,
        7755
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x42B"
    },
    "1164": {
      "fn": "CryptidToken.totalSupply",
      "offset": [
        7640,
        7755
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xDB6"
    },
    "1167": {
      "fn": "CryptidToken.totalSupply",
      "jump": "i",
      "offset": [
        7640,
        7755
      ],
      "op": "JUMP",
      "path": "16"
    },
    "1168": {
      "fn": "CryptidToken.setTeamMintSupply",
      "offset": [
        5711,
        5837
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1169": {
      "fn": "CryptidToken.setTeamMintSupply",
      "offset": [
        5711,
        5837
      ],
      "op": "CALLVALUE",
      "path": "16"
    },
    "1170": {
      "fn": "CryptidToken.setTeamMintSupply",
      "offset": [
        5711,
        5837
      ],
      "op": "DUP1",
      "path": "16"
    },
    "1171": {
      "fn": "CryptidToken.setTeamMintSupply",
      "offset": [
        5711,
        5837
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "1172": {
      "fn": "CryptidToken.setTeamMintSupply",
      "offset": [
        5711,
        5837
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x49C"
    },
    "1175": {
      "fn": "CryptidToken.setTeamMintSupply",
      "offset": [
        5711,
        5837
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "1176": {
      "fn": "CryptidToken.setTeamMintSupply",
      "offset": [
        5711,
        5837
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "1178": {
      "fn": "CryptidToken.setTeamMintSupply",
      "offset": [
        5711,
        5837
      ],
      "op": "DUP1",
      "path": "16"
    },
    "1179": {
      "fn": "CryptidToken.setTeamMintSupply",
      "offset": [
        5711,
        5837
      ],
      "op": "REVERT",
      "path": "16"
    },
    "1180": {
      "fn": "CryptidToken.setTeamMintSupply",
      "offset": [
        5711,
        5837
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1181": {
      "op": "POP"
    },
    "1182": {
      "fn": "CryptidToken.setTeamMintSupply",
      "offset": [
        5711,
        5837
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x459"
    },
    "1185": {
      "fn": "CryptidToken.setTeamMintSupply",
      "offset": [
        5711,
        5837
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x4AB"
    },
    "1188": {
      "fn": "CryptidToken.setTeamMintSupply",
      "offset": [
        5711,
        5837
      ],
      "op": "CALLDATASIZE",
      "path": "16"
    },
    "1189": {
      "fn": "CryptidToken.setTeamMintSupply",
      "offset": [
        5711,
        5837
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "1191": {
      "fn": "CryptidToken.setTeamMintSupply",
      "offset": [
        5711,
        5837
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x2FBD"
    },
    "1194": {
      "fn": "CryptidToken.setTeamMintSupply",
      "jump": "i",
      "offset": [
        5711,
        5837
      ],
      "op": "JUMP",
      "path": "16"
    },
    "1195": {
      "fn": "CryptidToken.setTeamMintSupply",
      "offset": [
        5711,
        5837
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1196": {
      "fn": "CryptidToken.setTeamMintSupply",
      "offset": [
        5711,
        5837
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xDD2"
    },
    "1199": {
      "fn": "CryptidToken.setTeamMintSupply",
      "jump": "i",
      "offset": [
        5711,
        5837
      ],
      "op": "JUMP",
      "path": "16"
    },
    "1200": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4711,
        5041
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1201": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4711,
        5041
      ],
      "op": "CALLVALUE",
      "path": "3"
    },
    "1202": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4711,
        5041
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1203": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4711,
        5041
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "1204": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4711,
        5041
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x4BC"
    },
    "1207": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4711,
        5041
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "1208": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4711,
        5041
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "1210": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4711,
        5041
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1211": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4711,
        5041
      ],
      "op": "REVERT",
      "path": "3"
    },
    "1212": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4711,
        5041
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1213": {
      "op": "POP"
    },
    "1214": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4711,
        5041
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x459"
    },
    "1217": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4711,
        5041
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x4CB"
    },
    "1220": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4711,
        5041
      ],
      "op": "CALLDATASIZE",
      "path": "3"
    },
    "1221": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4711,
        5041
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "1223": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4711,
        5041
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x30F1"
    },
    "1226": {
      "fn": "ERC721.transferFrom",
      "jump": "i",
      "offset": [
        4711,
        5041
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1227": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4711,
        5041
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1228": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4711,
        5041
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xE07"
    },
    "1231": {
      "fn": "ERC721.transferFrom",
      "jump": "i",
      "offset": [
        4711,
        5041
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1232": {
      "offset": [
        837,
        862
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1233": {
      "fn": "ERC721.transferFrom",
      "offset": [
        837,
        862
      ],
      "op": "CALLVALUE",
      "path": "16"
    },
    "1234": {
      "fn": "ERC721.transferFrom",
      "offset": [
        837,
        862
      ],
      "op": "DUP1",
      "path": "16"
    },
    "1235": {
      "fn": "ERC721.transferFrom",
      "offset": [
        837,
        862
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "1236": {
      "fn": "ERC721.transferFrom",
      "offset": [
        837,
        862
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x4DC"
    },
    "1239": {
      "fn": "ERC721.transferFrom",
      "offset": [
        837,
        862
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "1240": {
      "fn": "ERC721.transferFrom",
      "offset": [
        837,
        862
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "1242": {
      "fn": "ERC721.transferFrom",
      "offset": [
        837,
        862
      ],
      "op": "DUP1",
      "path": "16"
    },
    "1243": {
      "fn": "ERC721.transferFrom",
      "offset": [
        837,
        862
      ],
      "op": "REVERT",
      "path": "16"
    },
    "1244": {
      "fn": "ERC721.transferFrom",
      "offset": [
        837,
        862
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1245": {
      "fn": "ERC721.transferFrom",
      "offset": [
        837,
        862
      ],
      "op": "POP",
      "path": "16"
    },
    "1246": {
      "fn": "ERC721.transferFrom",
      "offset": [
        837,
        862
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x42B"
    },
    "1249": {
      "fn": "ERC721.transferFrom",
      "offset": [
        837,
        862
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0xD"
    },
    "1251": {
      "fn": "ERC721.transferFrom",
      "offset": [
        837,
        862
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "1252": {
      "fn": "ERC721.transferFrom",
      "offset": [
        837,
        862
      ],
      "op": "DUP2",
      "path": "16"
    },
    "1253": {
      "fn": "ERC721.transferFrom",
      "offset": [
        837,
        862
      ],
      "op": "JUMP",
      "path": "16"
    },
    "1254": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1291,
        1544
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1255": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1291,
        1544
      ],
      "op": "CALLVALUE",
      "path": "6"
    },
    "1256": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1291,
        1544
      ],
      "op": "DUP1",
      "path": "6"
    },
    "1257": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1291,
        1544
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "1258": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1291,
        1544
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x4F2"
    },
    "1261": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1291,
        1544
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "1262": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1291,
        1544
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "1264": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1291,
        1544
      ],
      "op": "DUP1",
      "path": "6"
    },
    "1265": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1291,
        1544
      ],
      "op": "REVERT",
      "path": "6"
    },
    "1266": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1291,
        1544
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1267": {
      "op": "POP"
    },
    "1268": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1291,
        1544
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x42B"
    },
    "1271": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1291,
        1544
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x501"
    },
    "1274": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1291,
        1544
      ],
      "op": "CALLDATASIZE",
      "path": "6"
    },
    "1275": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1291,
        1544
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "1277": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1291,
        1544
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x2FF2"
    },
    "1280": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "jump": "i",
      "offset": [
        1291,
        1544
      ],
      "op": "JUMP",
      "path": "6"
    },
    "1281": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1291,
        1544
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1282": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1291,
        1544
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xE38"
    },
    "1285": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "jump": "i",
      "offset": [
        1291,
        1544
      ],
      "op": "JUMP",
      "path": "6"
    },
    "1286": {
      "offset": [
        1342,
        1372
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1287": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1342,
        1372
      ],
      "op": "CALLVALUE",
      "path": "16"
    },
    "1288": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1342,
        1372
      ],
      "op": "DUP1",
      "path": "16"
    },
    "1289": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1342,
        1372
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "1290": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1342,
        1372
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x512"
    },
    "1293": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1342,
        1372
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "1294": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1342,
        1372
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "1296": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1342,
        1372
      ],
      "op": "DUP1",
      "path": "16"
    },
    "1297": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1342,
        1372
      ],
      "op": "REVERT",
      "path": "16"
    },
    "1298": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1342,
        1372
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1299": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1342,
        1372
      ],
      "op": "POP",
      "path": "16"
    },
    "1300": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1342,
        1372
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x42B"
    },
    "1303": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1342,
        1372
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x12"
    },
    "1305": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1342,
        1372
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "1306": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1342,
        1372
      ],
      "op": "DUP2",
      "path": "16"
    },
    "1307": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1342,
        1372
      ],
      "op": "JUMP",
      "path": "16"
    },
    "1308": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3046,
        3689
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1309": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3046,
        3689
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x459"
    },
    "1312": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3046,
        3689
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x52A"
    },
    "1315": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3046,
        3689
      ],
      "op": "CALLDATASIZE",
      "path": "16"
    },
    "1316": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3046,
        3689
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "1318": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3046,
        3689
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x312D"
    },
    "1321": {
      "fn": "CryptidToken.whitelistMint",
      "jump": "i",
      "offset": [
        3046,
        3689
      ],
      "op": "JUMP",
      "path": "16"
    },
    "1322": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3046,
        3689
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1323": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3046,
        3689
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xECE"
    },
    "1326": {
      "fn": "CryptidToken.whitelistMint",
      "jump": "i",
      "offset": [
        3046,
        3689
      ],
      "op": "JUMP",
      "path": "16"
    },
    "1327": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        6914,
        7108
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1328": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        6914,
        7108
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x459"
    },
    "1331": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        6914,
        7108
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x11F0"
    },
    "1334": {
      "fn": "CryptidToken.withdraw",
      "jump": "i",
      "offset": [
        6914,
        7108
      ],
      "op": "JUMP",
      "path": "16"
    },
    "1335": {
      "fn": "CryptidToken.unpause",
      "offset": [
        4983,
        5048
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1336": {
      "fn": "CryptidToken.unpause",
      "offset": [
        4983,
        5048
      ],
      "op": "CALLVALUE",
      "path": "16"
    },
    "1337": {
      "fn": "CryptidToken.unpause",
      "offset": [
        4983,
        5048
      ],
      "op": "DUP1",
      "path": "16"
    },
    "1338": {
      "fn": "CryptidToken.unpause",
      "offset": [
        4983,
        5048
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "1339": {
      "fn": "CryptidToken.unpause",
      "offset": [
        4983,
        5048
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x543"
    },
    "1342": {
      "fn": "CryptidToken.unpause",
      "offset": [
        4983,
        5048
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "1343": {
      "fn": "CryptidToken.unpause",
      "offset": [
        4983,
        5048
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "1345": {
      "fn": "CryptidToken.unpause",
      "offset": [
        4983,
        5048
      ],
      "op": "DUP1",
      "path": "16"
    },
    "1346": {
      "fn": "CryptidToken.unpause",
      "offset": [
        4983,
        5048
      ],
      "op": "REVERT",
      "path": "16"
    },
    "1347": {
      "fn": "CryptidToken.unpause",
      "offset": [
        4983,
        5048
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1348": {
      "fn": "CryptidToken.unpause",
      "offset": [
        4983,
        5048
      ],
      "op": "POP",
      "path": "16"
    },
    "1349": {
      "fn": "CryptidToken.unpause",
      "offset": [
        4983,
        5048
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x459"
    },
    "1352": {
      "fn": "CryptidToken.unpause",
      "offset": [
        4983,
        5048
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x12C1"
    },
    "1355": {
      "fn": "CryptidToken.unpause",
      "jump": "i",
      "offset": [
        4983,
        5048
      ],
      "op": "JUMP",
      "path": "16"
    },
    "1356": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5107,
        5286
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1357": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5107,
        5286
      ],
      "op": "CALLVALUE",
      "path": "3"
    },
    "1358": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5107,
        5286
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1359": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5107,
        5286
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "1360": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5107,
        5286
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x558"
    },
    "1363": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5107,
        5286
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "1364": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5107,
        5286
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "1366": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5107,
        5286
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1367": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5107,
        5286
      ],
      "op": "REVERT",
      "path": "3"
    },
    "1368": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5107,
        5286
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1369": {
      "op": "POP"
    },
    "1370": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5107,
        5286
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x459"
    },
    "1373": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5107,
        5286
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x567"
    },
    "1376": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5107,
        5286
      ],
      "op": "CALLDATASIZE",
      "path": "3"
    },
    "1377": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5107,
        5286
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "1379": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5107,
        5286
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x30F1"
    },
    "1382": {
      "fn": "ERC721.safeTransferFrom",
      "jump": "i",
      "offset": [
        5107,
        5286
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1383": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5107,
        5286
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1384": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5107,
        5286
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x12FB"
    },
    "1387": {
      "fn": "ERC721.safeTransferFrom",
      "jump": "i",
      "offset": [
        5107,
        5286
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1388": {
      "fn": "CryptidToken.walletOfOwner",
      "offset": [
        8155,
        8508
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1389": {
      "fn": "CryptidToken.walletOfOwner",
      "offset": [
        8155,
        8508
      ],
      "op": "CALLVALUE",
      "path": "16"
    },
    "1390": {
      "fn": "CryptidToken.walletOfOwner",
      "offset": [
        8155,
        8508
      ],
      "op": "DUP1",
      "path": "16"
    },
    "1391": {
      "fn": "CryptidToken.walletOfOwner",
      "offset": [
        8155,
        8508
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "1392": {
      "fn": "CryptidToken.walletOfOwner",
      "offset": [
        8155,
        8508
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x578"
    },
    "1395": {
      "fn": "CryptidToken.walletOfOwner",
      "offset": [
        8155,
        8508
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "1396": {
      "fn": "CryptidToken.walletOfOwner",
      "offset": [
        8155,
        8508
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "1398": {
      "fn": "CryptidToken.walletOfOwner",
      "offset": [
        8155,
        8508
      ],
      "op": "DUP1",
      "path": "16"
    },
    "1399": {
      "fn": "CryptidToken.walletOfOwner",
      "offset": [
        8155,
        8508
      ],
      "op": "REVERT",
      "path": "16"
    },
    "1400": {
      "fn": "CryptidToken.walletOfOwner",
      "offset": [
        8155,
        8508
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1401": {
      "op": "POP"
    },
    "1402": {
      "fn": "CryptidToken.walletOfOwner",
      "offset": [
        8155,
        8508
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x58C"
    },
    "1405": {
      "fn": "CryptidToken.walletOfOwner",
      "offset": [
        8155,
        8508
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x587"
    },
    "1408": {
      "fn": "CryptidToken.walletOfOwner",
      "offset": [
        8155,
        8508
      ],
      "op": "CALLDATASIZE",
      "path": "16"
    },
    "1409": {
      "fn": "CryptidToken.walletOfOwner",
      "offset": [
        8155,
        8508
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "1411": {
      "fn": "CryptidToken.walletOfOwner",
      "offset": [
        8155,
        8508
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x31A2"
    },
    "1414": {
      "fn": "CryptidToken.walletOfOwner",
      "jump": "i",
      "offset": [
        8155,
        8508
      ],
      "op": "JUMP",
      "path": "16"
    },
    "1415": {
      "fn": "CryptidToken.walletOfOwner",
      "offset": [
        8155,
        8508
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1416": {
      "fn": "CryptidToken.walletOfOwner",
      "offset": [
        8155,
        8508
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1316"
    },
    "1419": {
      "fn": "CryptidToken.walletOfOwner",
      "jump": "i",
      "offset": [
        8155,
        8508
      ],
      "op": "JUMP",
      "path": "16"
    },
    "1420": {
      "fn": "CryptidToken.walletOfOwner",
      "offset": [
        8155,
        8508
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1421": {
      "fn": "CryptidToken.walletOfOwner",
      "offset": [
        8155,
        8508
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "1423": {
      "fn": "CryptidToken.walletOfOwner",
      "offset": [
        8155,
        8508
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "1424": {
      "fn": "CryptidToken.walletOfOwner",
      "offset": [
        8155,
        8508
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x3B2"
    },
    "1427": {
      "fn": "CryptidToken.walletOfOwner",
      "offset": [
        8155,
        8508
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "1428": {
      "fn": "CryptidToken.walletOfOwner",
      "offset": [
        8155,
        8508
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "1429": {
      "fn": "CryptidToken.walletOfOwner",
      "offset": [
        8155,
        8508
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x31BD"
    },
    "1432": {
      "fn": "CryptidToken.walletOfOwner",
      "jump": "i",
      "offset": [
        8155,
        8508
      ],
      "op": "JUMP",
      "path": "16"
    },
    "1433": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        1798,
        2028
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1434": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        1798,
        2028
      ],
      "op": "CALLVALUE",
      "path": "6"
    },
    "1435": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        1798,
        2028
      ],
      "op": "DUP1",
      "path": "6"
    },
    "1436": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        1798,
        2028
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "1437": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        1798,
        2028
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x5A5"
    },
    "1440": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        1798,
        2028
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "1441": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        1798,
        2028
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "1443": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        1798,
        2028
      ],
      "op": "DUP1",
      "path": "6"
    },
    "1444": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        1798,
        2028
      ],
      "op": "REVERT",
      "path": "6"
    },
    "1445": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        1798,
        2028
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1446": {
      "op": "POP"
    },
    "1447": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        1798,
        2028
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x42B"
    },
    "1450": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        1798,
        2028
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x5B4"
    },
    "1453": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        1798,
        2028
      ],
      "op": "CALLDATASIZE",
      "path": "6"
    },
    "1454": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        1798,
        2028
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "1456": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        1798,
        2028
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x2FBD"
    },
    "1459": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "jump": "i",
      "offset": [
        1798,
        2028
      ],
      "op": "JUMP",
      "path": "6"
    },
    "1460": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        1798,
        2028
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1461": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        1798,
        2028
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x13B8"
    },
    "1464": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "jump": "i",
      "offset": [
        1798,
        2028
      ],
      "op": "JUMP",
      "path": "6"
    },
    "1465": {
      "fn": "CryptidToken.setBaseURI",
      "offset": [
        5317,
        5477
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1466": {
      "fn": "CryptidToken.setBaseURI",
      "offset": [
        5317,
        5477
      ],
      "op": "CALLVALUE",
      "path": "16"
    },
    "1467": {
      "fn": "CryptidToken.setBaseURI",
      "offset": [
        5317,
        5477
      ],
      "op": "DUP1",
      "path": "16"
    },
    "1468": {
      "fn": "CryptidToken.setBaseURI",
      "offset": [
        5317,
        5477
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "1469": {
      "fn": "CryptidToken.setBaseURI",
      "offset": [
        5317,
        5477
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x5C5"
    },
    "1472": {
      "fn": "CryptidToken.setBaseURI",
      "offset": [
        5317,
        5477
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "1473": {
      "fn": "CryptidToken.setBaseURI",
      "offset": [
        5317,
        5477
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "1475": {
      "fn": "CryptidToken.setBaseURI",
      "offset": [
        5317,
        5477
      ],
      "op": "DUP1",
      "path": "16"
    },
    "1476": {
      "fn": "CryptidToken.setBaseURI",
      "offset": [
        5317,
        5477
      ],
      "op": "REVERT",
      "path": "16"
    },
    "1477": {
      "fn": "CryptidToken.setBaseURI",
      "offset": [
        5317,
        5477
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1478": {
      "op": "POP"
    },
    "1479": {
      "fn": "CryptidToken.setBaseURI",
      "offset": [
        5317,
        5477
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x459"
    },
    "1482": {
      "fn": "CryptidToken.setBaseURI",
      "offset": [
        5317,
        5477
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x5D4"
    },
    "1485": {
      "fn": "CryptidToken.setBaseURI",
      "offset": [
        5317,
        5477
      ],
      "op": "CALLDATASIZE",
      "path": "16"
    },
    "1486": {
      "fn": "CryptidToken.setBaseURI",
      "offset": [
        5317,
        5477
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "1488": {
      "fn": "CryptidToken.setBaseURI",
      "offset": [
        5317,
        5477
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x30A8"
    },
    "1491": {
      "fn": "CryptidToken.setBaseURI",
      "jump": "i",
      "offset": [
        5317,
        5477
      ],
      "op": "JUMP",
      "path": "16"
    },
    "1492": {
      "fn": "CryptidToken.setBaseURI",
      "offset": [
        5317,
        5477
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1493": {
      "fn": "CryptidToken.setBaseURI",
      "offset": [
        5317,
        5477
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x144B"
    },
    "1496": {
      "fn": "CryptidToken.setBaseURI",
      "jump": "i",
      "offset": [
        5317,
        5477
      ],
      "op": "JUMP",
      "path": "16"
    },
    "1497": {
      "fn": "Pausable.paused",
      "offset": [
        1098,
        1182
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1498": {
      "fn": "Pausable.paused",
      "offset": [
        1098,
        1182
      ],
      "op": "CALLVALUE",
      "path": "1"
    },
    "1499": {
      "fn": "Pausable.paused",
      "offset": [
        1098,
        1182
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1500": {
      "fn": "Pausable.paused",
      "offset": [
        1098,
        1182
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "1501": {
      "fn": "Pausable.paused",
      "offset": [
        1098,
        1182
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x5E5"
    },
    "1504": {
      "fn": "Pausable.paused",
      "offset": [
        1098,
        1182
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "1505": {
      "fn": "Pausable.paused",
      "offset": [
        1098,
        1182
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "1507": {
      "fn": "Pausable.paused",
      "offset": [
        1098,
        1182
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1508": {
      "fn": "Pausable.paused",
      "offset": [
        1098,
        1182
      ],
      "op": "REVERT",
      "path": "1"
    },
    "1509": {
      "fn": "Pausable.paused",
      "offset": [
        1098,
        1182
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1510": {
      "op": "POP"
    },
    "1511": {
      "fn": "Pausable.paused",
      "offset": [
        1168,
        1175
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 0,
      "value": "0xA"
    },
    "1513": {
      "fn": "Pausable.paused",
      "offset": [
        1168,
        1175
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "1514": {
      "fn": "Pausable.paused",
      "offset": [
        1168,
        1175
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xFF"
    },
    "1516": {
      "fn": "Pausable.paused",
      "offset": [
        1168,
        1175
      ],
      "op": "AND",
      "path": "1"
    },
    "1517": {
      "fn": "Pausable.paused",
      "offset": [
        1098,
        1182
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x3A6"
    },
    "1520": {
      "fn": "Pausable.paused",
      "offset": [
        1098,
        1182
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1521": {
      "fn": "CryptidToken.setMaxMintPerTx",
      "offset": [
        6095,
        6211
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1522": {
      "fn": "CryptidToken.setMaxMintPerTx",
      "offset": [
        6095,
        6211
      ],
      "op": "CALLVALUE",
      "path": "16"
    },
    "1523": {
      "fn": "CryptidToken.setMaxMintPerTx",
      "offset": [
        6095,
        6211
      ],
      "op": "DUP1",
      "path": "16"
    },
    "1524": {
      "fn": "CryptidToken.setMaxMintPerTx",
      "offset": [
        6095,
        6211
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "1525": {
      "fn": "CryptidToken.setMaxMintPerTx",
      "offset": [
        6095,
        6211
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x5FD"
    },
    "1528": {
      "fn": "CryptidToken.setMaxMintPerTx",
      "offset": [
        6095,
        6211
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "1529": {
      "fn": "CryptidToken.setMaxMintPerTx",
      "offset": [
        6095,
        6211
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "1531": {
      "fn": "CryptidToken.setMaxMintPerTx",
      "offset": [
        6095,
        6211
      ],
      "op": "DUP1",
      "path": "16"
    },
    "1532": {
      "fn": "CryptidToken.setMaxMintPerTx",
      "offset": [
        6095,
        6211
      ],
      "op": "REVERT",
      "path": "16"
    },
    "1533": {
      "fn": "CryptidToken.setMaxMintPerTx",
      "offset": [
        6095,
        6211
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1534": {
      "op": "POP"
    },
    "1535": {
      "fn": "CryptidToken.setMaxMintPerTx",
      "offset": [
        6095,
        6211
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x459"
    },
    "1538": {
      "fn": "CryptidToken.setMaxMintPerTx",
      "offset": [
        6095,
        6211
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x60C"
    },
    "1541": {
      "fn": "CryptidToken.setMaxMintPerTx",
      "offset": [
        6095,
        6211
      ],
      "op": "CALLDATASIZE",
      "path": "16"
    },
    "1542": {
      "fn": "CryptidToken.setMaxMintPerTx",
      "offset": [
        6095,
        6211
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "1544": {
      "fn": "CryptidToken.setMaxMintPerTx",
      "offset": [
        6095,
        6211
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x3212"
    },
    "1547": {
      "fn": "CryptidToken.setMaxMintPerTx",
      "jump": "i",
      "offset": [
        6095,
        6211
      ],
      "op": "JUMP",
      "path": "16"
    },
    "1548": {
      "fn": "CryptidToken.setMaxMintPerTx",
      "offset": [
        6095,
        6211
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1549": {
      "fn": "CryptidToken.setMaxMintPerTx",
      "offset": [
        6095,
        6211
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x14DB"
    },
    "1552": {
      "fn": "CryptidToken.setMaxMintPerTx",
      "jump": "i",
      "offset": [
        6095,
        6211
      ],
      "op": "JUMP",
      "path": "16"
    },
    "1553": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2176,
        2411
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1554": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2176,
        2411
      ],
      "op": "CALLVALUE",
      "path": "3"
    },
    "1555": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2176,
        2411
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1556": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2176,
        2411
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "1557": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2176,
        2411
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x61D"
    },
    "1560": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2176,
        2411
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "1561": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2176,
        2411
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "1563": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2176,
        2411
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1564": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2176,
        2411
      ],
      "op": "REVERT",
      "path": "3"
    },
    "1565": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2176,
        2411
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1566": {
      "op": "POP"
    },
    "1567": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2176,
        2411
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x3FD"
    },
    "1570": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2176,
        2411
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x62C"
    },
    "1573": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2176,
        2411
      ],
      "op": "CALLDATASIZE",
      "path": "3"
    },
    "1574": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2176,
        2411
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "1576": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2176,
        2411
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2FBD"
    },
    "1579": {
      "fn": "ERC721.ownerOf",
      "jump": "i",
      "offset": [
        2176,
        2411
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1580": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2176,
        2411
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1581": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2176,
        2411
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1521"
    },
    "1584": {
      "fn": "ERC721.ownerOf",
      "jump": "i",
      "offset": [
        2176,
        2411
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1585": {
      "offset": [
        903,
        929
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1586": {
      "fn": "ERC721.ownerOf",
      "offset": [
        903,
        929
      ],
      "op": "CALLVALUE",
      "path": "16"
    },
    "1587": {
      "fn": "ERC721.ownerOf",
      "offset": [
        903,
        929
      ],
      "op": "DUP1",
      "path": "16"
    },
    "1588": {
      "fn": "ERC721.ownerOf",
      "offset": [
        903,
        929
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "1589": {
      "fn": "ERC721.ownerOf",
      "offset": [
        903,
        929
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x63D"
    },
    "1592": {
      "fn": "ERC721.ownerOf",
      "offset": [
        903,
        929
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "1593": {
      "fn": "ERC721.ownerOf",
      "offset": [
        903,
        929
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "1595": {
      "fn": "ERC721.ownerOf",
      "offset": [
        903,
        929
      ],
      "op": "DUP1",
      "path": "16"
    },
    "1596": {
      "fn": "ERC721.ownerOf",
      "offset": [
        903,
        929
      ],
      "op": "REVERT",
      "path": "16"
    },
    "1597": {
      "fn": "ERC721.ownerOf",
      "offset": [
        903,
        929
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1598": {
      "fn": "ERC721.ownerOf",
      "offset": [
        903,
        929
      ],
      "op": "POP",
      "path": "16"
    },
    "1599": {
      "fn": "ERC721.ownerOf",
      "offset": [
        903,
        929
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x3D0"
    },
    "1602": {
      "fn": "ERC721.ownerOf",
      "offset": [
        903,
        929
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1598"
    },
    "1605": {
      "fn": "ERC721.ownerOf",
      "jump": "i",
      "offset": [
        903,
        929
      ],
      "op": "JUMP",
      "path": "16"
    },
    "1606": {
      "fn": "CryptidToken.lastMintAddress",
      "offset": [
        7433,
        7537
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1607": {
      "fn": "CryptidToken.lastMintAddress",
      "offset": [
        7433,
        7537
      ],
      "op": "CALLVALUE",
      "path": "16"
    },
    "1608": {
      "fn": "CryptidToken.lastMintAddress",
      "offset": [
        7433,
        7537
      ],
      "op": "DUP1",
      "path": "16"
    },
    "1609": {
      "fn": "CryptidToken.lastMintAddress",
      "offset": [
        7433,
        7537
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "1610": {
      "fn": "CryptidToken.lastMintAddress",
      "offset": [
        7433,
        7537
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x652"
    },
    "1613": {
      "fn": "CryptidToken.lastMintAddress",
      "offset": [
        7433,
        7537
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "1614": {
      "fn": "CryptidToken.lastMintAddress",
      "offset": [
        7433,
        7537
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "1616": {
      "fn": "CryptidToken.lastMintAddress",
      "offset": [
        7433,
        7537
      ],
      "op": "DUP1",
      "path": "16"
    },
    "1617": {
      "fn": "CryptidToken.lastMintAddress",
      "offset": [
        7433,
        7537
      ],
      "op": "REVERT",
      "path": "16"
    },
    "1618": {
      "fn": "CryptidToken.lastMintAddress",
      "offset": [
        7433,
        7537
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1619": {
      "fn": "CryptidToken.lastMintAddress",
      "offset": [
        7433,
        7537
      ],
      "op": "POP",
      "path": "16"
    },
    "1620": {
      "fn": "CryptidToken.lastMintAddress",
      "offset": [
        7433,
        7537
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x3FD"
    },
    "1623": {
      "fn": "CryptidToken.lastMintAddress",
      "offset": [
        7433,
        7537
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1626"
    },
    "1626": {
      "fn": "CryptidToken.lastMintAddress",
      "jump": "i",
      "offset": [
        7433,
        7537
      ],
      "op": "JUMP",
      "path": "16"
    },
    "1627": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1914,
        2119
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1628": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1914,
        2119
      ],
      "op": "CALLVALUE",
      "path": "3"
    },
    "1629": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1914,
        2119
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1630": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1914,
        2119
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "1631": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1914,
        2119
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x667"
    },
    "1634": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1914,
        2119
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "1635": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1914,
        2119
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "1637": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1914,
        2119
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1638": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1914,
        2119
      ],
      "op": "REVERT",
      "path": "3"
    },
    "1639": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1914,
        2119
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1640": {
      "op": "POP"
    },
    "1641": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1914,
        2119
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x42B"
    },
    "1644": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1914,
        2119
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x676"
    },
    "1647": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1914,
        2119
      ],
      "op": "CALLDATASIZE",
      "path": "3"
    },
    "1648": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1914,
        2119
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "1650": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1914,
        2119
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x31A2"
    },
    "1653": {
      "fn": "ERC721.balanceOf",
      "jump": "i",
      "offset": [
        1914,
        2119
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1654": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1914,
        2119
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1655": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1914,
        2119
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1633"
    },
    "1658": {
      "fn": "ERC721.balanceOf",
      "jump": "i",
      "offset": [
        1914,
        2119
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1659": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1668,
        1769
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1660": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1668,
        1769
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "1661": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1668,
        1769
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1662": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1668,
        1769
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1663": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1668,
        1769
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x687"
    },
    "1666": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1668,
        1769
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1667": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1668,
        1769
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1669": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1668,
        1769
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1670": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1668,
        1769
      ],
      "op": "REVERT",
      "path": "0"
    },
    "1671": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1668,
        1769
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1672": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1668,
        1769
      ],
      "op": "POP",
      "path": "0"
    },
    "1673": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1668,
        1769
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x459"
    },
    "1676": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1668,
        1769
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x16BA"
    },
    "1679": {
      "fn": "Ownable.renounceOwnership",
      "jump": "i",
      "offset": [
        1668,
        1769
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1680": {
      "offset": [
        1617,
        1647
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1681": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1617,
        1647
      ],
      "op": "CALLVALUE",
      "path": "16"
    },
    "1682": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1617,
        1647
      ],
      "op": "DUP1",
      "path": "16"
    },
    "1683": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1617,
        1647
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "1684": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1617,
        1647
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x69C"
    },
    "1687": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1617,
        1647
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "1688": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1617,
        1647
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "1690": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1617,
        1647
      ],
      "op": "DUP1",
      "path": "16"
    },
    "1691": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1617,
        1647
      ],
      "op": "REVERT",
      "path": "16"
    },
    "1692": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1617,
        1647
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1693": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1617,
        1647
      ],
      "op": "POP",
      "path": "16"
    },
    "1694": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1617,
        1647
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x42B"
    },
    "1697": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1617,
        1647
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x16"
    },
    "1699": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1617,
        1647
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "1700": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1617,
        1647
      ],
      "op": "DUP2",
      "path": "16"
    },
    "1701": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1617,
        1647
      ],
      "op": "JUMP",
      "path": "16"
    },
    "1702": {
      "fn": "CryptidToken.setPublicSalePrice",
      "offset": [
        5977,
        6089
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1703": {
      "fn": "CryptidToken.setPublicSalePrice",
      "offset": [
        5977,
        6089
      ],
      "op": "CALLVALUE",
      "path": "16"
    },
    "1704": {
      "fn": "CryptidToken.setPublicSalePrice",
      "offset": [
        5977,
        6089
      ],
      "op": "DUP1",
      "path": "16"
    },
    "1705": {
      "fn": "CryptidToken.setPublicSalePrice",
      "offset": [
        5977,
        6089
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "1706": {
      "fn": "CryptidToken.setPublicSalePrice",
      "offset": [
        5977,
        6089
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x6B2"
    },
    "1709": {
      "fn": "CryptidToken.setPublicSalePrice",
      "offset": [
        5977,
        6089
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "1710": {
      "fn": "CryptidToken.setPublicSalePrice",
      "offset": [
        5977,
        6089
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "1712": {
      "fn": "CryptidToken.setPublicSalePrice",
      "offset": [
        5977,
        6089
      ],
      "op": "DUP1",
      "path": "16"
    },
    "1713": {
      "fn": "CryptidToken.setPublicSalePrice",
      "offset": [
        5977,
        6089
      ],
      "op": "REVERT",
      "path": "16"
    },
    "1714": {
      "fn": "CryptidToken.setPublicSalePrice",
      "offset": [
        5977,
        6089
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1715": {
      "op": "POP"
    },
    "1716": {
      "fn": "CryptidToken.setPublicSalePrice",
      "offset": [
        5977,
        6089
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x459"
    },
    "1719": {
      "fn": "CryptidToken.setPublicSalePrice",
      "offset": [
        5977,
        6089
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x6C1"
    },
    "1722": {
      "fn": "CryptidToken.setPublicSalePrice",
      "offset": [
        5977,
        6089
      ],
      "op": "CALLDATASIZE",
      "path": "16"
    },
    "1723": {
      "fn": "CryptidToken.setPublicSalePrice",
      "offset": [
        5977,
        6089
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "1725": {
      "fn": "CryptidToken.setPublicSalePrice",
      "offset": [
        5977,
        6089
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x2FBD"
    },
    "1728": {
      "fn": "CryptidToken.setPublicSalePrice",
      "jump": "i",
      "offset": [
        5977,
        6089
      ],
      "op": "JUMP",
      "path": "16"
    },
    "1729": {
      "fn": "CryptidToken.setPublicSalePrice",
      "offset": [
        5977,
        6089
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1730": {
      "fn": "CryptidToken.setPublicSalePrice",
      "offset": [
        5977,
        6089
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x16F4"
    },
    "1733": {
      "fn": "CryptidToken.setPublicSalePrice",
      "jump": "i",
      "offset": [
        5977,
        6089
      ],
      "op": "JUMP",
      "path": "16"
    },
    "1734": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        3722,
        4217
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1735": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        3722,
        4217
      ],
      "op": "CALLVALUE",
      "path": "16"
    },
    "1736": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        3722,
        4217
      ],
      "op": "DUP1",
      "path": "16"
    },
    "1737": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        3722,
        4217
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "1738": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        3722,
        4217
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x6D2"
    },
    "1741": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        3722,
        4217
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "1742": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        3722,
        4217
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "1744": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        3722,
        4217
      ],
      "op": "DUP1",
      "path": "16"
    },
    "1745": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        3722,
        4217
      ],
      "op": "REVERT",
      "path": "16"
    },
    "1746": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        3722,
        4217
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1747": {
      "op": "POP"
    },
    "1748": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        3722,
        4217
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x459"
    },
    "1751": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        3722,
        4217
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x6E1"
    },
    "1754": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        3722,
        4217
      ],
      "op": "CALLDATASIZE",
      "path": "16"
    },
    "1755": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        3722,
        4217
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "1757": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        3722,
        4217
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x3212"
    },
    "1760": {
      "fn": "CryptidToken.teamMint",
      "jump": "i",
      "offset": [
        3722,
        4217
      ],
      "op": "JUMP",
      "path": "16"
    },
    "1761": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        3722,
        4217
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1762": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        3722,
        4217
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1729"
    },
    "1765": {
      "fn": "CryptidToken.teamMint",
      "jump": "i",
      "offset": [
        3722,
        4217
      ],
      "op": "JUMP",
      "path": "16"
    },
    "1766": {
      "fn": "CryptidToken.setMerkleRoot",
      "offset": [
        5207,
        5311
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1767": {
      "fn": "CryptidToken.setMerkleRoot",
      "offset": [
        5207,
        5311
      ],
      "op": "CALLVALUE",
      "path": "16"
    },
    "1768": {
      "fn": "CryptidToken.setMerkleRoot",
      "offset": [
        5207,
        5311
      ],
      "op": "DUP1",
      "path": "16"
    },
    "1769": {
      "fn": "CryptidToken.setMerkleRoot",
      "offset": [
        5207,
        5311
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "1770": {
      "fn": "CryptidToken.setMerkleRoot",
      "offset": [
        5207,
        5311
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x6F2"
    },
    "1773": {
      "fn": "CryptidToken.setMerkleRoot",
      "offset": [
        5207,
        5311
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "1774": {
      "fn": "CryptidToken.setMerkleRoot",
      "offset": [
        5207,
        5311
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "1776": {
      "fn": "CryptidToken.setMerkleRoot",
      "offset": [
        5207,
        5311
      ],
      "op": "DUP1",
      "path": "16"
    },
    "1777": {
      "fn": "CryptidToken.setMerkleRoot",
      "offset": [
        5207,
        5311
      ],
      "op": "REVERT",
      "path": "16"
    },
    "1778": {
      "fn": "CryptidToken.setMerkleRoot",
      "offset": [
        5207,
        5311
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1779": {
      "op": "POP"
    },
    "1780": {
      "fn": "CryptidToken.setMerkleRoot",
      "offset": [
        5207,
        5311
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x459"
    },
    "1783": {
      "fn": "CryptidToken.setMerkleRoot",
      "offset": [
        5207,
        5311
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x701"
    },
    "1786": {
      "fn": "CryptidToken.setMerkleRoot",
      "offset": [
        5207,
        5311
      ],
      "op": "CALLDATASIZE",
      "path": "16"
    },
    "1787": {
      "fn": "CryptidToken.setMerkleRoot",
      "offset": [
        5207,
        5311
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "1789": {
      "fn": "CryptidToken.setMerkleRoot",
      "offset": [
        5207,
        5311
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x2FBD"
    },
    "1792": {
      "fn": "CryptidToken.setMerkleRoot",
      "jump": "i",
      "offset": [
        5207,
        5311
      ],
      "op": "JUMP",
      "path": "16"
    },
    "1793": {
      "fn": "CryptidToken.setMerkleRoot",
      "offset": [
        5207,
        5311
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1794": {
      "fn": "CryptidToken.setMerkleRoot",
      "offset": [
        5207,
        5311
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1888"
    },
    "1797": {
      "fn": "CryptidToken.setMerkleRoot",
      "jump": "i",
      "offset": [
        5207,
        5311
      ],
      "op": "JUMP",
      "path": "16"
    },
    "1798": {
      "fn": "CryptidToken.freezeProvenanceHash",
      "offset": [
        6514,
        6774
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1799": {
      "fn": "CryptidToken.freezeProvenanceHash",
      "offset": [
        6514,
        6774
      ],
      "op": "CALLVALUE",
      "path": "16"
    },
    "1800": {
      "fn": "CryptidToken.freezeProvenanceHash",
      "offset": [
        6514,
        6774
      ],
      "op": "DUP1",
      "path": "16"
    },
    "1801": {
      "fn": "CryptidToken.freezeProvenanceHash",
      "offset": [
        6514,
        6774
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "1802": {
      "fn": "CryptidToken.freezeProvenanceHash",
      "offset": [
        6514,
        6774
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x712"
    },
    "1805": {
      "fn": "CryptidToken.freezeProvenanceHash",
      "offset": [
        6514,
        6774
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "1806": {
      "fn": "CryptidToken.freezeProvenanceHash",
      "offset": [
        6514,
        6774
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "1808": {
      "fn": "CryptidToken.freezeProvenanceHash",
      "offset": [
        6514,
        6774
      ],
      "op": "DUP1",
      "path": "16"
    },
    "1809": {
      "fn": "CryptidToken.freezeProvenanceHash",
      "offset": [
        6514,
        6774
      ],
      "op": "REVERT",
      "path": "16"
    },
    "1810": {
      "fn": "CryptidToken.freezeProvenanceHash",
      "offset": [
        6514,
        6774
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1811": {
      "fn": "CryptidToken.freezeProvenanceHash",
      "offset": [
        6514,
        6774
      ],
      "op": "POP",
      "path": "16"
    },
    "1812": {
      "fn": "CryptidToken.freezeProvenanceHash",
      "offset": [
        6514,
        6774
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x459"
    },
    "1815": {
      "fn": "CryptidToken.freezeProvenanceHash",
      "offset": [
        6514,
        6774
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x18BD"
    },
    "1818": {
      "fn": "CryptidToken.freezeProvenanceHash",
      "jump": "i",
      "offset": [
        6514,
        6774
      ],
      "op": "JUMP",
      "path": "16"
    },
    "1819": {
      "fn": "CryptidToken.pause",
      "offset": [
        4916,
        4977
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1820": {
      "fn": "CryptidToken.pause",
      "offset": [
        4916,
        4977
      ],
      "op": "CALLVALUE",
      "path": "16"
    },
    "1821": {
      "fn": "CryptidToken.pause",
      "offset": [
        4916,
        4977
      ],
      "op": "DUP1",
      "path": "16"
    },
    "1822": {
      "fn": "CryptidToken.pause",
      "offset": [
        4916,
        4977
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "1823": {
      "fn": "CryptidToken.pause",
      "offset": [
        4916,
        4977
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x727"
    },
    "1826": {
      "fn": "CryptidToken.pause",
      "offset": [
        4916,
        4977
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "1827": {
      "fn": "CryptidToken.pause",
      "offset": [
        4916,
        4977
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "1829": {
      "fn": "CryptidToken.pause",
      "offset": [
        4916,
        4977
      ],
      "op": "DUP1",
      "path": "16"
    },
    "1830": {
      "fn": "CryptidToken.pause",
      "offset": [
        4916,
        4977
      ],
      "op": "REVERT",
      "path": "16"
    },
    "1831": {
      "fn": "CryptidToken.pause",
      "offset": [
        4916,
        4977
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1832": {
      "fn": "CryptidToken.pause",
      "offset": [
        4916,
        4977
      ],
      "op": "POP",
      "path": "16"
    },
    "1833": {
      "fn": "CryptidToken.pause",
      "offset": [
        4916,
        4977
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x459"
    },
    "1836": {
      "fn": "CryptidToken.pause",
      "offset": [
        4916,
        4977
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x19C2"
    },
    "1839": {
      "fn": "CryptidToken.pause",
      "jump": "i",
      "offset": [
        4916,
        4977
      ],
      "op": "JUMP",
      "path": "16"
    },
    "1840": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        4252,
        4888
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1841": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        4252,
        4888
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x459"
    },
    "1844": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        4252,
        4888
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x73E"
    },
    "1847": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        4252,
        4888
      ],
      "op": "CALLDATASIZE",
      "path": "16"
    },
    "1848": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        4252,
        4888
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "1850": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        4252,
        4888
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x3212"
    },
    "1853": {
      "fn": "CryptidToken.publicMint",
      "jump": "i",
      "offset": [
        4252,
        4888
      ],
      "op": "JUMP",
      "path": "16"
    },
    "1854": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        4252,
        4888
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1855": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        4252,
        4888
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x19FA"
    },
    "1858": {
      "fn": "CryptidToken.publicMint",
      "jump": "i",
      "offset": [
        4252,
        4888
      ],
      "op": "JUMP",
      "path": "16"
    },
    "1859": {
      "fn": "Ownable.owner",
      "offset": [
        1036,
        1121
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1860": {
      "fn": "Ownable.owner",
      "offset": [
        1036,
        1121
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "1861": {
      "fn": "Ownable.owner",
      "offset": [
        1036,
        1121
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1862": {
      "fn": "Ownable.owner",
      "offset": [
        1036,
        1121
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1863": {
      "fn": "Ownable.owner",
      "offset": [
        1036,
        1121
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x74F"
    },
    "1866": {
      "fn": "Ownable.owner",
      "offset": [
        1036,
        1121
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1867": {
      "fn": "Ownable.owner",
      "offset": [
        1036,
        1121
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1869": {
      "fn": "Ownable.owner",
      "offset": [
        1036,
        1121
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1870": {
      "fn": "Ownable.owner",
      "offset": [
        1036,
        1121
      ],
      "op": "REVERT",
      "path": "0"
    },
    "1871": {
      "fn": "Ownable.owner",
      "offset": [
        1036,
        1121
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1872": {
      "op": "POP"
    },
    "1873": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 1,
      "value": "0xA"
    },
    "1875": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1876": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x100"
    },
    "1879": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1880": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "DIV",
      "path": "0"
    },
    "1881": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1883": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1885": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1887": {
      "op": "SHL"
    },
    "1888": {
      "op": "SUB"
    },
    "1889": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "AND",
      "path": "0"
    },
    "1890": {
      "fn": "Ownable.owner",
      "offset": [
        1036,
        1121
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3FD"
    },
    "1893": {
      "fn": "Ownable.owner",
      "offset": [
        1036,
        1121
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1894": {
      "fn": "ERC721.symbol",
      "offset": [
        2635,
        2737
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1895": {
      "fn": "ERC721.symbol",
      "offset": [
        2635,
        2737
      ],
      "op": "CALLVALUE",
      "path": "3"
    },
    "1896": {
      "fn": "ERC721.symbol",
      "offset": [
        2635,
        2737
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1897": {
      "fn": "ERC721.symbol",
      "offset": [
        2635,
        2737
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "1898": {
      "fn": "ERC721.symbol",
      "offset": [
        2635,
        2737
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x772"
    },
    "1901": {
      "fn": "ERC721.symbol",
      "offset": [
        2635,
        2737
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "1902": {
      "fn": "ERC721.symbol",
      "offset": [
        2635,
        2737
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "1904": {
      "fn": "ERC721.symbol",
      "offset": [
        2635,
        2737
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1905": {
      "fn": "ERC721.symbol",
      "offset": [
        2635,
        2737
      ],
      "op": "REVERT",
      "path": "3"
    },
    "1906": {
      "fn": "ERC721.symbol",
      "offset": [
        2635,
        2737
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1907": {
      "fn": "ERC721.symbol",
      "offset": [
        2635,
        2737
      ],
      "op": "POP",
      "path": "3"
    },
    "1908": {
      "fn": "ERC721.symbol",
      "offset": [
        2635,
        2737
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x3D0"
    },
    "1911": {
      "fn": "ERC721.symbol",
      "offset": [
        2635,
        2737
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1C5C"
    },
    "1914": {
      "fn": "ERC721.symbol",
      "jump": "i",
      "offset": [
        2635,
        2737
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1915": {
      "offset": [
        1054,
        1094
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1916": {
      "fn": "ERC721.symbol",
      "offset": [
        1054,
        1094
      ],
      "op": "CALLVALUE",
      "path": "16"
    },
    "1917": {
      "fn": "ERC721.symbol",
      "offset": [
        1054,
        1094
      ],
      "op": "DUP1",
      "path": "16"
    },
    "1918": {
      "fn": "ERC721.symbol",
      "offset": [
        1054,
        1094
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "1919": {
      "fn": "ERC721.symbol",
      "offset": [
        1054,
        1094
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x787"
    },
    "1922": {
      "fn": "ERC721.symbol",
      "offset": [
        1054,
        1094
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "1923": {
      "fn": "ERC721.symbol",
      "offset": [
        1054,
        1094
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "1925": {
      "fn": "ERC721.symbol",
      "offset": [
        1054,
        1094
      ],
      "op": "DUP1",
      "path": "16"
    },
    "1926": {
      "fn": "ERC721.symbol",
      "offset": [
        1054,
        1094
      ],
      "op": "REVERT",
      "path": "16"
    },
    "1927": {
      "fn": "ERC721.symbol",
      "offset": [
        1054,
        1094
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1928": {
      "op": "POP"
    },
    "1929": {
      "offset": [
        1054,
        1094
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x11"
    },
    "1931": {
      "fn": "ERC721.symbol",
      "offset": [
        1054,
        1094
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "1932": {
      "fn": "ERC721.symbol",
      "offset": [
        1054,
        1094
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x3A6"
    },
    "1935": {
      "fn": "ERC721.symbol",
      "offset": [
        1054,
        1094
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "1936": {
      "fn": "ERC721.symbol",
      "offset": [
        1054,
        1094
      ],
      "op": "PUSH3",
      "path": "16",
      "value": "0x10000"
    },
    "1940": {
      "fn": "ERC721.symbol",
      "offset": [
        1054,
        1094
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "1941": {
      "fn": "ERC721.symbol",
      "offset": [
        1054,
        1094
      ],
      "op": "DIV",
      "path": "16"
    },
    "1942": {
      "fn": "ERC721.symbol",
      "offset": [
        1054,
        1094
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0xFF"
    },
    "1944": {
      "fn": "ERC721.symbol",
      "offset": [
        1054,
        1094
      ],
      "op": "AND",
      "path": "16"
    },
    "1945": {
      "fn": "ERC721.symbol",
      "offset": [
        1054,
        1094
      ],
      "op": "DUP2",
      "path": "16"
    },
    "1946": {
      "fn": "ERC721.symbol",
      "offset": [
        1054,
        1094
      ],
      "op": "JUMP",
      "path": "16"
    },
    "1947": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4268,
        4421
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1948": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4268,
        4421
      ],
      "op": "CALLVALUE",
      "path": "3"
    },
    "1949": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4268,
        4421
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1950": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4268,
        4421
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "1951": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4268,
        4421
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x7A7"
    },
    "1954": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4268,
        4421
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "1955": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4268,
        4421
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "1957": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4268,
        4421
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1958": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4268,
        4421
      ],
      "op": "REVERT",
      "path": "3"
    },
    "1959": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4268,
        4421
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1960": {
      "op": "POP"
    },
    "1961": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4268,
        4421
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x459"
    },
    "1964": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4268,
        4421
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x7B6"
    },
    "1967": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4268,
        4421
      ],
      "op": "CALLDATASIZE",
      "path": "3"
    },
    "1968": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4268,
        4421
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "1970": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4268,
        4421
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x322D"
    },
    "1973": {
      "fn": "ERC721.setApprovalForAll",
      "jump": "i",
      "offset": [
        4268,
        4421
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1974": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4268,
        4421
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1975": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4268,
        4421
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1C6B"
    },
    "1978": {
      "fn": "ERC721.setApprovalForAll",
      "jump": "i",
      "offset": [
        4268,
        4421
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1979": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        2615,
        3008
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1980": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        2615,
        3008
      ],
      "op": "CALLVALUE",
      "path": "16"
    },
    "1981": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        2615,
        3008
      ],
      "op": "DUP1",
      "path": "16"
    },
    "1982": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        2615,
        3008
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "1983": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        2615,
        3008
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x7C7"
    },
    "1986": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        2615,
        3008
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "1987": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        2615,
        3008
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "1989": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        2615,
        3008
      ],
      "op": "DUP1",
      "path": "16"
    },
    "1990": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        2615,
        3008
      ],
      "op": "REVERT",
      "path": "16"
    },
    "1991": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        2615,
        3008
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1992": {
      "op": "POP"
    },
    "1993": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        2615,
        3008
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x459"
    },
    "1996": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        2615,
        3008
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x7D6"
    },
    "1999": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        2615,
        3008
      ],
      "op": "CALLDATASIZE",
      "path": "16"
    },
    "2000": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        2615,
        3008
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "2002": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        2615,
        3008
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x3269"
    },
    "2005": {
      "fn": "CryptidToken.airdropCryptid",
      "jump": "i",
      "offset": [
        2615,
        3008
      ],
      "op": "JUMP",
      "path": "16"
    },
    "2006": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        2615,
        3008
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "2007": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        2615,
        3008
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1C76"
    },
    "2010": {
      "fn": "CryptidToken.airdropCryptid",
      "jump": "i",
      "offset": [
        2615,
        3008
      ],
      "op": "JUMP",
      "path": "16"
    },
    "2011": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5352,
        5672
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "2012": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5352,
        5672
      ],
      "op": "CALLVALUE",
      "path": "3"
    },
    "2013": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5352,
        5672
      ],
      "op": "DUP1",
      "path": "3"
    },
    "2014": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5352,
        5672
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "2015": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5352,
        5672
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x7E7"
    },
    "2018": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5352,
        5672
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "2019": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5352,
        5672
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "2021": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5352,
        5672
      ],
      "op": "DUP1",
      "path": "3"
    },
    "2022": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5352,
        5672
      ],
      "op": "REVERT",
      "path": "3"
    },
    "2023": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5352,
        5672
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "2024": {
      "op": "POP"
    },
    "2025": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5352,
        5672
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x459"
    },
    "2028": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5352,
        5672
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x7F6"
    },
    "2031": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5352,
        5672
      ],
      "op": "CALLDATASIZE",
      "path": "3"
    },
    "2032": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5352,
        5672
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "2034": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5352,
        5672
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x329C"
    },
    "2037": {
      "fn": "ERC721.safeTransferFrom",
      "jump": "i",
      "offset": [
        5352,
        5672
      ],
      "op": "JUMP",
      "path": "3"
    },
    "2038": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5352,
        5672
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "2039": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5352,
        5672
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1D5A"
    },
    "2042": {
      "fn": "ERC721.safeTransferFrom",
      "jump": "i",
      "offset": [
        5352,
        5672
      ],
      "op": "JUMP",
      "path": "3"
    },
    "2043": {
      "fn": "CryptidToken.overrideClaim",
      "offset": [
        5099,
        5201
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "2044": {
      "fn": "CryptidToken.overrideClaim",
      "offset": [
        5099,
        5201
      ],
      "op": "CALLVALUE",
      "path": "16"
    },
    "2045": {
      "fn": "CryptidToken.overrideClaim",
      "offset": [
        5099,
        5201
      ],
      "op": "DUP1",
      "path": "16"
    },
    "2046": {
      "fn": "CryptidToken.overrideClaim",
      "offset": [
        5099,
        5201
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "2047": {
      "fn": "CryptidToken.overrideClaim",
      "offset": [
        5099,
        5201
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x807"
    },
    "2050": {
      "fn": "CryptidToken.overrideClaim",
      "offset": [
        5099,
        5201
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "2051": {
      "fn": "CryptidToken.overrideClaim",
      "offset": [
        5099,
        5201
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "2053": {
      "fn": "CryptidToken.overrideClaim",
      "offset": [
        5099,
        5201
      ],
      "op": "DUP1",
      "path": "16"
    },
    "2054": {
      "fn": "CryptidToken.overrideClaim",
      "offset": [
        5099,
        5201
      ],
      "op": "REVERT",
      "path": "16"
    },
    "2055": {
      "fn": "CryptidToken.overrideClaim",
      "offset": [
        5099,
        5201
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "2056": {
      "op": "POP"
    },
    "2057": {
      "fn": "CryptidToken.overrideClaim",
      "offset": [
        5099,
        5201
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x459"
    },
    "2060": {
      "fn": "CryptidToken.overrideClaim",
      "offset": [
        5099,
        5201
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x816"
    },
    "2063": {
      "fn": "CryptidToken.overrideClaim",
      "offset": [
        5099,
        5201
      ],
      "op": "CALLDATASIZE",
      "path": "16"
    },
    "2064": {
      "fn": "CryptidToken.overrideClaim",
      "offset": [
        5099,
        5201
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "2066": {
      "fn": "CryptidToken.overrideClaim",
      "offset": [
        5099,
        5201
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x31A2"
    },
    "2069": {
      "fn": "CryptidToken.overrideClaim",
      "jump": "i",
      "offset": [
        5099,
        5201
      ],
      "op": "JUMP",
      "path": "16"
    },
    "2070": {
      "fn": "CryptidToken.overrideClaim",
      "offset": [
        5099,
        5201
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "2071": {
      "fn": "CryptidToken.overrideClaim",
      "offset": [
        5099,
        5201
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1D92"
    },
    "2074": {
      "fn": "CryptidToken.overrideClaim",
      "jump": "i",
      "offset": [
        5099,
        5201
      ],
      "op": "JUMP",
      "path": "16"
    },
    "2075": {
      "offset": [
        1707,
        1725
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "2076": {
      "fn": "CryptidToken.overrideClaim",
      "offset": [
        1707,
        1725
      ],
      "op": "CALLVALUE",
      "path": "16"
    },
    "2077": {
      "fn": "CryptidToken.overrideClaim",
      "offset": [
        1707,
        1725
      ],
      "op": "DUP1",
      "path": "16"
    },
    "2078": {
      "fn": "CryptidToken.overrideClaim",
      "offset": [
        1707,
        1725
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "2079": {
      "fn": "CryptidToken.overrideClaim",
      "offset": [
        1707,
        1725
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x827"
    },
    "2082": {
      "fn": "CryptidToken.overrideClaim",
      "offset": [
        1707,
        1725
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "2083": {
      "fn": "CryptidToken.overrideClaim",
      "offset": [
        1707,
        1725
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "2085": {
      "fn": "CryptidToken.overrideClaim",
      "offset": [
        1707,
        1725
      ],
      "op": "DUP1",
      "path": "16"
    },
    "2086": {
      "fn": "CryptidToken.overrideClaim",
      "offset": [
        1707,
        1725
      ],
      "op": "REVERT",
      "path": "16"
    },
    "2087": {
      "fn": "CryptidToken.overrideClaim",
      "offset": [
        1707,
        1725
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "2088": {
      "op": "POP"
    },
    "2089": {
      "offset": [
        1707,
        1725
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x18"
    },
    "2091": {
      "fn": "CryptidToken.overrideClaim",
      "offset": [
        1707,
        1725
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "2092": {
      "fn": "CryptidToken.overrideClaim",
      "offset": [
        1707,
        1725
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x835"
    },
    "2095": {
      "fn": "CryptidToken.overrideClaim",
      "offset": [
        1707,
        1725
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "2096": {
      "fn": "CryptidToken.overrideClaim",
      "offset": [
        1707,
        1725
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0xFF"
    },
    "2098": {
      "fn": "CryptidToken.overrideClaim",
      "offset": [
        1707,
        1725
      ],
      "op": "AND",
      "path": "16"
    },
    "2099": {
      "fn": "CryptidToken.overrideClaim",
      "offset": [
        1707,
        1725
      ],
      "op": "DUP2",
      "path": "16"
    },
    "2100": {
      "fn": "CryptidToken.overrideClaim",
      "offset": [
        1707,
        1725
      ],
      "op": "JUMP",
      "path": "16"
    },
    "2101": {
      "fn": "CryptidToken.overrideClaim",
      "offset": [
        1707,
        1725
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "2102": {
      "fn": "CryptidToken.overrideClaim",
      "offset": [
        1707,
        1725
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "2104": {
      "fn": "CryptidToken.overrideClaim",
      "offset": [
        1707,
        1725
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "2105": {
      "fn": "CryptidToken.overrideClaim",
      "offset": [
        1707,
        1725
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x3B2"
    },
    "2108": {
      "fn": "CryptidToken.overrideClaim",
      "offset": [
        1707,
        1725
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "2109": {
      "fn": "CryptidToken.overrideClaim",
      "offset": [
        1707,
        1725
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "2110": {
      "fn": "CryptidToken.overrideClaim",
      "offset": [
        1707,
        1725
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x332E"
    },
    "2113": {
      "fn": "CryptidToken.overrideClaim",
      "jump": "i",
      "offset": [
        1707,
        1725
      ],
      "op": "JUMP",
      "path": "16"
    },
    "2114": {
      "offset": [
        1014,
        1048
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "2115": {
      "fn": "CryptidToken.overrideClaim",
      "offset": [
        1014,
        1048
      ],
      "op": "CALLVALUE",
      "path": "16"
    },
    "2116": {
      "fn": "CryptidToken.overrideClaim",
      "offset": [
        1014,
        1048
      ],
      "op": "DUP1",
      "path": "16"
    },
    "2117": {
      "fn": "CryptidToken.overrideClaim",
      "offset": [
        1014,
        1048
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "2118": {
      "fn": "CryptidToken.overrideClaim",
      "offset": [
        1014,
        1048
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x84E"
    },
    "2121": {
      "fn": "CryptidToken.overrideClaim",
      "offset": [
        1014,
        1048
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "2122": {
      "fn": "CryptidToken.overrideClaim",
      "offset": [
        1014,
        1048
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "2124": {
      "fn": "CryptidToken.overrideClaim",
      "offset": [
        1014,
        1048
      ],
      "op": "DUP1",
      "path": "16"
    },
    "2125": {
      "fn": "CryptidToken.overrideClaim",
      "offset": [
        1014,
        1048
      ],
      "op": "REVERT",
      "path": "16"
    },
    "2126": {
      "fn": "CryptidToken.overrideClaim",
      "offset": [
        1014,
        1048
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "2127": {
      "op": "POP"
    },
    "2128": {
      "offset": [
        1014,
        1048
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x11"
    },
    "2130": {
      "fn": "CryptidToken.overrideClaim",
      "offset": [
        1014,
        1048
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "2131": {
      "fn": "CryptidToken.overrideClaim",
      "offset": [
        1014,
        1048
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x3A6"
    },
    "2134": {
      "fn": "CryptidToken.overrideClaim",
      "offset": [
        1014,
        1048
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "2135": {
      "fn": "CryptidToken.overrideClaim",
      "offset": [
        1014,
        1048
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x100"
    },
    "2138": {
      "fn": "CryptidToken.overrideClaim",
      "offset": [
        1014,
        1048
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "2139": {
      "fn": "CryptidToken.overrideClaim",
      "offset": [
        1014,
        1048
      ],
      "op": "DIV",
      "path": "16"
    },
    "2140": {
      "fn": "CryptidToken.overrideClaim",
      "offset": [
        1014,
        1048
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0xFF"
    },
    "2142": {
      "fn": "CryptidToken.overrideClaim",
      "offset": [
        1014,
        1048
      ],
      "op": "AND",
      "path": "16"
    },
    "2143": {
      "fn": "CryptidToken.overrideClaim",
      "offset": [
        1014,
        1048
      ],
      "op": "DUP2",
      "path": "16"
    },
    "2144": {
      "fn": "CryptidToken.overrideClaim",
      "offset": [
        1014,
        1048
      ],
      "op": "JUMP",
      "path": "16"
    },
    "2145": {
      "offset": [
        1492,
        1521
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "2146": {
      "fn": "CryptidToken.overrideClaim",
      "offset": [
        1492,
        1521
      ],
      "op": "CALLVALUE",
      "path": "16"
    },
    "2147": {
      "fn": "CryptidToken.overrideClaim",
      "offset": [
        1492,
        1521
      ],
      "op": "DUP1",
      "path": "16"
    },
    "2148": {
      "fn": "CryptidToken.overrideClaim",
      "offset": [
        1492,
        1521
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "2149": {
      "fn": "CryptidToken.overrideClaim",
      "offset": [
        1492,
        1521
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x86D"
    },
    "2152": {
      "fn": "CryptidToken.overrideClaim",
      "offset": [
        1492,
        1521
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "2153": {
      "fn": "CryptidToken.overrideClaim",
      "offset": [
        1492,
        1521
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "2155": {
      "fn": "CryptidToken.overrideClaim",
      "offset": [
        1492,
        1521
      ],
      "op": "DUP1",
      "path": "16"
    },
    "2156": {
      "fn": "CryptidToken.overrideClaim",
      "offset": [
        1492,
        1521
      ],
      "op": "REVERT",
      "path": "16"
    },
    "2157": {
      "fn": "CryptidToken.overrideClaim",
      "offset": [
        1492,
        1521
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "2158": {
      "fn": "CryptidToken.overrideClaim",
      "offset": [
        1492,
        1521
      ],
      "op": "POP",
      "path": "16"
    },
    "2159": {
      "fn": "CryptidToken.overrideClaim",
      "offset": [
        1492,
        1521
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x42B"
    },
    "2162": {
      "fn": "CryptidToken.overrideClaim",
      "offset": [
        1492,
        1521
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x14"
    },
    "2164": {
      "fn": "CryptidToken.overrideClaim",
      "offset": [
        1492,
        1521
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "2165": {
      "fn": "CryptidToken.overrideClaim",
      "offset": [
        1492,
        1521
      ],
      "op": "DUP2",
      "path": "16"
    },
    "2166": {
      "fn": "CryptidToken.overrideClaim",
      "offset": [
        1492,
        1521
      ],
      "op": "JUMP",
      "path": "16"
    },
    "2167": {
      "offset": [
        935,
        972
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "2168": {
      "fn": "CryptidToken.overrideClaim",
      "offset": [
        935,
        972
      ],
      "op": "CALLVALUE",
      "path": "16"
    },
    "2169": {
      "fn": "CryptidToken.overrideClaim",
      "offset": [
        935,
        972
      ],
      "op": "DUP1",
      "path": "16"
    },
    "2170": {
      "fn": "CryptidToken.overrideClaim",
      "offset": [
        935,
        972
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "2171": {
      "fn": "CryptidToken.overrideClaim",
      "offset": [
        935,
        972
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x883"
    },
    "2174": {
      "fn": "CryptidToken.overrideClaim",
      "offset": [
        935,
        972
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "2175": {
      "fn": "CryptidToken.overrideClaim",
      "offset": [
        935,
        972
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "2177": {
      "fn": "CryptidToken.overrideClaim",
      "offset": [
        935,
        972
      ],
      "op": "DUP1",
      "path": "16"
    },
    "2178": {
      "fn": "CryptidToken.overrideClaim",
      "offset": [
        935,
        972
      ],
      "op": "REVERT",
      "path": "16"
    },
    "2179": {
      "fn": "CryptidToken.overrideClaim",
      "offset": [
        935,
        972
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "2180": {
      "fn": "CryptidToken.overrideClaim",
      "offset": [
        935,
        972
      ],
      "op": "POP",
      "path": "16"
    },
    "2181": {
      "fn": "CryptidToken.overrideClaim",
      "offset": [
        935,
        972
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x3D0"
    },
    "2184": {
      "fn": "CryptidToken.overrideClaim",
      "offset": [
        935,
        972
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1DE6"
    },
    "2187": {
      "fn": "CryptidToken.overrideClaim",
      "jump": "i",
      "offset": [
        935,
        972
      ],
      "op": "JUMP",
      "path": "16"
    },
    "2188": {
      "offset": [
        869,
        897
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "2189": {
      "fn": "CryptidToken.overrideClaim",
      "offset": [
        869,
        897
      ],
      "op": "CALLVALUE",
      "path": "16"
    },
    "2190": {
      "fn": "CryptidToken.overrideClaim",
      "offset": [
        869,
        897
      ],
      "op": "DUP1",
      "path": "16"
    },
    "2191": {
      "fn": "CryptidToken.overrideClaim",
      "offset": [
        869,
        897
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "2192": {
      "fn": "CryptidToken.overrideClaim",
      "offset": [
        869,
        897
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x898"
    },
    "2195": {
      "fn": "CryptidToken.overrideClaim",
      "offset": [
        869,
        897
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "2196": {
      "fn": "CryptidToken.overrideClaim",
      "offset": [
        869,
        897
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "2198": {
      "fn": "CryptidToken.overrideClaim",
      "offset": [
        869,
        897
      ],
      "op": "DUP1",
      "path": "16"
    },
    "2199": {
      "fn": "CryptidToken.overrideClaim",
      "offset": [
        869,
        897
      ],
      "op": "REVERT",
      "path": "16"
    },
    "2200": {
      "fn": "CryptidToken.overrideClaim",
      "offset": [
        869,
        897
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "2201": {
      "fn": "CryptidToken.overrideClaim",
      "offset": [
        869,
        897
      ],
      "op": "POP",
      "path": "16"
    },
    "2202": {
      "fn": "CryptidToken.overrideClaim",
      "offset": [
        869,
        897
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x3D0"
    },
    "2205": {
      "fn": "CryptidToken.overrideClaim",
      "offset": [
        869,
        897
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1DF3"
    },
    "2208": {
      "fn": "CryptidToken.overrideClaim",
      "jump": "i",
      "offset": [
        869,
        897
      ],
      "op": "JUMP",
      "path": "16"
    },
    "2209": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        7761,
        8027
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "2210": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        7761,
        8027
      ],
      "op": "CALLVALUE",
      "path": "16"
    },
    "2211": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        7761,
        8027
      ],
      "op": "DUP1",
      "path": "16"
    },
    "2212": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        7761,
        8027
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "2213": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        7761,
        8027
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x8AD"
    },
    "2216": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        7761,
        8027
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "2217": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        7761,
        8027
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "2219": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        7761,
        8027
      ],
      "op": "DUP1",
      "path": "16"
    },
    "2220": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        7761,
        8027
      ],
      "op": "REVERT",
      "path": "16"
    },
    "2221": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        7761,
        8027
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "2222": {
      "op": "POP"
    },
    "2223": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        7761,
        8027
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x3D0"
    },
    "2226": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        7761,
        8027
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x8BC"
    },
    "2229": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        7761,
        8027
      ],
      "op": "CALLDATASIZE",
      "path": "16"
    },
    "2230": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        7761,
        8027
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "2232": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        7761,
        8027
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x2FBD"
    },
    "2235": {
      "fn": "CryptidToken.tokenURI",
      "jump": "i",
      "offset": [
        7761,
        8027
      ],
      "op": "JUMP",
      "path": "16"
    },
    "2236": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        7761,
        8027
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "2237": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        7761,
        8027
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1E00"
    },
    "2240": {
      "fn": "CryptidToken.tokenURI",
      "jump": "i",
      "offset": [
        7761,
        8027
      ],
      "op": "JUMP",
      "path": "16"
    },
    "2241": {
      "offset": [
        1401,
        1440
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "2242": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        1401,
        1440
      ],
      "op": "CALLVALUE",
      "path": "16"
    },
    "2243": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        1401,
        1440
      ],
      "op": "DUP1",
      "path": "16"
    },
    "2244": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        1401,
        1440
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "2245": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        1401,
        1440
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x8CD"
    },
    "2248": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        1401,
        1440
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "2249": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        1401,
        1440
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "2251": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        1401,
        1440
      ],
      "op": "DUP1",
      "path": "16"
    },
    "2252": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        1401,
        1440
      ],
      "op": "REVERT",
      "path": "16"
    },
    "2253": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        1401,
        1440
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "2254": {
      "op": "POP"
    },
    "2255": {
      "offset": [
        1401,
        1440
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x3A6"
    },
    "2258": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        1401,
        1440
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x8DC"
    },
    "2261": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        1401,
        1440
      ],
      "op": "CALLDATASIZE",
      "path": "16"
    },
    "2262": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        1401,
        1440
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "2264": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        1401,
        1440
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x31A2"
    },
    "2267": {
      "fn": "CryptidToken.tokenURI",
      "jump": "i",
      "offset": [
        1401,
        1440
      ],
      "op": "JUMP",
      "path": "16"
    },
    "2268": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        1401,
        1440
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "2269": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        1401,
        1440
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x13"
    },
    "2271": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        1401,
        1440
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "2273": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        1401,
        1440
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "2274": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        1401,
        1440
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "2276": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        1401,
        1440
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "2277": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        1401,
        1440
      ],
      "op": "DUP2",
      "path": "16"
    },
    "2278": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        1401,
        1440
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "2279": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        1401,
        1440
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "2281": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        1401,
        1440
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "2282": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        1401,
        1440
      ],
      "op": "KECCAK256",
      "path": "16"
    },
    "2283": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        1401,
        1440
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "2284": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        1401,
        1440
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0xFF"
    },
    "2286": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        1401,
        1440
      ],
      "op": "AND",
      "path": "16"
    },
    "2287": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        1401,
        1440
      ],
      "op": "DUP2",
      "path": "16"
    },
    "2288": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        1401,
        1440
      ],
      "op": "JUMP",
      "path": "16"
    },
    "2289": {
      "fn": "CryptidToken.setStage",
      "offset": [
        7114,
        7398
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "2290": {
      "fn": "CryptidToken.setStage",
      "offset": [
        7114,
        7398
      ],
      "op": "CALLVALUE",
      "path": "16"
    },
    "2291": {
      "fn": "CryptidToken.setStage",
      "offset": [
        7114,
        7398
      ],
      "op": "DUP1",
      "path": "16"
    },
    "2292": {
      "fn": "CryptidToken.setStage",
      "offset": [
        7114,
        7398
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "2293": {
      "fn": "CryptidToken.setStage",
      "offset": [
        7114,
        7398
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x8FD"
    },
    "2296": {
      "fn": "CryptidToken.setStage",
      "offset": [
        7114,
        7398
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "2297": {
      "fn": "CryptidToken.setStage",
      "offset": [
        7114,
        7398
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "2299": {
      "fn": "CryptidToken.setStage",
      "offset": [
        7114,
        7398
      ],
      "op": "DUP1",
      "path": "16"
    },
    "2300": {
      "fn": "CryptidToken.setStage",
      "offset": [
        7114,
        7398
      ],
      "op": "REVERT",
      "path": "16"
    },
    "2301": {
      "fn": "CryptidToken.setStage",
      "offset": [
        7114,
        7398
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "2302": {
      "op": "POP"
    },
    "2303": {
      "fn": "CryptidToken.setStage",
      "offset": [
        7114,
        7398
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x459"
    },
    "2306": {
      "fn": "CryptidToken.setStage",
      "offset": [
        7114,
        7398
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x90C"
    },
    "2309": {
      "fn": "CryptidToken.setStage",
      "offset": [
        7114,
        7398
      ],
      "op": "CALLDATASIZE",
      "path": "16"
    },
    "2310": {
      "fn": "CryptidToken.setStage",
      "offset": [
        7114,
        7398
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "2312": {
      "fn": "CryptidToken.setStage",
      "offset": [
        7114,
        7398
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x3356"
    },
    "2315": {
      "fn": "CryptidToken.setStage",
      "jump": "i",
      "offset": [
        7114,
        7398
      ],
      "op": "JUMP",
      "path": "16"
    },
    "2316": {
      "fn": "CryptidToken.setStage",
      "offset": [
        7114,
        7398
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "2317": {
      "fn": "CryptidToken.setStage",
      "offset": [
        7114,
        7398
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1EB4"
    },
    "2320": {
      "fn": "CryptidToken.setStage",
      "jump": "i",
      "offset": [
        7114,
        7398
      ],
      "op": "JUMP",
      "path": "16"
    },
    "2321": {
      "fn": "CryptidToken.lastMintID",
      "offset": [
        7543,
        7634
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "2322": {
      "fn": "CryptidToken.lastMintID",
      "offset": [
        7543,
        7634
      ],
      "op": "CALLVALUE",
      "path": "16"
    },
    "2323": {
      "fn": "CryptidToken.lastMintID",
      "offset": [
        7543,
        7634
      ],
      "op": "DUP1",
      "path": "16"
    },
    "2324": {
      "fn": "CryptidToken.lastMintID",
      "offset": [
        7543,
        7634
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "2325": {
      "fn": "CryptidToken.lastMintID",
      "offset": [
        7543,
        7634
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x91D"
    },
    "2328": {
      "fn": "CryptidToken.lastMintID",
      "offset": [
        7543,
        7634
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "2329": {
      "fn": "CryptidToken.lastMintID",
      "offset": [
        7543,
        7634
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "2331": {
      "fn": "CryptidToken.lastMintID",
      "offset": [
        7543,
        7634
      ],
      "op": "DUP1",
      "path": "16"
    },
    "2332": {
      "fn": "CryptidToken.lastMintID",
      "offset": [
        7543,
        7634
      ],
      "op": "REVERT",
      "path": "16"
    },
    "2333": {
      "fn": "CryptidToken.lastMintID",
      "offset": [
        7543,
        7634
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "2334": {
      "fn": "CryptidToken.lastMintID",
      "offset": [
        7543,
        7634
      ],
      "op": "POP",
      "path": "16"
    },
    "2335": {
      "fn": "CryptidToken.lastMintID",
      "offset": [
        7543,
        7634
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x42B"
    },
    "2338": {
      "fn": "CryptidToken.lastMintID",
      "offset": [
        7543,
        7634
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1F8E"
    },
    "2341": {
      "fn": "CryptidToken.lastMintID",
      "jump": "i",
      "offset": [
        7543,
        7634
      ],
      "op": "JUMP",
      "path": "16"
    },
    "2342": {
      "fn": "CryptidToken.setBaseExtension",
      "offset": [
        5843,
        5971
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "2343": {
      "fn": "CryptidToken.setBaseExtension",
      "offset": [
        5843,
        5971
      ],
      "op": "CALLVALUE",
      "path": "16"
    },
    "2344": {
      "fn": "CryptidToken.setBaseExtension",
      "offset": [
        5843,
        5971
      ],
      "op": "DUP1",
      "path": "16"
    },
    "2345": {
      "fn": "CryptidToken.setBaseExtension",
      "offset": [
        5843,
        5971
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "2346": {
      "fn": "CryptidToken.setBaseExtension",
      "offset": [
        5843,
        5971
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x932"
    },
    "2349": {
      "fn": "CryptidToken.setBaseExtension",
      "offset": [
        5843,
        5971
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "2350": {
      "fn": "CryptidToken.setBaseExtension",
      "offset": [
        5843,
        5971
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "2352": {
      "fn": "CryptidToken.setBaseExtension",
      "offset": [
        5843,
        5971
      ],
      "op": "DUP1",
      "path": "16"
    },
    "2353": {
      "fn": "CryptidToken.setBaseExtension",
      "offset": [
        5843,
        5971
      ],
      "op": "REVERT",
      "path": "16"
    },
    "2354": {
      "fn": "CryptidToken.setBaseExtension",
      "offset": [
        5843,
        5971
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "2355": {
      "op": "POP"
    },
    "2356": {
      "fn": "CryptidToken.setBaseExtension",
      "offset": [
        5843,
        5971
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x459"
    },
    "2359": {
      "fn": "CryptidToken.setBaseExtension",
      "offset": [
        5843,
        5971
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x941"
    },
    "2362": {
      "fn": "CryptidToken.setBaseExtension",
      "offset": [
        5843,
        5971
      ],
      "op": "CALLDATASIZE",
      "path": "16"
    },
    "2363": {
      "fn": "CryptidToken.setBaseExtension",
      "offset": [
        5843,
        5971
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "2365": {
      "fn": "CryptidToken.setBaseExtension",
      "offset": [
        5843,
        5971
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x30A8"
    },
    "2368": {
      "fn": "CryptidToken.setBaseExtension",
      "jump": "i",
      "offset": [
        5843,
        5971
      ],
      "op": "JUMP",
      "path": "16"
    },
    "2369": {
      "fn": "CryptidToken.setBaseExtension",
      "offset": [
        5843,
        5971
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "2370": {
      "fn": "CryptidToken.setBaseExtension",
      "offset": [
        5843,
        5971
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1F98"
    },
    "2373": {
      "fn": "CryptidToken.setBaseExtension",
      "jump": "i",
      "offset": [
        5843,
        5971
      ],
      "op": "JUMP",
      "path": "16"
    },
    "2374": {
      "fn": "CryptidToken.getTokensLeft",
      "offset": [
        8033,
        8145
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "2375": {
      "fn": "CryptidToken.getTokensLeft",
      "offset": [
        8033,
        8145
      ],
      "op": "CALLVALUE",
      "path": "16"
    },
    "2376": {
      "fn": "CryptidToken.getTokensLeft",
      "offset": [
        8033,
        8145
      ],
      "op": "DUP1",
      "path": "16"
    },
    "2377": {
      "fn": "CryptidToken.getTokensLeft",
      "offset": [
        8033,
        8145
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "2378": {
      "fn": "CryptidToken.getTokensLeft",
      "offset": [
        8033,
        8145
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x952"
    },
    "2381": {
      "fn": "CryptidToken.getTokensLeft",
      "offset": [
        8033,
        8145
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "2382": {
      "fn": "CryptidToken.getTokensLeft",
      "offset": [
        8033,
        8145
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "2384": {
      "fn": "CryptidToken.getTokensLeft",
      "offset": [
        8033,
        8145
      ],
      "op": "DUP1",
      "path": "16"
    },
    "2385": {
      "fn": "CryptidToken.getTokensLeft",
      "offset": [
        8033,
        8145
      ],
      "op": "REVERT",
      "path": "16"
    },
    "2386": {
      "fn": "CryptidToken.getTokensLeft",
      "offset": [
        8033,
        8145
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "2387": {
      "fn": "CryptidToken.getTokensLeft",
      "offset": [
        8033,
        8145
      ],
      "op": "POP",
      "path": "16"
    },
    "2388": {
      "fn": "CryptidToken.getTokensLeft",
      "offset": [
        8033,
        8145
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x42B"
    },
    "2391": {
      "fn": "CryptidToken.getTokensLeft",
      "offset": [
        8033,
        8145
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1FDB"
    },
    "2394": {
      "fn": "CryptidToken.getTokensLeft",
      "jump": "i",
      "offset": [
        8033,
        8145
      ],
      "op": "JUMP",
      "path": "16"
    },
    "2395": {
      "offset": [
        978,
        1003
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "2396": {
      "fn": "CryptidToken.getTokensLeft",
      "offset": [
        978,
        1003
      ],
      "op": "CALLVALUE",
      "path": "16"
    },
    "2397": {
      "fn": "CryptidToken.getTokensLeft",
      "offset": [
        978,
        1003
      ],
      "op": "DUP1",
      "path": "16"
    },
    "2398": {
      "fn": "CryptidToken.getTokensLeft",
      "offset": [
        978,
        1003
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "2399": {
      "fn": "CryptidToken.getTokensLeft",
      "offset": [
        978,
        1003
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x967"
    },
    "2402": {
      "fn": "CryptidToken.getTokensLeft",
      "offset": [
        978,
        1003
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "2403": {
      "fn": "CryptidToken.getTokensLeft",
      "offset": [
        978,
        1003
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "2405": {
      "fn": "CryptidToken.getTokensLeft",
      "offset": [
        978,
        1003
      ],
      "op": "DUP1",
      "path": "16"
    },
    "2406": {
      "fn": "CryptidToken.getTokensLeft",
      "offset": [
        978,
        1003
      ],
      "op": "REVERT",
      "path": "16"
    },
    "2407": {
      "fn": "CryptidToken.getTokensLeft",
      "offset": [
        978,
        1003
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "2408": {
      "op": "POP"
    },
    "2409": {
      "offset": [
        978,
        1003
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x11"
    },
    "2411": {
      "fn": "CryptidToken.getTokensLeft",
      "offset": [
        978,
        1003
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "2412": {
      "fn": "CryptidToken.getTokensLeft",
      "offset": [
        978,
        1003
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x975"
    },
    "2415": {
      "fn": "CryptidToken.getTokensLeft",
      "offset": [
        978,
        1003
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "2416": {
      "fn": "CryptidToken.getTokensLeft",
      "offset": [
        978,
        1003
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0xFF"
    },
    "2418": {
      "fn": "CryptidToken.getTokensLeft",
      "offset": [
        978,
        1003
      ],
      "op": "AND",
      "path": "16"
    },
    "2419": {
      "fn": "CryptidToken.getTokensLeft",
      "offset": [
        978,
        1003
      ],
      "op": "DUP2",
      "path": "16"
    },
    "2420": {
      "fn": "CryptidToken.getTokensLeft",
      "offset": [
        978,
        1003
      ],
      "op": "JUMP",
      "path": "16"
    },
    "2421": {
      "fn": "CryptidToken.getTokensLeft",
      "offset": [
        978,
        1003
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "2422": {
      "fn": "CryptidToken.getTokensLeft",
      "offset": [
        978,
        1003
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "2424": {
      "fn": "CryptidToken.getTokensLeft",
      "offset": [
        978,
        1003
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "2425": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "2427": {
      "op": "SWAP1"
    },
    "2428": {
      "op": "SWAP2"
    },
    "2429": {
      "op": "AND"
    },
    "2430": {
      "op": "DUP2"
    },
    "2431": {
      "op": "MSTORE"
    },
    "2432": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2434": {
      "op": "ADD"
    },
    "2435": {
      "offset": [
        978,
        1003
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x3B2"
    },
    "2438": {
      "op": "JUMP"
    },
    "2439": {
      "fn": "CryptidToken.freezeBaseURI",
      "offset": [
        5488,
        5705
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "2440": {
      "fn": "CryptidToken.freezeBaseURI",
      "offset": [
        5488,
        5705
      ],
      "op": "CALLVALUE",
      "path": "16"
    },
    "2441": {
      "fn": "CryptidToken.freezeBaseURI",
      "offset": [
        5488,
        5705
      ],
      "op": "DUP1",
      "path": "16"
    },
    "2442": {
      "fn": "CryptidToken.freezeBaseURI",
      "offset": [
        5488,
        5705
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "2443": {
      "fn": "CryptidToken.freezeBaseURI",
      "offset": [
        5488,
        5705
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x993"
    },
    "2446": {
      "fn": "CryptidToken.freezeBaseURI",
      "offset": [
        5488,
        5705
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "2447": {
      "fn": "CryptidToken.freezeBaseURI",
      "offset": [
        5488,
        5705
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "2449": {
      "fn": "CryptidToken.freezeBaseURI",
      "offset": [
        5488,
        5705
      ],
      "op": "DUP1",
      "path": "16"
    },
    "2450": {
      "fn": "CryptidToken.freezeBaseURI",
      "offset": [
        5488,
        5705
      ],
      "op": "REVERT",
      "path": "16"
    },
    "2451": {
      "fn": "CryptidToken.freezeBaseURI",
      "offset": [
        5488,
        5705
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "2452": {
      "fn": "CryptidToken.freezeBaseURI",
      "offset": [
        5488,
        5705
      ],
      "op": "POP",
      "path": "16"
    },
    "2453": {
      "fn": "CryptidToken.freezeBaseURI",
      "offset": [
        5488,
        5705
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x459"
    },
    "2456": {
      "fn": "CryptidToken.freezeBaseURI",
      "offset": [
        5488,
        5705
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1FF2"
    },
    "2459": {
      "fn": "CryptidToken.freezeBaseURI",
      "jump": "i",
      "offset": [
        5488,
        5705
      ],
      "op": "JUMP",
      "path": "16"
    },
    "2460": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4487,
        4649
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "2461": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4487,
        4649
      ],
      "op": "CALLVALUE",
      "path": "3"
    },
    "2462": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4487,
        4649
      ],
      "op": "DUP1",
      "path": "3"
    },
    "2463": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4487,
        4649
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "2464": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4487,
        4649
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x9A8"
    },
    "2467": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4487,
        4649
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "2468": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4487,
        4649
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "2470": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4487,
        4649
      ],
      "op": "DUP1",
      "path": "3"
    },
    "2471": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4487,
        4649
      ],
      "op": "REVERT",
      "path": "3"
    },
    "2472": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4487,
        4649
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "2473": {
      "op": "POP"
    },
    "2474": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4487,
        4649
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x3A6"
    },
    "2477": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4487,
        4649
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x9B7"
    },
    "2480": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4487,
        4649
      ],
      "op": "CALLDATASIZE",
      "path": "3"
    },
    "2481": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4487,
        4649
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "2483": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4487,
        4649
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x3377"
    },
    "2486": {
      "fn": "ERC721.isApprovedForAll",
      "jump": "i",
      "offset": [
        4487,
        4649
      ],
      "op": "JUMP",
      "path": "3"
    },
    "2487": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4487,
        4649
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "2488": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2490": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2492": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2494": {
      "op": "SHL"
    },
    "2495": {
      "op": "SUB"
    },
    "2496": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4607,
        4632
      ],
      "op": "SWAP2",
      "path": "3",
      "statement": 2
    },
    "2497": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4607,
        4632
      ],
      "op": "DUP3",
      "path": "3"
    },
    "2498": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4607,
        4632
      ],
      "op": "AND",
      "path": "3"
    },
    "2499": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4584,
        4588
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "2501": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4607,
        4632
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2502": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4607,
        4632
      ],
      "op": "DUP2",
      "path": "3"
    },
    "2503": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4607,
        4632
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "2504": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4607,
        4625
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x5"
    },
    "2506": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4607,
        4632
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "2508": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4607,
        4632
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2509": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4607,
        4632
      ],
      "op": "DUP2",
      "path": "3"
    },
    "2510": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4607,
        4632
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "2511": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4607,
        4632
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "2513": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4607,
        4632
      ],
      "op": "DUP1",
      "path": "3"
    },
    "2514": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4607,
        4632
      ],
      "op": "DUP4",
      "path": "3"
    },
    "2515": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4607,
        4632
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "2516": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4607,
        4642
      ],
      "op": "SWAP4",
      "path": "3"
    },
    "2517": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4607,
        4642
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2518": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4607,
        4642
      ],
      "op": "SWAP5",
      "path": "3"
    },
    "2519": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4607,
        4642
      ],
      "op": "AND",
      "path": "3"
    },
    "2520": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4607,
        4642
      ],
      "op": "DUP3",
      "path": "3"
    },
    "2521": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4607,
        4642
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "2522": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4607,
        4642
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "2523": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4607,
        4642
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2524": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4607,
        4642
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "2525": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4607,
        4642
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "2526": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4607,
        4642
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "2527": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4607,
        4642
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "2528": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4607,
        4642
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0xFF"
    },
    "2530": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4607,
        4642
      ],
      "op": "AND",
      "path": "3"
    },
    "2531": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4607,
        4642
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2532": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4487,
        4649
      ],
      "op": "JUMP",
      "path": "3"
    },
    "2533": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2534": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "2535": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2536": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "2537": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x9F1"
    },
    "2540": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "2541": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2543": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2544": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "REVERT",
      "path": "0"
    },
    "2545": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2546": {
      "op": "POP"
    },
    "2547": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x459"
    },
    "2550": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xA00"
    },
    "2553": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "2554": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "2556": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x31A2"
    },
    "2559": {
      "fn": "Ownable.transferOwnership",
      "jump": "i",
      "offset": [
        1918,
        2116
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2560": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2561": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x20E9"
    },
    "2564": {
      "fn": "Ownable.transferOwnership",
      "jump": "i",
      "offset": [
        1918,
        2116
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2565": {
      "fn": "CryptidToken.setWithdrawlAddress",
      "offset": [
        6780,
        6908
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "2566": {
      "fn": "CryptidToken.setWithdrawlAddress",
      "offset": [
        6780,
        6908
      ],
      "op": "CALLVALUE",
      "path": "16"
    },
    "2567": {
      "fn": "CryptidToken.setWithdrawlAddress",
      "offset": [
        6780,
        6908
      ],
      "op": "DUP1",
      "path": "16"
    },
    "2568": {
      "fn": "CryptidToken.setWithdrawlAddress",
      "offset": [
        6780,
        6908
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "2569": {
      "fn": "CryptidToken.setWithdrawlAddress",
      "offset": [
        6780,
        6908
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xA11"
    },
    "2572": {
      "fn": "CryptidToken.setWithdrawlAddress",
      "offset": [
        6780,
        6908
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "2573": {
      "fn": "CryptidToken.setWithdrawlAddress",
      "offset": [
        6780,
        6908
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "2575": {
      "fn": "CryptidToken.setWithdrawlAddress",
      "offset": [
        6780,
        6908
      ],
      "op": "DUP1",
      "path": "16"
    },
    "2576": {
      "fn": "CryptidToken.setWithdrawlAddress",
      "offset": [
        6780,
        6908
      ],
      "op": "REVERT",
      "path": "16"
    },
    "2577": {
      "fn": "CryptidToken.setWithdrawlAddress",
      "offset": [
        6780,
        6908
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "2578": {
      "op": "POP"
    },
    "2579": {
      "fn": "CryptidToken.setWithdrawlAddress",
      "offset": [
        6780,
        6908
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x459"
    },
    "2582": {
      "fn": "CryptidToken.setWithdrawlAddress",
      "offset": [
        6780,
        6908
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xA20"
    },
    "2585": {
      "fn": "CryptidToken.setWithdrawlAddress",
      "offset": [
        6780,
        6908
      ],
      "op": "CALLDATASIZE",
      "path": "16"
    },
    "2586": {
      "fn": "CryptidToken.setWithdrawlAddress",
      "offset": [
        6780,
        6908
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "2588": {
      "fn": "CryptidToken.setWithdrawlAddress",
      "offset": [
        6780,
        6908
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x31A2"
    },
    "2591": {
      "fn": "CryptidToken.setWithdrawlAddress",
      "jump": "i",
      "offset": [
        6780,
        6908
      ],
      "op": "JUMP",
      "path": "16"
    },
    "2592": {
      "fn": "CryptidToken.setWithdrawlAddress",
      "offset": [
        6780,
        6908
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "2593": {
      "fn": "CryptidToken.setWithdrawlAddress",
      "offset": [
        6780,
        6908
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x2187"
    },
    "2596": {
      "fn": "CryptidToken.setWithdrawlAddress",
      "jump": "i",
      "offset": [
        6780,
        6908
      ],
      "op": "JUMP",
      "path": "16"
    },
    "2597": {
      "offset": [
        1662,
        1698
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "2598": {
      "fn": "CryptidToken.setWithdrawlAddress",
      "offset": [
        1662,
        1698
      ],
      "op": "CALLVALUE",
      "path": "16"
    },
    "2599": {
      "fn": "CryptidToken.setWithdrawlAddress",
      "offset": [
        1662,
        1698
      ],
      "op": "DUP1",
      "path": "16"
    },
    "2600": {
      "fn": "CryptidToken.setWithdrawlAddress",
      "offset": [
        1662,
        1698
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "2601": {
      "fn": "CryptidToken.setWithdrawlAddress",
      "offset": [
        1662,
        1698
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xA31"
    },
    "2604": {
      "fn": "CryptidToken.setWithdrawlAddress",
      "offset": [
        1662,
        1698
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "2605": {
      "fn": "CryptidToken.setWithdrawlAddress",
      "offset": [
        1662,
        1698
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "2607": {
      "fn": "CryptidToken.setWithdrawlAddress",
      "offset": [
        1662,
        1698
      ],
      "op": "DUP1",
      "path": "16"
    },
    "2608": {
      "fn": "CryptidToken.setWithdrawlAddress",
      "offset": [
        1662,
        1698
      ],
      "op": "REVERT",
      "path": "16"
    },
    "2609": {
      "fn": "CryptidToken.setWithdrawlAddress",
      "offset": [
        1662,
        1698
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "2610": {
      "fn": "CryptidToken.setWithdrawlAddress",
      "offset": [
        1662,
        1698
      ],
      "op": "POP",
      "path": "16"
    },
    "2611": {
      "fn": "CryptidToken.setWithdrawlAddress",
      "offset": [
        1662,
        1698
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x42B"
    },
    "2614": {
      "fn": "CryptidToken.setWithdrawlAddress",
      "offset": [
        1662,
        1698
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x17"
    },
    "2616": {
      "fn": "CryptidToken.setWithdrawlAddress",
      "offset": [
        1662,
        1698
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "2617": {
      "fn": "CryptidToken.setWithdrawlAddress",
      "offset": [
        1662,
        1698
      ],
      "op": "DUP2",
      "path": "16"
    },
    "2618": {
      "fn": "CryptidToken.setWithdrawlAddress",
      "offset": [
        1662,
        1698
      ],
      "op": "JUMP",
      "path": "16"
    },
    "2619": {
      "offset": [
        1101,
        1177
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "2620": {
      "fn": "CryptidToken.setWithdrawlAddress",
      "offset": [
        1101,
        1177
      ],
      "op": "CALLVALUE",
      "path": "16"
    },
    "2621": {
      "fn": "CryptidToken.setWithdrawlAddress",
      "offset": [
        1101,
        1177
      ],
      "op": "DUP1",
      "path": "16"
    },
    "2622": {
      "fn": "CryptidToken.setWithdrawlAddress",
      "offset": [
        1101,
        1177
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "2623": {
      "fn": "CryptidToken.setWithdrawlAddress",
      "offset": [
        1101,
        1177
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xA47"
    },
    "2626": {
      "fn": "CryptidToken.setWithdrawlAddress",
      "offset": [
        1101,
        1177
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "2627": {
      "fn": "CryptidToken.setWithdrawlAddress",
      "offset": [
        1101,
        1177
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "2629": {
      "fn": "CryptidToken.setWithdrawlAddress",
      "offset": [
        1101,
        1177
      ],
      "op": "DUP1",
      "path": "16"
    },
    "2630": {
      "fn": "CryptidToken.setWithdrawlAddress",
      "offset": [
        1101,
        1177
      ],
      "op": "REVERT",
      "path": "16"
    },
    "2631": {
      "fn": "CryptidToken.setWithdrawlAddress",
      "offset": [
        1101,
        1177
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "2632": {
      "op": "POP"
    },
    "2633": {
      "offset": [
        1101,
        1177
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x11"
    },
    "2635": {
      "fn": "CryptidToken.setWithdrawlAddress",
      "offset": [
        1101,
        1177
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "2636": {
      "fn": "CryptidToken.setWithdrawlAddress",
      "offset": [
        1101,
        1177
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x3FD"
    },
    "2639": {
      "fn": "CryptidToken.setWithdrawlAddress",
      "offset": [
        1101,
        1177
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "2640": {
      "fn": "CryptidToken.setWithdrawlAddress",
      "offset": [
        1101,
        1177
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0x1000000"
    },
    "2645": {
      "fn": "CryptidToken.setWithdrawlAddress",
      "offset": [
        1101,
        1177
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "2646": {
      "fn": "CryptidToken.setWithdrawlAddress",
      "offset": [
        1101,
        1177
      ],
      "op": "DIV",
      "path": "16"
    },
    "2647": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2649": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2651": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2653": {
      "op": "SHL"
    },
    "2654": {
      "op": "SUB"
    },
    "2655": {
      "offset": [
        1101,
        1177
      ],
      "op": "AND",
      "path": "16"
    },
    "2656": {
      "fn": "CryptidToken.setWithdrawlAddress",
      "offset": [
        1101,
        1177
      ],
      "op": "DUP2",
      "path": "16"
    },
    "2657": {
      "fn": "CryptidToken.setWithdrawlAddress",
      "offset": [
        1101,
        1177
      ],
      "op": "JUMP",
      "path": "16"
    },
    "2658": {
      "fn": "CryptidToken.supportsInterface",
      "offset": [
        8785,
        8954
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "2659": {
      "fn": "CryptidToken.supportsInterface",
      "offset": [
        8888,
        8892
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "2661": {
      "fn": "CryptidToken.supportsInterface",
      "offset": [
        8911,
        8947
      ],
      "op": "PUSH2",
      "path": "16",
      "statement": 3,
      "value": "0xA6D"
    },
    "2664": {
      "fn": "CryptidToken.supportsInterface",
      "offset": [
        8935,
        8946
      ],
      "op": "DUP3",
      "path": "16"
    },
    "2665": {
      "fn": "CryptidToken.supportsInterface",
      "offset": [
        8911,
        8934
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x21EC"
    },
    "2668": {
      "fn": "CryptidToken.supportsInterface",
      "jump": "i",
      "offset": [
        8911,
        8947
      ],
      "op": "JUMP",
      "path": "16"
    },
    "2669": {
      "fn": "CryptidToken.supportsInterface",
      "offset": [
        8911,
        8947
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "2670": {
      "fn": "CryptidToken.supportsInterface",
      "offset": [
        8904,
        8947
      ],
      "op": "SWAP3",
      "path": "16"
    },
    "2671": {
      "fn": "CryptidToken.supportsInterface",
      "offset": [
        8785,
        8954
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "2672": {
      "op": "POP"
    },
    "2673": {
      "op": "POP"
    },
    "2674": {
      "fn": "CryptidToken.supportsInterface",
      "jump": "o",
      "offset": [
        8785,
        8954
      ],
      "op": "JUMP",
      "path": "16"
    },
    "2675": {
      "fn": "ERC721.name",
      "offset": [
        2473,
        2571
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "2676": {
      "fn": "ERC721.name",
      "offset": [
        2527,
        2540
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x60"
    },
    "2678": {
      "fn": "ERC721.name",
      "offset": [
        2559,
        2564
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 4,
      "value": "0x0"
    },
    "2680": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "DUP1",
      "path": "3"
    },
    "2681": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "2682": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xA82"
    },
    "2685": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2686": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x3393"
    },
    "2689": {
      "fn": "ERC721.name",
      "jump": "i",
      "offset": [
        2552,
        2564
      ],
      "op": "JUMP",
      "path": "3"
    },
    "2690": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "2691": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "DUP1",
      "path": "3"
    },
    "2692": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1F"
    },
    "2694": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "ADD",
      "path": "3"
    },
    "2695": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "2697": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "DUP1",
      "path": "3"
    },
    "2698": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "2699": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "DIV",
      "path": "3"
    },
    "2700": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "MUL",
      "path": "3"
    },
    "2701": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "2703": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "ADD",
      "path": "3"
    },
    "2704": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "2706": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "2707": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2708": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "DUP2",
      "path": "3"
    },
    "2709": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "ADD",
      "path": "3"
    },
    "2710": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "2712": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "2713": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "DUP1",
      "path": "3"
    },
    "2714": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "2715": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "2716": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2717": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "DUP2",
      "path": "3"
    },
    "2718": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "DUP2",
      "path": "3"
    },
    "2719": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "2720": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "2722": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "ADD",
      "path": "3"
    },
    "2723": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "DUP3",
      "path": "3"
    },
    "2724": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "DUP1",
      "path": "3"
    },
    "2725": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "2726": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xAAE"
    },
    "2729": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2730": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x3393"
    },
    "2733": {
      "fn": "ERC721.name",
      "jump": "i",
      "offset": [
        2552,
        2564
      ],
      "op": "JUMP",
      "path": "3"
    },
    "2734": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "2735": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "DUP1",
      "path": "3"
    },
    "2736": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "2737": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xAFB"
    },
    "2740": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "2741": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "DUP1",
      "path": "3"
    },
    "2742": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1F"
    },
    "2744": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "LT",
      "path": "3"
    },
    "2745": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xAD0"
    },
    "2748": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "2749": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x100"
    },
    "2752": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "DUP1",
      "path": "3"
    },
    "2753": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "DUP4",
      "path": "3"
    },
    "2754": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "2755": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "DIV",
      "path": "3"
    },
    "2756": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "MUL",
      "path": "3"
    },
    "2757": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "DUP4",
      "path": "3"
    },
    "2758": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "2759": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "2760": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "2762": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "ADD",
      "path": "3"
    },
    "2763": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "2764": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xAFB"
    },
    "2767": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "JUMP",
      "path": "3"
    },
    "2768": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "2769": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "DUP3",
      "path": "3"
    },
    "2770": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "ADD",
      "path": "3"
    },
    "2771": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "2772": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2773": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "2775": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "2776": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "2778": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "2780": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "2781": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2782": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "2783": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "DUP2",
      "path": "3"
    },
    "2784": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "2785": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "DUP2",
      "path": "3"
    },
    "2786": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "2787": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2788": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1"
    },
    "2790": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "ADD",
      "path": "3"
    },
    "2791": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2792": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "2794": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "ADD",
      "path": "3"
    },
    "2795": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "DUP1",
      "path": "3"
    },
    "2796": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "DUP4",
      "path": "3"
    },
    "2797": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "GT",
      "path": "3"
    },
    "2798": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xADE"
    },
    "2801": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "2802": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "DUP3",
      "path": "3"
    },
    "2803": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2804": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "SUB",
      "path": "3"
    },
    "2805": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1F"
    },
    "2807": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "AND",
      "path": "3"
    },
    "2808": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "DUP3",
      "path": "3"
    },
    "2809": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "ADD",
      "path": "3"
    },
    "2810": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "2811": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "2812": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "POP",
      "path": "3"
    },
    "2813": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "POP",
      "path": "3"
    },
    "2814": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "POP",
      "path": "3"
    },
    "2815": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "POP",
      "path": "3"
    },
    "2816": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "POP",
      "path": "3"
    },
    "2817": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2818": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "POP",
      "path": "3"
    },
    "2819": {
      "fn": "ERC721.name",
      "offset": [
        2473,
        2571
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2820": {
      "fn": "ERC721.name",
      "jump": "o",
      "offset": [
        2473,
        2571
      ],
      "op": "JUMP",
      "path": "3"
    },
    "2821": {
      "fn": "ERC721.getApproved",
      "offset": [
        3984,
        4201
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "2822": {
      "fn": "ERC721.getApproved",
      "offset": [
        4060,
        4067
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "2824": {
      "fn": "ERC721._exists",
      "offset": [
        7232,
        7248
      ],
      "op": "DUP2",
      "path": "3",
      "statement": 5
    },
    "2825": {
      "fn": "ERC721._exists",
      "offset": [
        7232,
        7248
      ],
      "op": "DUP2",
      "path": "3"
    },
    "2826": {
      "fn": "ERC721._exists",
      "offset": [
        7232,
        7248
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "2827": {
      "fn": "ERC721._exists",
      "offset": [
        7232,
        7239
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x2"
    },
    "2829": {
      "fn": "ERC721._exists",
      "offset": [
        7232,
        7248
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "2831": {
      "fn": "ERC721._exists",
      "offset": [
        7232,
        7248
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "2832": {
      "fn": "ERC721._exists",
      "offset": [
        7232,
        7248
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "2834": {
      "fn": "ERC721._exists",
      "offset": [
        7232,
        7248
      ],
      "op": "DUP2",
      "path": "3"
    },
    "2835": {
      "fn": "ERC721._exists",
      "offset": [
        7232,
        7248
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "2836": {
      "fn": "ERC721._exists",
      "offset": [
        7232,
        7248
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "2837": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2839": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2841": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2843": {
      "op": "SHL"
    },
    "2844": {
      "op": "SUB"
    },
    "2845": {
      "fn": "ERC721._exists",
      "offset": [
        7232,
        7248
      ],
      "op": "AND",
      "path": "3"
    },
    "2846": {
      "fn": "ERC721.getApproved",
      "offset": [
        4079,
        4152
      ],
      "op": "PUSH2",
      "path": "3",
      "statement": 6,
      "value": "0xB83"
    },
    "2849": {
      "fn": "ERC721.getApproved",
      "offset": [
        4079,
        4152
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "2850": {
      "fn": "ERC721.getApproved",
      "offset": [
        4079,
        4152
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "2852": {
      "fn": "ERC721.getApproved",
      "offset": [
        4079,
        4152
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "2853": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2857": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2859": {
      "op": "SHL"
    },
    "2860": {
      "fn": "ERC721.getApproved",
      "offset": [
        4079,
        4152
      ],
      "op": "DUP2",
      "path": "3"
    },
    "2861": {
      "fn": "ERC721.getApproved",
      "offset": [
        4079,
        4152
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "2862": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2864": {
      "fn": "ERC721.getApproved",
      "offset": [
        4079,
        4152
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "2866": {
      "fn": "ERC721.getApproved",
      "offset": [
        4079,
        4152
      ],
      "op": "DUP3",
      "path": "3"
    },
    "2867": {
      "fn": "ERC721.getApproved",
      "offset": [
        4079,
        4152
      ],
      "op": "ADD",
      "path": "3"
    },
    "2868": {
      "op": "MSTORE"
    },
    "2869": {
      "op": "PUSH1",
      "value": "0x2C"
    },
    "2871": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2873": {
      "op": "DUP3"
    },
    "2874": {
      "op": "ADD"
    },
    "2875": {
      "op": "MSTORE"
    },
    "2876": {
      "op": "PUSH32",
      "value": "0x4552433732313A20617070726F76656420717565727920666F72206E6F6E6578"
    },
    "2909": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2911": {
      "op": "DUP3"
    },
    "2912": {
      "op": "ADD"
    },
    "2913": {
      "op": "MSTORE"
    },
    "2914": {
      "op": "PUSH12",
      "value": "0x34B9BA32B73A103A37B5B2B7"
    },
    "2927": {
      "op": "PUSH1",
      "value": "0xA1"
    },
    "2929": {
      "op": "SHL"
    },
    "2930": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2932": {
      "op": "DUP3"
    },
    "2933": {
      "op": "ADD"
    },
    "2934": {
      "op": "MSTORE"
    },
    "2935": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "2937": {
      "op": "ADD"
    },
    "2938": {
      "fn": "ERC721.getApproved",
      "offset": [
        4079,
        4152
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "2939": {
      "fn": "ERC721.getApproved",
      "offset": [
        4079,
        4152
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "2941": {
      "fn": "ERC721.getApproved",
      "offset": [
        4079,
        4152
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "2942": {
      "fn": "ERC721.getApproved",
      "offset": [
        4079,
        4152
      ],
      "op": "DUP1",
      "path": "3"
    },
    "2943": {
      "fn": "ERC721.getApproved",
      "offset": [
        4079,
        4152
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "2944": {
      "fn": "ERC721.getApproved",
      "offset": [
        4079,
        4152
      ],
      "op": "SUB",
      "path": "3"
    },
    "2945": {
      "fn": "ERC721.getApproved",
      "offset": [
        4079,
        4152
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2946": {
      "fn": "ERC721.getApproved",
      "offset": [
        4079,
        4152
      ],
      "op": "REVERT",
      "optimizer_revert": true,
      "path": "3"
    },
    "2947": {
      "fn": "ERC721.getApproved",
      "offset": [
        4079,
        4152
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "2948": {
      "op": "POP"
    },
    "2949": {
      "fn": "ERC721.getApproved",
      "offset": [
        4170,
        4194
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 7,
      "value": "0x0"
    },
    "2951": {
      "fn": "ERC721.getApproved",
      "offset": [
        4170,
        4194
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2952": {
      "fn": "ERC721.getApproved",
      "offset": [
        4170,
        4194
      ],
      "op": "DUP2",
      "path": "3"
    },
    "2953": {
      "fn": "ERC721.getApproved",
      "offset": [
        4170,
        4194
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "2954": {
      "fn": "ERC721.getApproved",
      "offset": [
        4170,
        4185
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "2956": {
      "fn": "ERC721.getApproved",
      "offset": [
        4170,
        4194
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "2958": {
      "fn": "ERC721.getApproved",
      "offset": [
        4170,
        4194
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "2959": {
      "fn": "ERC721.getApproved",
      "offset": [
        4170,
        4194
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "2961": {
      "fn": "ERC721.getApproved",
      "offset": [
        4170,
        4194
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2962": {
      "fn": "ERC721.getApproved",
      "offset": [
        4170,
        4194
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "2963": {
      "fn": "ERC721.getApproved",
      "offset": [
        4170,
        4194
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "2964": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2966": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2968": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2970": {
      "op": "SHL"
    },
    "2971": {
      "op": "SUB"
    },
    "2972": {
      "fn": "ERC721.getApproved",
      "offset": [
        4170,
        4194
      ],
      "op": "AND",
      "path": "3"
    },
    "2973": {
      "fn": "ERC721.getApproved",
      "offset": [
        4170,
        4194
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2974": {
      "fn": "ERC721.getApproved",
      "jump": "o",
      "offset": [
        3984,
        4201
      ],
      "op": "JUMP",
      "path": "3"
    },
    "2975": {
      "fn": "ERC721.approve",
      "offset": [
        3522,
        3923
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "2976": {
      "fn": "ERC721.approve",
      "offset": [
        3602,
        3615
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "2978": {
      "fn": "ERC721.approve",
      "offset": [
        3618,
        3641
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xBAA"
    },
    "2981": {
      "fn": "ERC721.approve",
      "offset": [
        3633,
        3640
      ],
      "op": "DUP3",
      "path": "3"
    },
    "2982": {
      "fn": "ERC721.approve",
      "offset": [
        3618,
        3632
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1521"
    },
    "2985": {
      "fn": "ERC721.approve",
      "jump": "i",
      "offset": [
        3618,
        3641
      ],
      "op": "JUMP",
      "path": "3"
    },
    "2986": {
      "fn": "ERC721.approve",
      "offset": [
        3618,
        3641
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "2987": {
      "fn": "ERC721.approve",
      "offset": [
        3602,
        3641
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2988": {
      "fn": "ERC721.approve",
      "offset": [
        3602,
        3641
      ],
      "op": "POP",
      "path": "3"
    },
    "2989": {
      "fn": "ERC721.approve",
      "offset": [
        3665,
        3670
      ],
      "op": "DUP1",
      "path": "3",
      "statement": 8
    },
    "2990": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2992": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2994": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2996": {
      "op": "SHL"
    },
    "2997": {
      "op": "SUB"
    },
    "2998": {
      "fn": "ERC721.approve",
      "offset": [
        3659,
        3670
      ],
      "op": "AND",
      "path": "3"
    },
    "2999": {
      "fn": "ERC721.approve",
      "offset": [
        3659,
        3661
      ],
      "op": "DUP4",
      "path": "3"
    },
    "3000": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3002": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3004": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3006": {
      "op": "SHL"
    },
    "3007": {
      "op": "SUB"
    },
    "3008": {
      "fn": "ERC721.approve",
      "offset": [
        3659,
        3670
      ],
      "op": "AND",
      "path": "3"
    },
    "3009": {
      "fn": "ERC721.approve",
      "offset": [
        3659,
        3670
      ],
      "op": "EQ",
      "path": "3"
    },
    "3010": {
      "branch": 170,
      "fn": "ERC721.approve",
      "offset": [
        3659,
        3670
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "3011": {
      "fn": "ERC721.approve",
      "offset": [
        3651,
        3708
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xC18"
    },
    "3014": {
      "branch": 170,
      "fn": "ERC721.approve",
      "offset": [
        3651,
        3708
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "3015": {
      "fn": "ERC721.approve",
      "offset": [
        3651,
        3708
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "3017": {
      "fn": "ERC721.approve",
      "offset": [
        3651,
        3708
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "3018": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3022": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3024": {
      "op": "SHL"
    },
    "3025": {
      "fn": "ERC721.approve",
      "offset": [
        3651,
        3708
      ],
      "op": "DUP2",
      "path": "3"
    },
    "3026": {
      "fn": "ERC721.approve",
      "offset": [
        3651,
        3708
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "3027": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3029": {
      "fn": "ERC721.approve",
      "offset": [
        3651,
        3708
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "3031": {
      "fn": "ERC721.approve",
      "offset": [
        3651,
        3708
      ],
      "op": "DUP3",
      "path": "3"
    },
    "3032": {
      "fn": "ERC721.approve",
      "offset": [
        3651,
        3708
      ],
      "op": "ADD",
      "path": "3"
    },
    "3033": {
      "op": "MSTORE"
    },
    "3034": {
      "op": "PUSH1",
      "value": "0x21"
    },
    "3036": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3038": {
      "op": "DUP3"
    },
    "3039": {
      "op": "ADD"
    },
    "3040": {
      "op": "MSTORE"
    },
    "3041": {
      "op": "PUSH32",
      "value": "0x4552433732313A20617070726F76616C20746F2063757272656E74206F776E65"
    },
    "3074": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "3076": {
      "op": "DUP3"
    },
    "3077": {
      "op": "ADD"
    },
    "3078": {
      "op": "MSTORE"
    },
    "3079": {
      "op": "PUSH1",
      "value": "0x39"
    },
    "3081": {
      "op": "PUSH1",
      "value": "0xF9"
    },
    "3083": {
      "op": "SHL"
    },
    "3084": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "3086": {
      "op": "DUP3"
    },
    "3087": {
      "op": "ADD"
    },
    "3088": {
      "op": "MSTORE"
    },
    "3089": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "3091": {
      "op": "ADD"
    },
    "3092": {
      "fn": "ERC721.approve",
      "offset": [
        3651,
        3708
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xB7A"
    },
    "3095": {
      "op": "JUMP"
    },
    "3096": {
      "fn": "ERC721.approve",
      "offset": [
        3651,
        3708
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "3097": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "10",
      "statement": 9
    },
    "3098": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3100": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3102": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3104": {
      "op": "SHL"
    },
    "3105": {
      "op": "SUB"
    },
    "3106": {
      "fn": "ERC721.approve",
      "offset": [
        3740,
        3761
      ],
      "op": "DUP3",
      "path": "3",
      "statement": 10
    },
    "3107": {
      "fn": "ERC721.approve",
      "offset": [
        3740,
        3761
      ],
      "op": "AND",
      "path": "3"
    },
    "3108": {
      "fn": "ERC721.approve",
      "offset": [
        3740,
        3761
      ],
      "op": "EQ",
      "path": "3"
    },
    "3109": {
      "branch": 171,
      "fn": "ERC721.approve",
      "offset": [
        3740,
        3761
      ],
      "op": "DUP1",
      "path": "3"
    },
    "3110": {
      "fn": "ERC721.approve",
      "offset": [
        3740,
        3802
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xC34"
    },
    "3113": {
      "branch": 171,
      "fn": "ERC721.approve",
      "offset": [
        3740,
        3802
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "3114": {
      "op": "POP"
    },
    "3115": {
      "fn": "ERC721.approve",
      "offset": [
        3765,
        3802
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xC34"
    },
    "3118": {
      "fn": "ERC721.approve",
      "offset": [
        3782,
        3787
      ],
      "op": "DUP2",
      "path": "3"
    },
    "3119": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "10"
    },
    "3120": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4487,
        4649
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x9B7"
    },
    "3123": {
      "fn": "ERC721.isApprovedForAll",
      "jump": "i",
      "offset": [
        4487,
        4649
      ],
      "op": "JUMP",
      "path": "3"
    },
    "3124": {
      "branch": 172,
      "fn": "ERC721.approve",
      "offset": [
        3765,
        3802
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "3125": {
      "fn": "ERC721.approve",
      "offset": [
        3719,
        3884
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xCA6"
    },
    "3128": {
      "branch": 172,
      "fn": "ERC721.approve",
      "offset": [
        3719,
        3884
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "3129": {
      "fn": "ERC721.approve",
      "offset": [
        3719,
        3884
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "3131": {
      "fn": "ERC721.approve",
      "offset": [
        3719,
        3884
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "3132": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3136": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3138": {
      "op": "SHL"
    },
    "3139": {
      "fn": "ERC721.approve",
      "offset": [
        3719,
        3884
      ],
      "op": "DUP2",
      "path": "3"
    },
    "3140": {
      "fn": "ERC721.approve",
      "offset": [
        3719,
        3884
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "3141": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3143": {
      "fn": "ERC721.approve",
      "offset": [
        3719,
        3884
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "3145": {
      "fn": "ERC721.approve",
      "offset": [
        3719,
        3884
      ],
      "op": "DUP3",
      "path": "3"
    },
    "3146": {
      "fn": "ERC721.approve",
      "offset": [
        3719,
        3884
      ],
      "op": "ADD",
      "path": "3"
    },
    "3147": {
      "op": "MSTORE"
    },
    "3148": {
      "op": "PUSH1",
      "value": "0x38"
    },
    "3150": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3152": {
      "op": "DUP3"
    },
    "3153": {
      "op": "ADD"
    },
    "3154": {
      "op": "MSTORE"
    },
    "3155": {
      "op": "PUSH32",
      "value": "0x4552433732313A20617070726F76652063616C6C6572206973206E6F74206F77"
    },
    "3188": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "3190": {
      "op": "DUP3"
    },
    "3191": {
      "op": "ADD"
    },
    "3192": {
      "op": "MSTORE"
    },
    "3193": {
      "op": "PUSH32",
      "value": "0x6E6572206E6F7220617070726F76656420666F7220616C6C0000000000000000"
    },
    "3226": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "3228": {
      "op": "DUP3"
    },
    "3229": {
      "op": "ADD"
    },
    "3230": {
      "op": "MSTORE"
    },
    "3231": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "3233": {
      "op": "ADD"
    },
    "3234": {
      "fn": "ERC721.approve",
      "offset": [
        3719,
        3884
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xB7A"
    },
    "3237": {
      "op": "JUMP"
    },
    "3238": {
      "fn": "ERC721.approve",
      "offset": [
        3719,
        3884
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "3239": {
      "fn": "ERC721.approve",
      "offset": [
        3895,
        3916
      ],
      "op": "PUSH2",
      "path": "3",
      "statement": 11,
      "value": "0xCB0"
    },
    "3242": {
      "fn": "ERC721.approve",
      "offset": [
        3904,
        3906
      ],
      "op": "DUP4",
      "path": "3"
    },
    "3243": {
      "fn": "ERC721.approve",
      "offset": [
        3908,
        3915
      ],
      "op": "DUP4",
      "path": "3"
    },
    "3244": {
      "fn": "ERC721.approve",
      "offset": [
        3895,
        3903
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2211"
    },
    "3247": {
      "fn": "ERC721.approve",
      "jump": "i",
      "offset": [
        3895,
        3916
      ],
      "op": "JUMP",
      "path": "3"
    },
    "3248": {
      "fn": "ERC721.approve",
      "offset": [
        3895,
        3916
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "3249": {
      "fn": "ERC721.approve",
      "offset": [
        3592,
        3923
      ],
      "op": "POP",
      "path": "3"
    },
    "3250": {
      "fn": "ERC721.approve",
      "offset": [
        3522,
        3923
      ],
      "op": "POP",
      "path": "3"
    },
    "3251": {
      "fn": "ERC721.approve",
      "offset": [
        3522,
        3923
      ],
      "op": "POP",
      "path": "3"
    },
    "3252": {
      "fn": "ERC721.approve",
      "jump": "o",
      "offset": [
        3522,
        3923
      ],
      "op": "JUMP",
      "path": "3"
    },
    "3253": {
      "fn": "CryptidToken.setProvenanceHash",
      "offset": [
        6217,
        6508
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "3254": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xA"
    },
    "3256": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "3257": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3259": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3261": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3263": {
      "op": "SHL"
    },
    "3264": {
      "op": "SUB"
    },
    "3265": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x100"
    },
    "3268": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3269": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "3270": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "DIV",
      "path": "0"
    },
    "3271": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "AND",
      "path": "0"
    },
    "3272": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "10"
    },
    "3273": {
      "offset": [
        1248,
        1271
      ],
      "op": "EQ",
      "path": "0"
    },
    "3274": {
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xCE5"
    },
    "3277": {
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "3278": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "3280": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "3281": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3285": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3287": {
      "op": "SHL"
    },
    "3288": {
      "offset": [
        1240,
        1308
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3289": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3290": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "3292": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "ADD",
      "path": "0"
    },
    "3293": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xB7A"
    },
    "3296": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3297": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x33CE"
    },
    "3300": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMP",
      "path": "0"
    },
    "3301": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3302": {
      "fn": "CryptidToken.setProvenanceHash",
      "offset": [
        6344,
        6345
      ],
      "op": "PUSH1",
      "path": "16",
      "statement": 12,
      "value": "0x0"
    },
    "3304": {
      "fn": "CryptidToken.setProvenanceHash",
      "offset": [
        6318,
        6333
      ],
      "op": "DUP2",
      "path": "16"
    },
    "3305": {
      "fn": "CryptidToken.setProvenanceHash",
      "offset": [
        6312,
        6341
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "3306": {
      "branch": 151,
      "fn": "CryptidToken.setProvenanceHash",
      "offset": [
        6312,
        6345
      ],
      "op": "GT",
      "path": "16"
    },
    "3307": {
      "fn": "CryptidToken.setProvenanceHash",
      "offset": [
        6304,
        6389
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xD46"
    },
    "3310": {
      "branch": 151,
      "fn": "CryptidToken.setProvenanceHash",
      "offset": [
        6304,
        6389
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "3311": {
      "fn": "CryptidToken.setProvenanceHash",
      "offset": [
        6304,
        6389
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "3313": {
      "fn": "CryptidToken.setProvenanceHash",
      "offset": [
        6304,
        6389
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "3314": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3318": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3320": {
      "op": "SHL"
    },
    "3321": {
      "fn": "CryptidToken.setProvenanceHash",
      "offset": [
        6304,
        6389
      ],
      "op": "DUP2",
      "path": "16"
    },
    "3322": {
      "fn": "CryptidToken.setProvenanceHash",
      "offset": [
        6304,
        6389
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "3323": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3325": {
      "fn": "CryptidToken.setProvenanceHash",
      "offset": [
        6304,
        6389
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "3327": {
      "fn": "CryptidToken.setProvenanceHash",
      "offset": [
        6304,
        6389
      ],
      "op": "DUP3",
      "path": "16"
    },
    "3328": {
      "fn": "CryptidToken.setProvenanceHash",
      "offset": [
        6304,
        6389
      ],
      "op": "ADD",
      "path": "16"
    },
    "3329": {
      "op": "MSTORE"
    },
    "3330": {
      "op": "PUSH1",
      "value": "0x27"
    },
    "3332": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3334": {
      "op": "DUP3"
    },
    "3335": {
      "op": "ADD"
    },
    "3336": {
      "op": "MSTORE"
    },
    "3337": {
      "op": "PUSH32",
      "value": "0x50726F76656E616E636520686173682063616E6E6F7420626520656D70747920"
    },
    "3370": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "3372": {
      "op": "DUP3"
    },
    "3373": {
      "op": "ADD"
    },
    "3374": {
      "op": "MSTORE"
    },
    "3375": {
      "op": "PUSH7",
      "value": "0x39BA3934B73397"
    },
    "3383": {
      "op": "PUSH1",
      "value": "0xC9"
    },
    "3385": {
      "op": "SHL"
    },
    "3386": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "3388": {
      "op": "DUP3"
    },
    "3389": {
      "op": "ADD"
    },
    "3390": {
      "op": "MSTORE"
    },
    "3391": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "3393": {
      "op": "ADD"
    },
    "3394": {
      "fn": "CryptidToken.setProvenanceHash",
      "offset": [
        6304,
        6389
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xB7A"
    },
    "3397": {
      "op": "JUMP"
    },
    "3398": {
      "fn": "CryptidToken.setProvenanceHash",
      "offset": [
        6304,
        6389
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "3399": {
      "fn": "CryptidToken.setProvenanceHash",
      "offset": [
        6408,
        6428
      ],
      "op": "PUSH1",
      "path": "16",
      "statement": 13,
      "value": "0x11"
    },
    "3401": {
      "fn": "CryptidToken.setProvenanceHash",
      "offset": [
        6408,
        6428
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "3402": {
      "fn": "CryptidToken.setProvenanceHash",
      "offset": [
        6408,
        6428
      ],
      "op": "PUSH3",
      "path": "16",
      "value": "0x10000"
    },
    "3406": {
      "fn": "CryptidToken.setProvenanceHash",
      "offset": [
        6408,
        6428
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "3407": {
      "fn": "CryptidToken.setProvenanceHash",
      "offset": [
        6408,
        6428
      ],
      "op": "DIV",
      "path": "16"
    },
    "3408": {
      "fn": "CryptidToken.setProvenanceHash",
      "offset": [
        6408,
        6428
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0xFF"
    },
    "3410": {
      "fn": "CryptidToken.setProvenanceHash",
      "offset": [
        6408,
        6428
      ],
      "op": "AND",
      "path": "16"
    },
    "3411": {
      "branch": 152,
      "fn": "CryptidToken.setProvenanceHash",
      "offset": [
        6407,
        6428
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "3412": {
      "fn": "CryptidToken.setProvenanceHash",
      "offset": [
        6399,
        6459
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xD9F"
    },
    "3415": {
      "branch": 152,
      "fn": "CryptidToken.setProvenanceHash",
      "offset": [
        6399,
        6459
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "3416": {
      "fn": "CryptidToken.setProvenanceHash",
      "offset": [
        6399,
        6459
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "3418": {
      "fn": "CryptidToken.setProvenanceHash",
      "offset": [
        6399,
        6459
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "3419": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3423": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3425": {
      "op": "SHL"
    },
    "3426": {
      "fn": "CryptidToken.setProvenanceHash",
      "offset": [
        6399,
        6459
      ],
      "op": "DUP2",
      "path": "16"
    },
    "3427": {
      "fn": "CryptidToken.setProvenanceHash",
      "offset": [
        6399,
        6459
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "3428": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3430": {
      "fn": "CryptidToken.setProvenanceHash",
      "offset": [
        6399,
        6459
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "3432": {
      "fn": "CryptidToken.setProvenanceHash",
      "offset": [
        6399,
        6459
      ],
      "op": "DUP3",
      "path": "16"
    },
    "3433": {
      "fn": "CryptidToken.setProvenanceHash",
      "offset": [
        6399,
        6459
      ],
      "op": "ADD",
      "path": "16"
    },
    "3434": {
      "op": "MSTORE"
    },
    "3435": {
      "op": "PUSH1",
      "value": "0x1A"
    },
    "3437": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3439": {
      "op": "DUP3"
    },
    "3440": {
      "op": "ADD"
    },
    "3441": {
      "op": "MSTORE"
    },
    "3442": {
      "op": "PUSH32",
      "value": "0x50726F76656E616E636520686173682069732066726F7A656E2E000000000000"
    },
    "3475": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "3477": {
      "op": "DUP3"
    },
    "3478": {
      "op": "ADD"
    },
    "3479": {
      "op": "MSTORE"
    },
    "3480": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "3482": {
      "op": "ADD"
    },
    "3483": {
      "fn": "CryptidToken.setProvenanceHash",
      "offset": [
        6399,
        6459
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xB7A"
    },
    "3486": {
      "op": "JUMP"
    },
    "3487": {
      "fn": "CryptidToken.setProvenanceHash",
      "offset": [
        6399,
        6459
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "3488": {
      "fn": "CryptidToken.setProvenanceHash",
      "offset": [
        6469,
        6501
      ],
      "op": "DUP1",
      "path": "16",
      "statement": 14
    },
    "3489": {
      "fn": "CryptidToken.setProvenanceHash",
      "offset": [
        6469,
        6501
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "3490": {
      "fn": "CryptidToken.setProvenanceHash",
      "offset": [
        6469,
        6501
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xDB2"
    },
    "3493": {
      "fn": "CryptidToken.setProvenanceHash",
      "offset": [
        6469,
        6501
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "3494": {
      "fn": "CryptidToken.setProvenanceHash",
      "offset": [
        6469,
        6483
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0xE"
    },
    "3496": {
      "fn": "CryptidToken.setProvenanceHash",
      "offset": [
        6469,
        6483
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "3497": {
      "fn": "CryptidToken.setProvenanceHash",
      "offset": [
        6469,
        6501
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "3499": {
      "fn": "CryptidToken.setProvenanceHash",
      "offset": [
        6469,
        6501
      ],
      "op": "DUP5",
      "path": "16"
    },
    "3500": {
      "fn": "CryptidToken.setProvenanceHash",
      "offset": [
        6469,
        6501
      ],
      "op": "ADD",
      "path": "16"
    },
    "3501": {
      "fn": "CryptidToken.setProvenanceHash",
      "offset": [
        6469,
        6501
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "3502": {
      "fn": "CryptidToken.setProvenanceHash",
      "offset": [
        6469,
        6501
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x2E7F"
    },
    "3505": {
      "fn": "CryptidToken.setProvenanceHash",
      "jump": "i",
      "offset": [
        6469,
        6501
      ],
      "op": "JUMP",
      "path": "16"
    },
    "3506": {
      "fn": "CryptidToken.setProvenanceHash",
      "offset": [
        6469,
        6501
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "3507": {
      "fn": "CryptidToken.setProvenanceHash",
      "offset": [
        6469,
        6501
      ],
      "op": "POP",
      "path": "16"
    },
    "3508": {
      "fn": "CryptidToken.setProvenanceHash",
      "offset": [
        6217,
        6508
      ],
      "op": "POP",
      "path": "16"
    },
    "3509": {
      "fn": "CryptidToken.setProvenanceHash",
      "jump": "o",
      "offset": [
        6217,
        6508
      ],
      "op": "JUMP",
      "path": "16"
    },
    "3510": {
      "fn": "CryptidToken.totalSupply",
      "offset": [
        7640,
        7755
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "3511": {
      "fn": "CryptidToken.totalSupply",
      "offset": [
        7693,
        7700
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "3513": {
      "fn": "CryptidToken.totalSupply",
      "offset": [
        7747,
        7748
      ],
      "op": "PUSH1",
      "path": "16",
      "statement": 15,
      "value": "0x1"
    },
    "3515": {
      "fn": "CryptidToken.totalSupply",
      "offset": [
        7719,
        7744
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xDC3"
    },
    "3518": {
      "fn": "CryptidToken.totalSupply",
      "offset": [
        7719,
        7734
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0xC"
    },
    "3520": {
      "fn": "Counters.current",
      "offset": [
        918,
        932
      ],
      "op": "SLOAD",
      "path": "11",
      "statement": 16
    },
    "3521": {
      "fn": "Counters.current",
      "offset": [
        918,
        932
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "3522": {
      "fn": "Counters.current",
      "offset": [
        827,
        939
      ],
      "op": "JUMP",
      "path": "11"
    },
    "3523": {
      "fn": "CryptidToken.totalSupply",
      "offset": [
        7719,
        7744
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "3524": {
      "fn": "CryptidToken.totalSupply",
      "offset": [
        7719,
        7748
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xDCD"
    },
    "3527": {
      "fn": "CryptidToken.totalSupply",
      "offset": [
        7719,
        7748
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "3528": {
      "fn": "CryptidToken.totalSupply",
      "offset": [
        7719,
        7748
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "3529": {
      "fn": "CryptidToken.totalSupply",
      "offset": [
        7719,
        7748
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x3419"
    },
    "3532": {
      "fn": "CryptidToken.totalSupply",
      "jump": "i",
      "offset": [
        7719,
        7748
      ],
      "op": "JUMP",
      "path": "16"
    },
    "3533": {
      "fn": "CryptidToken.totalSupply",
      "offset": [
        7719,
        7748
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "3534": {
      "fn": "CryptidToken.totalSupply",
      "offset": [
        7712,
        7748
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "3535": {
      "fn": "CryptidToken.totalSupply",
      "offset": [
        7712,
        7748
      ],
      "op": "POP",
      "path": "16"
    },
    "3536": {
      "fn": "CryptidToken.totalSupply",
      "offset": [
        7640,
        7755
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "3537": {
      "fn": "CryptidToken.totalSupply",
      "jump": "o",
      "offset": [
        7640,
        7755
      ],
      "op": "JUMP",
      "path": "16"
    },
    "3538": {
      "fn": "CryptidToken.setTeamMintSupply",
      "offset": [
        5711,
        5837
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "3539": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xA"
    },
    "3541": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "3542": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3544": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3546": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3548": {
      "op": "SHL"
    },
    "3549": {
      "op": "SUB"
    },
    "3550": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x100"
    },
    "3553": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3554": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "3555": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "DIV",
      "path": "0"
    },
    "3556": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "AND",
      "path": "0"
    },
    "3557": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "10"
    },
    "3558": {
      "offset": [
        1248,
        1271
      ],
      "op": "EQ",
      "path": "0"
    },
    "3559": {
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xE02"
    },
    "3562": {
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "3563": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "3565": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "3566": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3570": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3572": {
      "op": "SHL"
    },
    "3573": {
      "offset": [
        1240,
        1308
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3574": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3575": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "3577": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "ADD",
      "path": "0"
    },
    "3578": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xB7A"
    },
    "3581": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3582": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x33CE"
    },
    "3585": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMP",
      "path": "0"
    },
    "3586": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3587": {
      "fn": "CryptidToken.setTeamMintSupply",
      "offset": [
        5795,
        5809
      ],
      "op": "PUSH1",
      "path": "16",
      "statement": 17,
      "value": "0x14"
    },
    "3589": {
      "fn": "CryptidToken.setTeamMintSupply",
      "offset": [
        5795,
        5830
      ],
      "op": "SSTORE",
      "path": "16"
    },
    "3590": {
      "fn": "CryptidToken.setTeamMintSupply",
      "jump": "o",
      "offset": [
        5711,
        5837
      ],
      "op": "JUMP",
      "path": "16"
    },
    "3591": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4711,
        5041
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "3592": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4900,
        4941
      ],
      "op": "PUSH2",
      "path": "3",
      "statement": 18,
      "value": "0xE11"
    },
    "3595": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "10"
    },
    "3596": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4933,
        4940
      ],
      "op": "DUP3",
      "path": "3"
    },
    "3597": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4900,
        4918
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x227F"
    },
    "3600": {
      "fn": "ERC721.transferFrom",
      "jump": "i",
      "offset": [
        4900,
        4941
      ],
      "op": "JUMP",
      "path": "3"
    },
    "3601": {
      "branch": 173,
      "fn": "ERC721.transferFrom",
      "offset": [
        4900,
        4941
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "3602": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4892,
        4995
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xE2D"
    },
    "3605": {
      "branch": 173,
      "fn": "ERC721.transferFrom",
      "offset": [
        4892,
        4995
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "3606": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4892,
        4995
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "3608": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4892,
        4995
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "3609": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3613": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3615": {
      "op": "SHL"
    },
    "3616": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4892,
        4995
      ],
      "op": "DUP2",
      "path": "3"
    },
    "3617": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4892,
        4995
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "3618": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4892,
        4995
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "3620": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4892,
        4995
      ],
      "op": "ADD",
      "path": "3"
    },
    "3621": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4892,
        4995
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xB7A"
    },
    "3624": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4892,
        4995
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "3625": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4892,
        4995
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x3430"
    },
    "3628": {
      "fn": "ERC721.transferFrom",
      "jump": "i",
      "offset": [
        4892,
        4995
      ],
      "op": "JUMP",
      "path": "3"
    },
    "3629": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4892,
        4995
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "3630": {
      "fn": "ERC721.transferFrom",
      "offset": [
        5006,
        5034
      ],
      "op": "PUSH2",
      "path": "3",
      "statement": 19,
      "value": "0xCB0"
    },
    "3633": {
      "fn": "ERC721.transferFrom",
      "offset": [
        5016,
        5020
      ],
      "op": "DUP4",
      "path": "3"
    },
    "3634": {
      "fn": "ERC721.transferFrom",
      "offset": [
        5022,
        5024
      ],
      "op": "DUP4",
      "path": "3"
    },
    "3635": {
      "fn": "ERC721.transferFrom",
      "offset": [
        5026,
        5033
      ],
      "op": "DUP4",
      "path": "3"
    },
    "3636": {
      "fn": "ERC721.transferFrom",
      "offset": [
        5006,
        5015
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2376"
    },
    "3639": {
      "fn": "ERC721.transferFrom",
      "jump": "i",
      "offset": [
        5006,
        5034
      ],
      "op": "JUMP",
      "path": "3"
    },
    "3640": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1291,
        1544
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "3641": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1388,
        1395
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "3643": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1423,
        1446
      ],
      "op": "PUSH2",
      "path": "6",
      "statement": 20,
      "value": "0xE43"
    },
    "3646": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1440,
        1445
      ],
      "op": "DUP4",
      "path": "6"
    },
    "3647": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1423,
        1439
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1633"
    },
    "3650": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "jump": "i",
      "offset": [
        1423,
        1446
      ],
      "op": "JUMP",
      "path": "6"
    },
    "3651": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1423,
        1446
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "3652": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1415,
        1420
      ],
      "op": "DUP3",
      "path": "6"
    },
    "3653": {
      "branch": 183,
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1415,
        1446
      ],
      "op": "LT",
      "path": "6"
    },
    "3654": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1407,
        1494
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xEA5"
    },
    "3657": {
      "branch": 183,
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1407,
        1494
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "3658": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1407,
        1494
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "3660": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1407,
        1494
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "3661": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3665": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3667": {
      "op": "SHL"
    },
    "3668": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1407,
        1494
      ],
      "op": "DUP2",
      "path": "6"
    },
    "3669": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1407,
        1494
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "3670": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3672": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1407,
        1494
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "3674": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1407,
        1494
      ],
      "op": "DUP3",
      "path": "6"
    },
    "3675": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1407,
        1494
      ],
      "op": "ADD",
      "path": "6"
    },
    "3676": {
      "op": "MSTORE"
    },
    "3677": {
      "op": "PUSH1",
      "value": "0x2B"
    },
    "3679": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3681": {
      "op": "DUP3"
    },
    "3682": {
      "op": "ADD"
    },
    "3683": {
      "op": "MSTORE"
    },
    "3684": {
      "op": "PUSH32",
      "value": "0x455243373231456E756D657261626C653A206F776E657220696E646578206F75"
    },
    "3717": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "3719": {
      "op": "DUP3"
    },
    "3720": {
      "op": "ADD"
    },
    "3721": {
      "op": "MSTORE"
    },
    "3722": {
      "op": "PUSH11",
      "value": "0x74206F6620626F756E6473"
    },
    "3734": {
      "op": "PUSH1",
      "value": "0xA8"
    },
    "3736": {
      "op": "SHL"
    },
    "3737": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "3739": {
      "op": "DUP3"
    },
    "3740": {
      "op": "ADD"
    },
    "3741": {
      "op": "MSTORE"
    },
    "3742": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "3744": {
      "op": "ADD"
    },
    "3745": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1407,
        1494
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xB7A"
    },
    "3748": {
      "op": "JUMP"
    },
    "3749": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1407,
        1494
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "3750": {
      "op": "POP"
    },
    "3751": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3753": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3755": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3757": {
      "op": "SHL"
    },
    "3758": {
      "op": "SUB"
    },
    "3759": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1511,
        1530
      ],
      "op": "SWAP2",
      "path": "6",
      "statement": 21
    },
    "3760": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1511,
        1530
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "3761": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1511,
        1530
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "3762": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1511,
        1530
      ],
      "op": "AND",
      "path": "6"
    },
    "3763": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1511,
        1530
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "3765": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1511,
        1530
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "3766": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1511,
        1530
      ],
      "op": "DUP2",
      "path": "6"
    },
    "3767": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1511,
        1530
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "3768": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1511,
        1523
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x6"
    },
    "3770": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1511,
        1530
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "3772": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1511,
        1530
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "3773": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1511,
        1530
      ],
      "op": "DUP2",
      "path": "6"
    },
    "3774": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1511,
        1530
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "3775": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1511,
        1530
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "3777": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1511,
        1530
      ],
      "op": "DUP1",
      "path": "6"
    },
    "3778": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1511,
        1530
      ],
      "op": "DUP4",
      "path": "6"
    },
    "3779": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1511,
        1530
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "3780": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1511,
        1537
      ],
      "op": "SWAP4",
      "path": "6"
    },
    "3781": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1511,
        1537
      ],
      "op": "DUP4",
      "path": "6"
    },
    "3782": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1511,
        1537
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "3783": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1511,
        1537
      ],
      "op": "SWAP3",
      "path": "6"
    },
    "3784": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1511,
        1537
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "3785": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1511,
        1537
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "3786": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1511,
        1537
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "3787": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1511,
        1537
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "3788": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1511,
        1537
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "3789": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "jump": "o",
      "offset": [
        1291,
        1544
      ],
      "op": "JUMP",
      "path": "6"
    },
    "3790": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3046,
        3689
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "3791": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3190,
        3200
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0xD"
    },
    "3793": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3190,
        3200
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "3794": {
      "offset": [
        2359,
        2387
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "3796": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        2359,
        2387
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "3797": {
      "op": "PUSH12",
      "value": "0xFFFFFFFFFFFFFFFFFFFFFFFF"
    },
    "3810": {
      "op": "NOT"
    },
    "3811": {
      "offset": [
        2376,
        2386
      ],
      "op": "CALLER",
      "path": "16"
    },
    "3812": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "3814": {
      "op": "SHL"
    },
    "3815": {
      "op": "AND"
    },
    "3816": {
      "offset": [
        2359,
        2387
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "3818": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        2359,
        2387
      ],
      "op": "DUP3",
      "path": "16"
    },
    "3819": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        2359,
        2387
      ],
      "op": "ADD",
      "path": "16"
    },
    "3820": {
      "op": "MSTORE"
    },
    "3821": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3177,
        3188
      ],
      "op": "DUP4",
      "path": "16"
    },
    "3822": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3177,
        3188
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "3823": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3177,
        3188
      ],
      "op": "DUP4",
      "path": "16"
    },
    "3824": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3177,
        3188
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "3825": {
      "offset": [
        2330,
        2389
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xF4C"
    },
    "3828": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        2330,
        2389
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "3829": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3190,
        3200
      ],
      "op": "DUP3",
      "path": "16"
    },
    "3830": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3190,
        3200
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "3831": {
      "op": "PUSH1",
      "value": "0x34"
    },
    "3833": {
      "op": "ADD"
    },
    "3834": {
      "offset": [
        2359,
        2387
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "3836": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        2359,
        2387
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "3837": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        2359,
        2387
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "3839": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        2359,
        2387
      ],
      "op": "DUP2",
      "path": "16"
    },
    "3840": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        2359,
        2387
      ],
      "op": "DUP4",
      "path": "16"
    },
    "3841": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        2359,
        2387
      ],
      "op": "SUB",
      "path": "16"
    },
    "3842": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        2359,
        2387
      ],
      "op": "SUB",
      "path": "16"
    },
    "3843": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        2359,
        2387
      ],
      "op": "DUP2",
      "path": "16"
    },
    "3844": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        2359,
        2387
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "3845": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        2359,
        2387
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "3846": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        2359,
        2387
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "3848": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        2359,
        2387
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "3849": {
      "offset": [
        2349,
        2388
      ],
      "op": "DUP1",
      "path": "16"
    },
    "3850": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        2349,
        2388
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "3851": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        2349,
        2388
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "3852": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        2349,
        2388
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "3854": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        2349,
        2388
      ],
      "op": "ADD",
      "path": "16"
    },
    "3855": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        2349,
        2388
      ],
      "op": "KECCAK256",
      "path": "16"
    },
    "3856": {
      "offset": [
        2330,
        2335
      ],
      "op": "DUP6",
      "path": "16"
    },
    "3857": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        2330,
        2335
      ],
      "op": "DUP6",
      "path": "16"
    },
    "3858": {
      "offset": [
        2330,
        2342
      ],
      "op": "DUP1",
      "path": "16"
    },
    "3859": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        2330,
        2342
      ],
      "op": "DUP1",
      "path": "16"
    },
    "3860": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        2330,
        2342
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "3862": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        2330,
        2342
      ],
      "op": "MUL",
      "path": "16"
    },
    "3863": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        2330,
        2342
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "3865": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        2330,
        2342
      ],
      "op": "ADD",
      "path": "16"
    },
    "3866": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        2330,
        2342
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "3868": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        2330,
        2342
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "3869": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        2330,
        2342
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "3870": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        2330,
        2342
      ],
      "op": "DUP2",
      "path": "16"
    },
    "3871": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        2330,
        2342
      ],
      "op": "ADD",
      "path": "16"
    },
    "3872": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        2330,
        2342
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "3874": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        2330,
        2342
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "3875": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        2330,
        2342
      ],
      "op": "DUP1",
      "path": "16"
    },
    "3876": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        2330,
        2342
      ],
      "op": "SWAP4",
      "path": "16"
    },
    "3877": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        2330,
        2342
      ],
      "op": "SWAP3",
      "path": "16"
    },
    "3878": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        2330,
        2342
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "3879": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        2330,
        2342
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "3880": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        2330,
        2342
      ],
      "op": "DUP2",
      "path": "16"
    },
    "3881": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        2330,
        2342
      ],
      "op": "DUP2",
      "path": "16"
    },
    "3882": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        2330,
        2342
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "3883": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        2330,
        2342
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "3885": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        2330,
        2342
      ],
      "op": "ADD",
      "path": "16"
    },
    "3886": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        2330,
        2342
      ],
      "op": "DUP4",
      "path": "16"
    },
    "3887": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        2330,
        2342
      ],
      "op": "DUP4",
      "path": "16"
    },
    "3888": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        2330,
        2342
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "3890": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        2330,
        2342
      ],
      "op": "MUL",
      "path": "16"
    },
    "3891": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        2330,
        2342
      ],
      "op": "DUP1",
      "path": "16"
    },
    "3892": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        2330,
        2342
      ],
      "op": "DUP3",
      "path": "16"
    },
    "3893": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        2330,
        2342
      ],
      "op": "DUP5",
      "path": "16"
    },
    "3894": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        2330,
        2342
      ],
      "op": "CALLDATACOPY",
      "path": "16"
    },
    "3895": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        2330,
        2342
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "3897": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        2330,
        2342
      ],
      "op": "SWAP3",
      "path": "16"
    },
    "3898": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        2330,
        2342
      ],
      "op": "ADD",
      "path": "16"
    },
    "3899": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        2330,
        2342
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "3900": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        2330,
        2342
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "3901": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        2330,
        2342
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "3902": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        2330,
        2342
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "3903": {
      "op": "POP"
    },
    "3904": {
      "offset": [
        2330,
        2342
      ],
      "op": "SWAP3",
      "path": "16"
    },
    "3905": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        2330,
        2342
      ],
      "op": "SWAP5",
      "path": "16"
    },
    "3906": {
      "offset": [
        2330,
        2389
      ],
      "op": "SWAP4",
      "path": "16"
    },
    "3907": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        2330,
        2389
      ],
      "op": "SWAP3",
      "path": "16"
    },
    "3908": {
      "op": "POP"
    },
    "3909": {
      "op": "POP"
    },
    "3910": {
      "offset": [
        2330,
        2342
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x2521"
    },
    "3913": {
      "offset": [
        2330,
        2389
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "3914": {
      "op": "POP"
    },
    "3915": {
      "jump": "i",
      "offset": [
        2330,
        2389
      ],
      "op": "JUMP",
      "path": "16"
    },
    "3916": {
      "branch": 153,
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        2330,
        2389
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "3917": {
      "offset": [
        2322,
        2419
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xF98"
    },
    "3920": {
      "branch": 153,
      "offset": [
        2322,
        2419
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "3921": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        2322,
        2419
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "3923": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        2322,
        2419
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "3924": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3928": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3930": {
      "op": "SHL"
    },
    "3931": {
      "offset": [
        2322,
        2419
      ],
      "op": "DUP2",
      "path": "16"
    },
    "3932": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        2322,
        2419
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "3933": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3935": {
      "offset": [
        2322,
        2419
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "3937": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        2322,
        2419
      ],
      "op": "DUP3",
      "path": "16"
    },
    "3938": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        2322,
        2419
      ],
      "op": "ADD",
      "path": "16"
    },
    "3939": {
      "op": "MSTORE"
    },
    "3940": {
      "op": "PUSH1",
      "value": "0x19"
    },
    "3942": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3944": {
      "op": "DUP3"
    },
    "3945": {
      "op": "ADD"
    },
    "3946": {
      "op": "MSTORE"
    },
    "3947": {
      "op": "PUSH32",
      "value": "0x41646472657373206E6F7420696E2077686974656C6973742E00000000000000"
    },
    "3980": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "3982": {
      "op": "DUP3"
    },
    "3983": {
      "op": "ADD"
    },
    "3984": {
      "op": "MSTORE"
    },
    "3985": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "3987": {
      "op": "ADD"
    },
    "3988": {
      "offset": [
        2322,
        2419
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xB7A"
    },
    "3991": {
      "op": "JUMP"
    },
    "3992": {
      "offset": [
        2322,
        2419
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "3993": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3228,
        3237
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x17"
    },
    "3995": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3228,
        3237
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "3996": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3239,
        3240
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x1"
    },
    "3998": {
      "offset": [
        2552,
        2561
      ],
      "op": "CALLVALUE",
      "path": "16"
    },
    "3999": {
      "offset": [
        2526,
        2548
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xFA8"
    },
    "4002": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3239,
        3240
      ],
      "op": "DUP3",
      "path": "16"
    },
    "4003": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3228,
        3237
      ],
      "op": "DUP5",
      "path": "16"
    },
    "4004": {
      "offset": [
        2526,
        2548
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x3481"
    },
    "4007": {
      "fn": "CryptidToken.whitelistMint",
      "jump": "i",
      "offset": [
        2526,
        2548
      ],
      "op": "JUMP",
      "path": "16"
    },
    "4008": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        2526,
        2548
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "4009": {
      "offset": [
        2526,
        2561
      ],
      "op": "EQ",
      "path": "16"
    },
    "4010": {
      "offset": [
        2518,
        2591
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xFF1"
    },
    "4013": {
      "offset": [
        2518,
        2591
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "4014": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        2518,
        2591
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "4016": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        2518,
        2591
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "4017": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4021": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4023": {
      "op": "SHL"
    },
    "4024": {
      "offset": [
        2518,
        2591
      ],
      "op": "DUP2",
      "path": "16"
    },
    "4025": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        2518,
        2591
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "4026": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4028": {
      "offset": [
        2518,
        2591
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "4030": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        2518,
        2591
      ],
      "op": "DUP3",
      "path": "16"
    },
    "4031": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        2518,
        2591
      ],
      "op": "ADD",
      "path": "16"
    },
    "4032": {
      "op": "MSTORE"
    },
    "4033": {
      "op": "PUSH1",
      "value": "0x19"
    },
    "4035": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4037": {
      "op": "DUP3"
    },
    "4038": {
      "op": "ADD"
    },
    "4039": {
      "op": "MSTORE"
    },
    "4040": {
      "op": "PUSH25",
      "value": "0x24B731B7B93932B1BA1022AA24103B30B63AB29039B2B73A17"
    },
    "4066": {
      "op": "PUSH1",
      "value": "0x39"
    },
    "4068": {
      "op": "SHL"
    },
    "4069": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "4071": {
      "op": "DUP3"
    },
    "4072": {
      "op": "ADD"
    },
    "4073": {
      "op": "MSTORE"
    },
    "4074": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "4076": {
      "op": "ADD"
    },
    "4077": {
      "offset": [
        2518,
        2591
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xB7A"
    },
    "4080": {
      "op": "JUMP"
    },
    "4081": {
      "offset": [
        2518,
        2591
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "4082": {
      "offset": [
        1744,
        1745
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x2"
    },
    "4084": {
      "offset": [
        2325,
        2332
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xB"
    },
    "4086": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        2325,
        2332
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "4087": {
      "offset": [
        2325,
        2344
      ],
      "op": "EQ",
      "path": "2"
    },
    "4088": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        2325,
        2344
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "4089": {
      "offset": [
        2317,
        2380
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1044"
    },
    "4092": {
      "offset": [
        2317,
        2380
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "4093": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        2317,
        2380
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "4095": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        2317,
        2380
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "4096": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4100": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4102": {
      "op": "SHL"
    },
    "4103": {
      "offset": [
        2317,
        2380
      ],
      "op": "DUP2",
      "path": "2"
    },
    "4104": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        2317,
        2380
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "4105": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4107": {
      "offset": [
        2317,
        2380
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "4109": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        2317,
        2380
      ],
      "op": "DUP3",
      "path": "2"
    },
    "4110": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        2317,
        2380
      ],
      "op": "ADD",
      "path": "2"
    },
    "4111": {
      "op": "MSTORE"
    },
    "4112": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "4114": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4116": {
      "op": "DUP3"
    },
    "4117": {
      "op": "ADD"
    },
    "4118": {
      "op": "MSTORE"
    },
    "4119": {
      "op": "PUSH32",
      "value": "0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00"
    },
    "4152": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "4154": {
      "op": "DUP3"
    },
    "4155": {
      "op": "ADD"
    },
    "4156": {
      "op": "MSTORE"
    },
    "4157": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "4159": {
      "op": "ADD"
    },
    "4160": {
      "offset": [
        2317,
        2380
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xB7A"
    },
    "4163": {
      "op": "JUMP"
    },
    "4164": {
      "offset": [
        2317,
        2380
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "4165": {
      "offset": [
        1744,
        1745
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x2"
    },
    "4167": {
      "offset": [
        2455,
        2462
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xB"
    },
    "4169": {
      "offset": [
        2455,
        2473
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "4170": {
      "fn": "Pausable.paused",
      "offset": [
        1168,
        1175
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xA"
    },
    "4172": {
      "fn": "Pausable.paused",
      "offset": [
        1168,
        1175
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "4173": {
      "fn": "Pausable.paused",
      "offset": [
        1168,
        1175
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xFF"
    },
    "4175": {
      "fn": "Pausable.paused",
      "offset": [
        1168,
        1175
      ],
      "op": "AND",
      "path": "1"
    },
    "4176": {
      "offset": [
        1411,
        1420
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "4177": {
      "offset": [
        1403,
        1441
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x106C"
    },
    "4180": {
      "offset": [
        1403,
        1441
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "4181": {
      "fn": "Pausable.paused",
      "offset": [
        1403,
        1441
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "4183": {
      "fn": "Pausable.paused",
      "offset": [
        1403,
        1441
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "4184": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4188": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4190": {
      "op": "SHL"
    },
    "4191": {
      "offset": [
        1403,
        1441
      ],
      "op": "DUP2",
      "path": "1"
    },
    "4192": {
      "fn": "Pausable.paused",
      "offset": [
        1403,
        1441
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "4193": {
      "fn": "Pausable.paused",
      "offset": [
        1403,
        1441
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "4195": {
      "fn": "Pausable.paused",
      "offset": [
        1403,
        1441
      ],
      "op": "ADD",
      "path": "1"
    },
    "4196": {
      "fn": "Pausable.paused",
      "offset": [
        1403,
        1441
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xB7A"
    },
    "4199": {
      "fn": "Pausable.paused",
      "offset": [
        1403,
        1441
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "4200": {
      "fn": "Pausable.paused",
      "offset": [
        1403,
        1441
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x34A0"
    },
    "4203": {
      "fn": "Pausable.paused",
      "jump": "i",
      "offset": [
        1403,
        1441
      ],
      "op": "JUMP",
      "path": "1"
    },
    "4204": {
      "fn": "Pausable.paused",
      "offset": [
        1403,
        1441
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "4205": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3319,
        3334
      ],
      "op": "PUSH1",
      "path": "16",
      "statement": 22,
      "value": "0x1"
    },
    "4207": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3310,
        3315
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x18"
    },
    "4209": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3310,
        3315
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "4210": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3310,
        3315
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0xFF"
    },
    "4212": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3310,
        3315
      ],
      "op": "AND",
      "path": "16"
    },
    "4213": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3310,
        3334
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x3"
    },
    "4215": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3310,
        3334
      ],
      "op": "DUP2",
      "path": "16"
    },
    "4216": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3310,
        3334
      ],
      "op": "GT",
      "path": "16"
    },
    "4217": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3310,
        3334
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "4218": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3310,
        3334
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1085"
    },
    "4221": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3310,
        3334
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "4222": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3310,
        3334
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1085"
    },
    "4225": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3310,
        3334
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x3318"
    },
    "4228": {
      "fn": "CryptidToken.whitelistMint",
      "jump": "i",
      "offset": [
        3310,
        3334
      ],
      "op": "JUMP",
      "path": "16"
    },
    "4229": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3310,
        3334
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "4230": {
      "branch": 154,
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3310,
        3334
      ],
      "op": "EQ",
      "path": "16"
    },
    "4231": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3302,
        3368
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x10D2"
    },
    "4234": {
      "branch": 154,
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3302,
        3368
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "4235": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3302,
        3368
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "4237": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3302,
        3368
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "4238": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4242": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4244": {
      "op": "SHL"
    },
    "4245": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3302,
        3368
      ],
      "op": "DUP2",
      "path": "16"
    },
    "4246": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3302,
        3368
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "4247": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4249": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3302,
        3368
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "4251": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3302,
        3368
      ],
      "op": "DUP3",
      "path": "16"
    },
    "4252": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3302,
        3368
      ],
      "op": "ADD",
      "path": "16"
    },
    "4253": {
      "op": "MSTORE"
    },
    "4254": {
      "op": "PUSH1",
      "value": "0x1D"
    },
    "4256": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4258": {
      "op": "DUP3"
    },
    "4259": {
      "op": "ADD"
    },
    "4260": {
      "op": "MSTORE"
    },
    "4261": {
      "op": "PUSH32",
      "value": "0x57686974656C6973742073616C65206E6F7420696E697469617465642E000000"
    },
    "4294": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "4296": {
      "op": "DUP3"
    },
    "4297": {
      "op": "ADD"
    },
    "4298": {
      "op": "MSTORE"
    },
    "4299": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "4301": {
      "op": "ADD"
    },
    "4302": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3302,
        3368
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xB7A"
    },
    "4305": {
      "op": "JUMP"
    },
    "4306": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3302,
        3368
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "4307": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3394,
        3404
      ],
      "op": "CALLER",
      "path": "16",
      "statement": 23
    },
    "4308": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3386,
        3405
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "4310": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3386,
        3405
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "4311": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3386,
        3405
      ],
      "op": "DUP2",
      "path": "16"
    },
    "4312": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3386,
        3405
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "4313": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3386,
        3393
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x13"
    },
    "4315": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3386,
        3405
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "4317": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3386,
        3405
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "4318": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3386,
        3405
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "4320": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3386,
        3405
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "4321": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3386,
        3405
      ],
      "op": "KECCAK256",
      "path": "16"
    },
    "4322": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3386,
        3405
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "4323": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3386,
        3405
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0xFF"
    },
    "4325": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3386,
        3405
      ],
      "op": "AND",
      "path": "16"
    },
    "4326": {
      "branch": 155,
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3386,
        3414
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "4327": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3378,
        3450
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1132"
    },
    "4330": {
      "branch": 155,
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3378,
        3450
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "4331": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3378,
        3450
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "4333": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3378,
        3450
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "4334": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4338": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4340": {
      "op": "SHL"
    },
    "4341": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3378,
        3450
      ],
      "op": "DUP2",
      "path": "16"
    },
    "4342": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3378,
        3450
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "4343": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4345": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3378,
        3450
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "4347": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3378,
        3450
      ],
      "op": "DUP3",
      "path": "16"
    },
    "4348": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3378,
        3450
      ],
      "op": "ADD",
      "path": "16"
    },
    "4349": {
      "op": "MSTORE"
    },
    "4350": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "4352": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4354": {
      "op": "DUP3"
    },
    "4355": {
      "op": "ADD"
    },
    "4356": {
      "op": "MSTORE"
    },
    "4357": {
      "op": "PUSH32",
      "value": "0x57686974656C697374206D696E7420616C726561647920636C61696D65642E00"
    },
    "4390": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "4392": {
      "op": "DUP3"
    },
    "4393": {
      "op": "ADD"
    },
    "4394": {
      "op": "MSTORE"
    },
    "4395": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "4397": {
      "op": "ADD"
    },
    "4398": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3378,
        3450
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xB7A"
    },
    "4401": {
      "op": "JUMP"
    },
    "4402": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3378,
        3450
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "4403": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3490,
        3505
      ],
      "op": "PUSH1",
      "path": "16",
      "statement": 24,
      "value": "0x12"
    },
    "4405": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3490,
        3505
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "4406": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3469,
        3482
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x113D"
    },
    "4409": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3469,
        3480
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xDB6"
    },
    "4412": {
      "fn": "CryptidToken.whitelistMint",
      "jump": "i",
      "offset": [
        3469,
        3482
      ],
      "op": "JUMP",
      "path": "16"
    },
    "4413": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3469,
        3482
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "4414": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3469,
        3486
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1148"
    },
    "4417": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3469,
        3486
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "4418": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3485,
        3486
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x1"
    },
    "4420": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3469,
        3486
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x34CA"
    },
    "4423": {
      "fn": "CryptidToken.whitelistMint",
      "jump": "i",
      "offset": [
        3469,
        3486
      ],
      "op": "JUMP",
      "path": "16"
    },
    "4424": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3469,
        3486
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "4425": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3469,
        3505
      ],
      "op": "GT",
      "path": "16"
    },
    "4426": {
      "branch": 156,
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3469,
        3505
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "4427": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3461,
        3551
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x11A8"
    },
    "4430": {
      "branch": 156,
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3461,
        3551
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "4431": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3461,
        3551
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "4433": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3461,
        3551
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "4434": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4438": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4440": {
      "op": "SHL"
    },
    "4441": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3461,
        3551
      ],
      "op": "DUP2",
      "path": "16"
    },
    "4442": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3461,
        3551
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "4443": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4445": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3461,
        3551
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "4447": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3461,
        3551
      ],
      "op": "DUP3",
      "path": "16"
    },
    "4448": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3461,
        3551
      ],
      "op": "ADD",
      "path": "16"
    },
    "4449": {
      "op": "MSTORE"
    },
    "4450": {
      "op": "PUSH1",
      "value": "0x29"
    },
    "4452": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4454": {
      "op": "DUP3"
    },
    "4455": {
      "op": "ADD"
    },
    "4456": {
      "op": "MSTORE"
    },
    "4457": {
      "op": "PUSH32",
      "value": "0x4D696E7420616D6F756E742077696C6C206578636565642077686974656C6973"
    },
    "4490": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "4492": {
      "op": "DUP3"
    },
    "4493": {
      "op": "ADD"
    },
    "4494": {
      "op": "MSTORE"
    },
    "4495": {
      "op": "PUSH9",
      "value": "0x3A1039BAB838363C97"
    },
    "4505": {
      "op": "PUSH1",
      "value": "0xB9"
    },
    "4507": {
      "op": "SHL"
    },
    "4508": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "4510": {
      "op": "DUP3"
    },
    "4511": {
      "op": "ADD"
    },
    "4512": {
      "op": "MSTORE"
    },
    "4513": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "4515": {
      "op": "ADD"
    },
    "4516": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3461,
        3551
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xB7A"
    },
    "4519": {
      "op": "JUMP"
    },
    "4520": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3461,
        3551
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "4521": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3569,
        3579
      ],
      "op": "CALLER",
      "path": "16",
      "statement": 25
    },
    "4522": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3561,
        3580
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "4524": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3561,
        3580
      ],
      "op": "DUP2",
      "path": "16"
    },
    "4525": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3561,
        3580
      ],
      "op": "DUP2",
      "path": "16"
    },
    "4526": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3561,
        3580
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "4527": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3561,
        3568
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x13"
    },
    "4529": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3561,
        3580
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "4531": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3561,
        3580
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "4532": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3561,
        3580
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "4534": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3561,
        3580
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "4535": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3561,
        3580
      ],
      "op": "KECCAK256",
      "path": "16"
    },
    "4536": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3561,
        3587
      ],
      "op": "DUP1",
      "path": "16"
    },
    "4537": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3561,
        3587
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "4538": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "4540": {
      "op": "NOT"
    },
    "4541": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3561,
        3587
      ],
      "op": "AND",
      "path": "16"
    },
    "4542": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3583,
        3587
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x1"
    },
    "4544": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3561,
        3587
      ],
      "op": "OR",
      "path": "16"
    },
    "4545": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3561,
        3587
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "4546": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3561,
        3587
      ],
      "op": "SSTORE",
      "path": "16"
    },
    "4547": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3597,
        3645
      ],
      "op": "PUSH2",
      "path": "16",
      "statement": 26,
      "value": "0x11D4"
    },
    "4550": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3597,
        3645
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "4551": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3619,
        3644
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x11CF"
    },
    "4554": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3619,
        3634
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0xC"
    },
    "4556": {
      "fn": "Counters.current",
      "offset": [
        918,
        932
      ],
      "op": "SLOAD",
      "path": "11"
    },
    "4557": {
      "fn": "Counters.current",
      "offset": [
        918,
        932
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "4558": {
      "fn": "Counters.current",
      "offset": [
        827,
        939
      ],
      "op": "JUMP",
      "path": "11"
    },
    "4559": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3619,
        3644
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "4560": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3597,
        3606
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x2537"
    },
    "4563": {
      "fn": "CryptidToken.whitelistMint",
      "jump": "i",
      "offset": [
        3597,
        3645
      ],
      "op": "JUMP",
      "path": "16"
    },
    "4564": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3597,
        3645
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "4565": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3655,
        3682
      ],
      "op": "PUSH2",
      "path": "16",
      "statement": 27,
      "value": "0x11E2"
    },
    "4568": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3655,
        3670
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0xC"
    },
    "4570": {
      "fn": "Counters.increment",
      "offset": [
        1032,
        1051
      ],
      "op": "DUP1",
      "path": "11",
      "statement": 28
    },
    "4571": {
      "fn": "Counters.increment",
      "offset": [
        1032,
        1051
      ],
      "op": "SLOAD",
      "path": "11"
    },
    "4572": {
      "fn": "Counters.increment",
      "offset": [
        1050,
        1051
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x1"
    },
    "4574": {
      "fn": "Counters.increment",
      "offset": [
        1032,
        1051
      ],
      "op": "ADD",
      "path": "11"
    },
    "4575": {
      "fn": "Counters.increment",
      "offset": [
        1032,
        1051
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "4576": {
      "fn": "Counters.increment",
      "offset": [
        1032,
        1051
      ],
      "op": "SSTORE",
      "path": "11"
    },
    "4577": {
      "fn": "Counters.increment",
      "offset": [
        945,
        1068
      ],
      "op": "JUMP",
      "path": "11"
    },
    "4578": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3655,
        3682
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "4579": {
      "op": "POP"
    },
    "4580": {
      "op": "POP"
    },
    "4581": {
      "offset": [
        1701,
        1702
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "4583": {
      "offset": [
        2628,
        2635
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xB"
    },
    "4585": {
      "offset": [
        2628,
        2650
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "4586": {
      "op": "POP"
    },
    "4587": {
      "op": "POP"
    },
    "4588": {
      "op": "POP"
    },
    "4589": {
      "op": "POP"
    },
    "4590": {
      "op": "POP"
    },
    "4591": {
      "fn": "CryptidToken.whitelistMint",
      "jump": "o",
      "offset": [
        3046,
        3689
      ],
      "op": "JUMP",
      "path": "16"
    },
    "4592": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        6914,
        7108
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "4593": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xA"
    },
    "4595": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "4596": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4598": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4600": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4602": {
      "op": "SHL"
    },
    "4603": {
      "op": "SUB"
    },
    "4604": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x100"
    },
    "4607": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4608": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "4609": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "DIV",
      "path": "0"
    },
    "4610": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "AND",
      "path": "0"
    },
    "4611": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "10"
    },
    "4612": {
      "offset": [
        1248,
        1271
      ],
      "op": "EQ",
      "path": "0"
    },
    "4613": {
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1220"
    },
    "4616": {
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "4617": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "4619": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "4620": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4624": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4626": {
      "op": "SHL"
    },
    "4627": {
      "offset": [
        1240,
        1308
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4628": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "4629": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "4631": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "ADD",
      "path": "0"
    },
    "4632": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xB7A"
    },
    "4635": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4636": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x33CE"
    },
    "4639": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMP",
      "path": "0"
    },
    "4640": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4641": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        6998,
        7014
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x11"
    },
    "4643": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        6998,
        7014
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "4644": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        6990,
        7054
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "4646": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        6990,
        7054
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "4647": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        6972,
        6984
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "4649": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        6972,
        6984
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "4650": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        6998,
        7014
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0x1000000"
    },
    "4655": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        6998,
        7014
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "4656": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        6998,
        7014
      ],
      "op": "DIV",
      "path": "16"
    },
    "4657": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4659": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4661": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4663": {
      "op": "SHL"
    },
    "4664": {
      "op": "SUB"
    },
    "4665": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        6998,
        7014
      ],
      "op": "AND",
      "path": "16"
    },
    "4666": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        6998,
        7014
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "4667": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        7028,
        7049
      ],
      "op": "SELFBALANCE",
      "path": "16"
    },
    "4668": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        7028,
        7049
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "4669": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        6972,
        6984
      ],
      "op": "DUP4",
      "path": "16"
    },
    "4670": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        6990,
        7054
      ],
      "op": "DUP2",
      "path": "16"
    },
    "4671": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        6972,
        6984
      ],
      "op": "DUP2",
      "path": "16"
    },
    "4672": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        6990,
        7054
      ],
      "op": "DUP2",
      "path": "16"
    },
    "4673": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        7028,
        7049
      ],
      "op": "DUP6",
      "path": "16"
    },
    "4674": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        6998,
        7014
      ],
      "op": "DUP8",
      "path": "16"
    },
    "4675": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        6990,
        7054
      ],
      "op": "GAS",
      "path": "16"
    },
    "4676": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        6990,
        7054
      ],
      "op": "CALL",
      "path": "16"
    },
    "4677": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        6990,
        7054
      ],
      "op": "SWAP3",
      "path": "16"
    },
    "4678": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        6990,
        7054
      ],
      "op": "POP",
      "path": "16"
    },
    "4679": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        6990,
        7054
      ],
      "op": "POP",
      "path": "16"
    },
    "4680": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        6990,
        7054
      ],
      "op": "POP",
      "path": "16"
    },
    "4681": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        6990,
        7054
      ],
      "op": "RETURNDATASIZE",
      "path": "16"
    },
    "4682": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        6990,
        7054
      ],
      "op": "DUP1",
      "path": "16"
    },
    "4683": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        6990,
        7054
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "4685": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        6990,
        7054
      ],
      "op": "DUP2",
      "path": "16"
    },
    "4686": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        6990,
        7054
      ],
      "op": "EQ",
      "path": "16"
    },
    "4687": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        6990,
        7054
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1274"
    },
    "4690": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        6990,
        7054
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "4691": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        6990,
        7054
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "4693": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        6990,
        7054
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "4694": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        6990,
        7054
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "4695": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        6990,
        7054
      ],
      "op": "POP",
      "path": "16"
    },
    "4696": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        6990,
        7054
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x1F"
    },
    "4698": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        6990,
        7054
      ],
      "op": "NOT",
      "path": "16"
    },
    "4699": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        6990,
        7054
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x3F"
    },
    "4701": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        6990,
        7054
      ],
      "op": "RETURNDATASIZE",
      "path": "16"
    },
    "4702": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        6990,
        7054
      ],
      "op": "ADD",
      "path": "16"
    },
    "4703": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        6990,
        7054
      ],
      "op": "AND",
      "path": "16"
    },
    "4704": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        6990,
        7054
      ],
      "op": "DUP3",
      "path": "16"
    },
    "4705": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        6990,
        7054
      ],
      "op": "ADD",
      "path": "16"
    },
    "4706": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        6990,
        7054
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "4708": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        6990,
        7054
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "4709": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        6990,
        7054
      ],
      "op": "RETURNDATASIZE",
      "path": "16"
    },
    "4710": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        6990,
        7054
      ],
      "op": "DUP3",
      "path": "16"
    },
    "4711": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        6990,
        7054
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "4712": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        6990,
        7054
      ],
      "op": "RETURNDATASIZE",
      "path": "16"
    },
    "4713": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        6990,
        7054
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "4715": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        6990,
        7054
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "4717": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        6990,
        7054
      ],
      "op": "DUP5",
      "path": "16"
    },
    "4718": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        6990,
        7054
      ],
      "op": "ADD",
      "path": "16"
    },
    "4719": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        6990,
        7054
      ],
      "op": "RETURNDATACOPY",
      "path": "16"
    },
    "4720": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        6990,
        7054
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1279"
    },
    "4723": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        6990,
        7054
      ],
      "op": "JUMP",
      "path": "16"
    },
    "4724": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        6990,
        7054
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "4725": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        6990,
        7054
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x60"
    },
    "4727": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        6990,
        7054
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "4728": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        6990,
        7054
      ],
      "op": "POP",
      "path": "16"
    },
    "4729": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        6990,
        7054
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "4730": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        6990,
        7054
      ],
      "op": "POP",
      "path": "16"
    },
    "4731": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        6971,
        7054
      ],
      "op": "POP",
      "path": "16"
    },
    "4732": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        6971,
        7054
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "4733": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        6971,
        7054
      ],
      "op": "POP",
      "path": "16"
    },
    "4734": {
      "branch": 157,
      "fn": "CryptidToken.withdraw",
      "offset": [
        7072,
        7079
      ],
      "op": "DUP1",
      "path": "16",
      "statement": 29
    },
    "4735": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        7064,
        7101
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x12BE"
    },
    "4738": {
      "branch": 157,
      "fn": "CryptidToken.withdraw",
      "offset": [
        7064,
        7101
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "4739": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        7064,
        7101
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "4741": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        7064,
        7101
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "4742": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4746": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4748": {
      "op": "SHL"
    },
    "4749": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        7064,
        7101
      ],
      "op": "DUP2",
      "path": "16"
    },
    "4750": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        7064,
        7101
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "4751": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4753": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        7064,
        7101
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "4755": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        7064,
        7101
      ],
      "op": "DUP3",
      "path": "16"
    },
    "4756": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        7064,
        7101
      ],
      "op": "ADD",
      "path": "16"
    },
    "4757": {
      "op": "MSTORE"
    },
    "4758": {
      "op": "PUSH1",
      "value": "0x11"
    },
    "4760": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4762": {
      "op": "DUP3"
    },
    "4763": {
      "op": "ADD"
    },
    "4764": {
      "op": "MSTORE"
    },
    "4765": {
      "op": "PUSH17",
      "value": "0x2BB4BA34323930BBB6103330B4B632B217"
    },
    "4783": {
      "op": "PUSH1",
      "value": "0x79"
    },
    "4785": {
      "op": "SHL"
    },
    "4786": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "4788": {
      "op": "DUP3"
    },
    "4789": {
      "op": "ADD"
    },
    "4790": {
      "op": "MSTORE"
    },
    "4791": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "4793": {
      "op": "ADD"
    },
    "4794": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        7064,
        7101
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xB7A"
    },
    "4797": {
      "op": "JUMP"
    },
    "4798": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        7064,
        7101
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "4799": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        6961,
        7108
      ],
      "op": "POP",
      "path": "16"
    },
    "4800": {
      "fn": "CryptidToken.withdraw",
      "jump": "o",
      "offset": [
        6914,
        7108
      ],
      "op": "JUMP",
      "path": "16"
    },
    "4801": {
      "fn": "CryptidToken.unpause",
      "offset": [
        4983,
        5048
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "4802": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xA"
    },
    "4804": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "4805": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4807": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4809": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4811": {
      "op": "SHL"
    },
    "4812": {
      "op": "SUB"
    },
    "4813": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x100"
    },
    "4816": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4817": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "4818": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "DIV",
      "path": "0"
    },
    "4819": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "AND",
      "path": "0"
    },
    "4820": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "10"
    },
    "4821": {
      "offset": [
        1248,
        1271
      ],
      "op": "EQ",
      "path": "0"
    },
    "4822": {
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x12F1"
    },
    "4825": {
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "4826": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "4828": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "4829": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4833": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4835": {
      "op": "SHL"
    },
    "4836": {
      "offset": [
        1240,
        1308
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4837": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "4838": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "4840": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "ADD",
      "path": "0"
    },
    "4841": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xB7A"
    },
    "4844": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4845": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x33CE"
    },
    "4848": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMP",
      "path": "0"
    },
    "4849": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4850": {
      "fn": "CryptidToken.unpause",
      "offset": [
        5031,
        5041
      ],
      "op": "PUSH2",
      "path": "16",
      "statement": 30,
      "value": "0x12F9"
    },
    "4853": {
      "fn": "CryptidToken.unpause",
      "offset": [
        5031,
        5039
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x2551"
    },
    "4856": {
      "fn": "CryptidToken.unpause",
      "jump": "i",
      "offset": [
        5031,
        5041
      ],
      "op": "JUMP",
      "path": "16"
    },
    "4857": {
      "fn": "CryptidToken.unpause",
      "offset": [
        5031,
        5041
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "4858": {
      "fn": "CryptidToken.unpause",
      "jump": "o",
      "offset": [
        4983,
        5048
      ],
      "op": "JUMP",
      "path": "16"
    },
    "4859": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5107,
        5286
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "4860": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5240,
        5279
      ],
      "op": "PUSH2",
      "path": "3",
      "statement": 31,
      "value": "0xCB0"
    },
    "4863": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5257,
        5261
      ],
      "op": "DUP4",
      "path": "3"
    },
    "4864": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5263,
        5265
      ],
      "op": "DUP4",
      "path": "3"
    },
    "4865": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5267,
        5274
      ],
      "op": "DUP4",
      "path": "3"
    },
    "4866": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5240,
        5279
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "4868": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5240,
        5279
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "4869": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5240,
        5279
      ],
      "op": "DUP1",
      "path": "3"
    },
    "4870": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5240,
        5279
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "4872": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5240,
        5279
      ],
      "op": "ADD",
      "path": "3"
    },
    "4873": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5240,
        5279
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "4875": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5240,
        5279
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "4876": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5240,
        5279
      ],
      "op": "DUP1",
      "path": "3"
    },
    "4877": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5240,
        5279
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "4879": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5240,
        5279
      ],
      "op": "DUP2",
      "path": "3"
    },
    "4880": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5240,
        5279
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "4881": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5240,
        5279
      ],
      "op": "POP",
      "path": "3"
    },
    "4882": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5240,
        5256
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1D5A"
    },
    "4885": {
      "fn": "ERC721.safeTransferFrom",
      "jump": "i",
      "offset": [
        5240,
        5279
      ],
      "op": "JUMP",
      "path": "3"
    },
    "4886": {
      "fn": "CryptidToken.walletOfOwner",
      "offset": [
        8155,
        8508
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "4887": {
      "fn": "CryptidToken.walletOfOwner",
      "offset": [
        8216,
        8232
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x60"
    },
    "4889": {
      "fn": "CryptidToken.walletOfOwner",
      "offset": [
        8244,
        8267
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "4891": {
      "fn": "CryptidToken.walletOfOwner",
      "offset": [
        8270,
        8286
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1323"
    },
    "4894": {
      "fn": "CryptidToken.walletOfOwner",
      "offset": [
        8280,
        8285
      ],
      "op": "DUP4",
      "path": "16"
    },
    "4895": {
      "fn": "CryptidToken.walletOfOwner",
      "offset": [
        8270,
        8279
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1633"
    },
    "4898": {
      "fn": "CryptidToken.walletOfOwner",
      "jump": "i",
      "offset": [
        8270,
        8286
      ],
      "op": "JUMP",
      "path": "16"
    },
    "4899": {
      "fn": "CryptidToken.walletOfOwner",
      "offset": [
        8270,
        8286
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "4900": {
      "fn": "CryptidToken.walletOfOwner",
      "offset": [
        8244,
        8286
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "4901": {
      "fn": "CryptidToken.walletOfOwner",
      "offset": [
        8244,
        8286
      ],
      "op": "POP",
      "path": "16"
    },
    "4902": {
      "fn": "CryptidToken.walletOfOwner",
      "offset": [
        8296,
        8322
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "4904": {
      "fn": "CryptidToken.walletOfOwner",
      "offset": [
        8339,
        8354
      ],
      "op": "DUP2",
      "path": "16"
    },
    "4905": {
      "fn": "CryptidToken.walletOfOwner",
      "offset": [
        8325,
        8355
      ],
      "op": "PUSH8",
      "path": "16",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "4914": {
      "fn": "CryptidToken.walletOfOwner",
      "offset": [
        8325,
        8355
      ],
      "op": "DUP2",
      "path": "16"
    },
    "4915": {
      "fn": "CryptidToken.walletOfOwner",
      "offset": [
        8325,
        8355
      ],
      "op": "GT",
      "path": "16"
    },
    "4916": {
      "fn": "CryptidToken.walletOfOwner",
      "offset": [
        8325,
        8355
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "4917": {
      "fn": "CryptidToken.walletOfOwner",
      "offset": [
        8325,
        8355
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1340"
    },
    "4920": {
      "fn": "CryptidToken.walletOfOwner",
      "offset": [
        8325,
        8355
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "4921": {
      "fn": "CryptidToken.walletOfOwner",
      "offset": [
        8325,
        8355
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1340"
    },
    "4924": {
      "fn": "CryptidToken.walletOfOwner",
      "offset": [
        8325,
        8355
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x301C"
    },
    "4927": {
      "fn": "CryptidToken.walletOfOwner",
      "jump": "i",
      "offset": [
        8325,
        8355
      ],
      "op": "JUMP",
      "path": "16"
    },
    "4928": {
      "fn": "CryptidToken.walletOfOwner",
      "offset": [
        8325,
        8355
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "4929": {
      "fn": "CryptidToken.walletOfOwner",
      "offset": [
        8325,
        8355
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "4931": {
      "fn": "CryptidToken.walletOfOwner",
      "offset": [
        8325,
        8355
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "4932": {
      "fn": "CryptidToken.walletOfOwner",
      "offset": [
        8325,
        8355
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "4933": {
      "fn": "CryptidToken.walletOfOwner",
      "offset": [
        8325,
        8355
      ],
      "op": "DUP1",
      "path": "16"
    },
    "4934": {
      "fn": "CryptidToken.walletOfOwner",
      "offset": [
        8325,
        8355
      ],
      "op": "DUP3",
      "path": "16"
    },
    "4935": {
      "fn": "CryptidToken.walletOfOwner",
      "offset": [
        8325,
        8355
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "4936": {
      "fn": "CryptidToken.walletOfOwner",
      "offset": [
        8325,
        8355
      ],
      "op": "DUP1",
      "path": "16"
    },
    "4937": {
      "fn": "CryptidToken.walletOfOwner",
      "offset": [
        8325,
        8355
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "4939": {
      "fn": "CryptidToken.walletOfOwner",
      "offset": [
        8325,
        8355
      ],
      "op": "MUL",
      "path": "16"
    },
    "4940": {
      "fn": "CryptidToken.walletOfOwner",
      "offset": [
        8325,
        8355
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "4942": {
      "fn": "CryptidToken.walletOfOwner",
      "offset": [
        8325,
        8355
      ],
      "op": "ADD",
      "path": "16"
    },
    "4943": {
      "fn": "CryptidToken.walletOfOwner",
      "offset": [
        8325,
        8355
      ],
      "op": "DUP3",
      "path": "16"
    },
    "4944": {
      "fn": "CryptidToken.walletOfOwner",
      "offset": [
        8325,
        8355
      ],
      "op": "ADD",
      "path": "16"
    },
    "4945": {
      "fn": "CryptidToken.walletOfOwner",
      "offset": [
        8325,
        8355
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "4947": {
      "fn": "CryptidToken.walletOfOwner",
      "offset": [
        8325,
        8355
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "4948": {
      "fn": "CryptidToken.walletOfOwner",
      "offset": [
        8325,
        8355
      ],
      "op": "DUP1",
      "path": "16"
    },
    "4949": {
      "fn": "CryptidToken.walletOfOwner",
      "offset": [
        8325,
        8355
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "4950": {
      "fn": "CryptidToken.walletOfOwner",
      "offset": [
        8325,
        8355
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1369"
    },
    "4953": {
      "fn": "CryptidToken.walletOfOwner",
      "offset": [
        8325,
        8355
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "4954": {
      "fn": "CryptidToken.walletOfOwner",
      "offset": [
        8325,
        8355
      ],
      "op": "DUP2",
      "path": "16"
    },
    "4955": {
      "fn": "CryptidToken.walletOfOwner",
      "offset": [
        8325,
        8355
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "4957": {
      "fn": "CryptidToken.walletOfOwner",
      "offset": [
        8325,
        8355
      ],
      "op": "ADD",
      "path": "16"
    },
    "4958": {
      "fn": "CryptidToken.walletOfOwner",
      "offset": [
        8325,
        8355
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "4960": {
      "fn": "CryptidToken.walletOfOwner",
      "offset": [
        8325,
        8355
      ],
      "op": "DUP3",
      "path": "16"
    },
    "4961": {
      "fn": "CryptidToken.walletOfOwner",
      "offset": [
        8325,
        8355
      ],
      "op": "MUL",
      "path": "16"
    },
    "4962": {
      "fn": "CryptidToken.walletOfOwner",
      "offset": [
        8325,
        8355
      ],
      "op": "DUP1",
      "path": "16"
    },
    "4963": {
      "fn": "CryptidToken.walletOfOwner",
      "offset": [
        8325,
        8355
      ],
      "op": "CALLDATASIZE",
      "path": "16"
    },
    "4964": {
      "fn": "CryptidToken.walletOfOwner",
      "offset": [
        8325,
        8355
      ],
      "op": "DUP4",
      "path": "16"
    },
    "4965": {
      "fn": "CryptidToken.walletOfOwner",
      "offset": [
        8325,
        8355
      ],
      "op": "CALLDATACOPY",
      "path": "16"
    },
    "4966": {
      "fn": "CryptidToken.walletOfOwner",
      "offset": [
        8325,
        8355
      ],
      "op": "ADD",
      "path": "16"
    },
    "4967": {
      "fn": "CryptidToken.walletOfOwner",
      "offset": [
        8325,
        8355
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "4968": {
      "op": "POP"
    },
    "4969": {
      "fn": "CryptidToken.walletOfOwner",
      "offset": [
        8325,
        8355
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "4970": {
      "fn": "CryptidToken.walletOfOwner",
      "offset": [
        8325,
        8355
      ],
      "op": "POP",
      "path": "16"
    },
    "4971": {
      "fn": "CryptidToken.walletOfOwner",
      "offset": [
        8296,
        8355
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "4972": {
      "fn": "CryptidToken.walletOfOwner",
      "offset": [
        8296,
        8355
      ],
      "op": "POP",
      "path": "16"
    },
    "4973": {
      "fn": "CryptidToken.walletOfOwner",
      "offset": [
        8370,
        8379
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "4975": {
      "fn": "CryptidToken.walletOfOwner",
      "offset": [
        8365,
        8476
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "4976": {
      "fn": "CryptidToken.walletOfOwner",
      "offset": [
        8385,
        8400
      ],
      "op": "DUP3",
      "path": "16"
    },
    "4977": {
      "fn": "CryptidToken.walletOfOwner",
      "offset": [
        8381,
        8382
      ],
      "op": "DUP2",
      "path": "16"
    },
    "4978": {
      "fn": "CryptidToken.walletOfOwner",
      "offset": [
        8381,
        8400
      ],
      "op": "LT",
      "path": "16"
    },
    "4979": {
      "fn": "CryptidToken.walletOfOwner",
      "offset": [
        8365,
        8476
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "4980": {
      "fn": "CryptidToken.walletOfOwner",
      "offset": [
        8365,
        8476
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x13B0"
    },
    "4983": {
      "fn": "CryptidToken.walletOfOwner",
      "offset": [
        8365,
        8476
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "4984": {
      "fn": "CryptidToken.walletOfOwner",
      "offset": [
        8436,
        8465
      ],
      "op": "PUSH2",
      "path": "16",
      "statement": 32,
      "value": "0x1381"
    },
    "4987": {
      "fn": "CryptidToken.walletOfOwner",
      "offset": [
        8456,
        8461
      ],
      "op": "DUP6",
      "path": "16"
    },
    "4988": {
      "fn": "CryptidToken.walletOfOwner",
      "offset": [
        8463,
        8464
      ],
      "op": "DUP3",
      "path": "16"
    },
    "4989": {
      "fn": "CryptidToken.walletOfOwner",
      "offset": [
        8436,
        8455
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xE38"
    },
    "4992": {
      "fn": "CryptidToken.walletOfOwner",
      "jump": "i",
      "offset": [
        8436,
        8465
      ],
      "op": "JUMP",
      "path": "16"
    },
    "4993": {
      "fn": "CryptidToken.walletOfOwner",
      "offset": [
        8436,
        8465
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "4994": {
      "fn": "CryptidToken.walletOfOwner",
      "offset": [
        8421,
        8430
      ],
      "op": "DUP3",
      "path": "16"
    },
    "4995": {
      "fn": "CryptidToken.walletOfOwner",
      "offset": [
        8431,
        8432
      ],
      "op": "DUP3",
      "path": "16"
    },
    "4996": {
      "fn": "CryptidToken.walletOfOwner",
      "offset": [
        8421,
        8433
      ],
      "op": "DUP2",
      "path": "16"
    },
    "4997": {
      "fn": "CryptidToken.walletOfOwner",
      "offset": [
        8421,
        8433
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "4998": {
      "fn": "CryptidToken.walletOfOwner",
      "offset": [
        8421,
        8433
      ],
      "op": "DUP2",
      "path": "16"
    },
    "4999": {
      "fn": "CryptidToken.walletOfOwner",
      "offset": [
        8421,
        8433
      ],
      "op": "LT",
      "path": "16"
    },
    "5000": {
      "fn": "CryptidToken.walletOfOwner",
      "offset": [
        8421,
        8433
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1393"
    },
    "5003": {
      "fn": "CryptidToken.walletOfOwner",
      "offset": [
        8421,
        8433
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "5004": {
      "fn": "CryptidToken.walletOfOwner",
      "offset": [
        8421,
        8433
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1393"
    },
    "5007": {
      "fn": "CryptidToken.walletOfOwner",
      "offset": [
        8421,
        8433
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x34E2"
    },
    "5010": {
      "fn": "CryptidToken.walletOfOwner",
      "jump": "i",
      "offset": [
        8421,
        8433
      ],
      "op": "JUMP",
      "path": "16"
    },
    "5011": {
      "fn": "CryptidToken.walletOfOwner",
      "offset": [
        8421,
        8433
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "5012": {
      "fn": "CryptidToken.walletOfOwner",
      "offset": [
        8421,
        8433
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "5014": {
      "fn": "CryptidToken.walletOfOwner",
      "offset": [
        8421,
        8433
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "5015": {
      "fn": "CryptidToken.walletOfOwner",
      "offset": [
        8421,
        8433
      ],
      "op": "DUP2",
      "path": "16"
    },
    "5016": {
      "fn": "CryptidToken.walletOfOwner",
      "offset": [
        8421,
        8433
      ],
      "op": "MUL",
      "path": "16"
    },
    "5017": {
      "fn": "CryptidToken.walletOfOwner",
      "offset": [
        8421,
        8433
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "5018": {
      "fn": "CryptidToken.walletOfOwner",
      "offset": [
        8421,
        8433
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "5019": {
      "fn": "CryptidToken.walletOfOwner",
      "offset": [
        8421,
        8433
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "5020": {
      "fn": "CryptidToken.walletOfOwner",
      "offset": [
        8421,
        8433
      ],
      "op": "ADD",
      "path": "16"
    },
    "5021": {
      "fn": "CryptidToken.walletOfOwner",
      "offset": [
        8421,
        8433
      ],
      "op": "ADD",
      "path": "16"
    },
    "5022": {
      "fn": "CryptidToken.walletOfOwner",
      "offset": [
        8421,
        8465
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "5023": {
      "fn": "CryptidToken.walletOfOwner",
      "offset": [
        8402,
        8405
      ],
      "op": "DUP1",
      "path": "16",
      "statement": 33
    },
    "5024": {
      "fn": "CryptidToken.walletOfOwner",
      "offset": [
        8402,
        8405
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x13A8"
    },
    "5027": {
      "fn": "CryptidToken.walletOfOwner",
      "offset": [
        8402,
        8405
      ],
      "op": "DUP2",
      "path": "16"
    },
    "5028": {
      "fn": "CryptidToken.walletOfOwner",
      "offset": [
        8402,
        8405
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x34F8"
    },
    "5031": {
      "fn": "CryptidToken.walletOfOwner",
      "jump": "i",
      "offset": [
        8402,
        8405
      ],
      "op": "JUMP",
      "path": "16"
    },
    "5032": {
      "fn": "CryptidToken.walletOfOwner",
      "offset": [
        8402,
        8405
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "5033": {
      "fn": "CryptidToken.walletOfOwner",
      "offset": [
        8402,
        8405
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "5034": {
      "fn": "CryptidToken.walletOfOwner",
      "offset": [
        8402,
        8405
      ],
      "op": "POP",
      "path": "16"
    },
    "5035": {
      "fn": "CryptidToken.walletOfOwner",
      "offset": [
        8402,
        8405
      ],
      "op": "POP",
      "path": "16"
    },
    "5036": {
      "fn": "CryptidToken.walletOfOwner",
      "offset": [
        8365,
        8476
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x136F"
    },
    "5039": {
      "fn": "CryptidToken.walletOfOwner",
      "offset": [
        8365,
        8476
      ],
      "op": "JUMP",
      "path": "16"
    },
    "5040": {
      "fn": "CryptidToken.walletOfOwner",
      "offset": [
        8365,
        8476
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "5041": {
      "op": "POP"
    },
    "5042": {
      "fn": "CryptidToken.walletOfOwner",
      "offset": [
        8492,
        8501
      ],
      "op": "SWAP4",
      "path": "16",
      "statement": 34
    },
    "5043": {
      "fn": "CryptidToken.walletOfOwner",
      "offset": [
        8155,
        8508
      ],
      "op": "SWAP3",
      "path": "16"
    },
    "5044": {
      "op": "POP"
    },
    "5045": {
      "op": "POP"
    },
    "5046": {
      "op": "POP"
    },
    "5047": {
      "fn": "CryptidToken.walletOfOwner",
      "jump": "o",
      "offset": [
        8155,
        8508
      ],
      "op": "JUMP",
      "path": "16"
    },
    "5048": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        1798,
        2028
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "5049": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        1873,
        1880
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "5051": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        1908,
        1938
      ],
      "op": "PUSH2",
      "path": "6",
      "statement": 35,
      "value": "0x13C3"
    },
    "5054": {
      "fn": "ERC721Enumerable.totalSupply",
      "offset": [
        1702,
        1712
      ],
      "op": "PUSH1",
      "path": "6",
      "statement": 36,
      "value": "0x8"
    },
    "5056": {
      "fn": "ERC721Enumerable.totalSupply",
      "offset": [
        1702,
        1719
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "5057": {
      "fn": "ERC721Enumerable.totalSupply",
      "offset": [
        1702,
        1719
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "5058": {
      "fn": "ERC721Enumerable.totalSupply",
      "offset": [
        1615,
        1726
      ],
      "op": "JUMP",
      "path": "6"
    },
    "5059": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        1908,
        1938
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "5060": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        1900,
        1905
      ],
      "op": "DUP3",
      "path": "6"
    },
    "5061": {
      "branch": 184,
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        1900,
        1938
      ],
      "op": "LT",
      "path": "6"
    },
    "5062": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        1892,
        1987
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1426"
    },
    "5065": {
      "branch": 184,
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        1892,
        1987
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "5066": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        1892,
        1987
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "5068": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        1892,
        1987
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "5069": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "5073": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "5075": {
      "op": "SHL"
    },
    "5076": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        1892,
        1987
      ],
      "op": "DUP2",
      "path": "6"
    },
    "5077": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        1892,
        1987
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "5078": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5080": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        1892,
        1987
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "5082": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        1892,
        1987
      ],
      "op": "DUP3",
      "path": "6"
    },
    "5083": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        1892,
        1987
      ],
      "op": "ADD",
      "path": "6"
    },
    "5084": {
      "op": "MSTORE"
    },
    "5085": {
      "op": "PUSH1",
      "value": "0x2C"
    },
    "5087": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "5089": {
      "op": "DUP3"
    },
    "5090": {
      "op": "ADD"
    },
    "5091": {
      "op": "MSTORE"
    },
    "5092": {
      "op": "PUSH32",
      "value": "0x455243373231456E756D657261626C653A20676C6F62616C20696E646578206F"
    },
    "5125": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "5127": {
      "op": "DUP3"
    },
    "5128": {
      "op": "ADD"
    },
    "5129": {
      "op": "MSTORE"
    },
    "5130": {
      "op": "PUSH12",
      "value": "0x7574206F6620626F756E6473"
    },
    "5143": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5145": {
      "op": "SHL"
    },
    "5146": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "5148": {
      "op": "DUP3"
    },
    "5149": {
      "op": "ADD"
    },
    "5150": {
      "op": "MSTORE"
    },
    "5151": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "5153": {
      "op": "ADD"
    },
    "5154": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        1892,
        1987
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xB7A"
    },
    "5157": {
      "op": "JUMP"
    },
    "5158": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        1892,
        1987
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "5159": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        2004,
        2014
      ],
      "op": "PUSH1",
      "path": "6",
      "statement": 37,
      "value": "0x8"
    },
    "5161": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        2015,
        2020
      ],
      "op": "DUP3",
      "path": "6"
    },
    "5162": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        2004,
        2021
      ],
      "op": "DUP2",
      "path": "6"
    },
    "5163": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        2004,
        2021
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "5164": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        2004,
        2021
      ],
      "op": "DUP2",
      "path": "6"
    },
    "5165": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        2004,
        2021
      ],
      "op": "LT",
      "path": "6"
    },
    "5166": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        2004,
        2021
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1439"
    },
    "5169": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        2004,
        2021
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "5170": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        2004,
        2021
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1439"
    },
    "5173": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        2004,
        2021
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x34E2"
    },
    "5176": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "jump": "i",
      "offset": [
        2004,
        2021
      ],
      "op": "JUMP",
      "path": "6"
    },
    "5177": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        2004,
        2021
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "5178": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        2004,
        2021
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "5179": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        2004,
        2021
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "5181": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        2004,
        2021
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "5182": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        2004,
        2021
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "5184": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        2004,
        2021
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "5186": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        2004,
        2021
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "5187": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        2004,
        2021
      ],
      "op": "ADD",
      "path": "6"
    },
    "5188": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        2004,
        2021
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "5189": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        1997,
        2021
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "5190": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        1997,
        2021
      ],
      "op": "POP",
      "path": "6"
    },
    "5191": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        1798,
        2028
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "5192": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        1798,
        2028
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "5193": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        1798,
        2028
      ],
      "op": "POP",
      "path": "6"
    },
    "5194": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "jump": "o",
      "offset": [
        1798,
        2028
      ],
      "op": "JUMP",
      "path": "6"
    },
    "5195": {
      "fn": "CryptidToken.setBaseURI",
      "offset": [
        5317,
        5477
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "5196": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xA"
    },
    "5198": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "5199": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5201": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5203": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5205": {
      "op": "SHL"
    },
    "5206": {
      "op": "SUB"
    },
    "5207": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x100"
    },
    "5210": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "5211": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "5212": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "DIV",
      "path": "0"
    },
    "5213": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "AND",
      "path": "0"
    },
    "5214": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "10"
    },
    "5215": {
      "offset": [
        1248,
        1271
      ],
      "op": "EQ",
      "path": "0"
    },
    "5216": {
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x147B"
    },
    "5219": {
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "5220": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "5222": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "5223": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "5227": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "5229": {
      "op": "SHL"
    },
    "5230": {
      "offset": [
        1240,
        1308
      ],
      "op": "DUP2",
      "path": "0"
    },
    "5231": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "5232": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "5234": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "ADD",
      "path": "0"
    },
    "5235": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xB7A"
    },
    "5238": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "5239": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x33CE"
    },
    "5242": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMP",
      "path": "0"
    },
    "5243": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "5244": {
      "fn": "CryptidToken.setBaseURI",
      "offset": [
        5402,
        5416
      ],
      "op": "PUSH1",
      "path": "16",
      "statement": 38,
      "value": "0x11"
    },
    "5246": {
      "fn": "CryptidToken.setBaseURI",
      "offset": [
        5402,
        5416
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "5247": {
      "fn": "CryptidToken.setBaseURI",
      "offset": [
        5402,
        5416
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x100"
    },
    "5250": {
      "fn": "CryptidToken.setBaseURI",
      "offset": [
        5402,
        5416
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "5251": {
      "fn": "CryptidToken.setBaseURI",
      "offset": [
        5402,
        5416
      ],
      "op": "DIV",
      "path": "16"
    },
    "5252": {
      "fn": "CryptidToken.setBaseURI",
      "offset": [
        5402,
        5416
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0xFF"
    },
    "5254": {
      "fn": "CryptidToken.setBaseURI",
      "offset": [
        5402,
        5416
      ],
      "op": "AND",
      "path": "16"
    },
    "5255": {
      "branch": 158,
      "fn": "CryptidToken.setBaseURI",
      "offset": [
        5401,
        5416
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "5256": {
      "fn": "CryptidToken.setBaseURI",
      "offset": [
        5393,
        5439
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x14C8"
    },
    "5259": {
      "branch": 158,
      "fn": "CryptidToken.setBaseURI",
      "offset": [
        5393,
        5439
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "5260": {
      "fn": "CryptidToken.setBaseURI",
      "offset": [
        5393,
        5439
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "5262": {
      "fn": "CryptidToken.setBaseURI",
      "offset": [
        5393,
        5439
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "5263": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "5267": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "5269": {
      "op": "SHL"
    },
    "5270": {
      "fn": "CryptidToken.setBaseURI",
      "offset": [
        5393,
        5439
      ],
      "op": "DUP2",
      "path": "16"
    },
    "5271": {
      "fn": "CryptidToken.setBaseURI",
      "offset": [
        5393,
        5439
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "5272": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5274": {
      "fn": "CryptidToken.setBaseURI",
      "offset": [
        5393,
        5439
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "5276": {
      "fn": "CryptidToken.setBaseURI",
      "offset": [
        5393,
        5439
      ],
      "op": "DUP3",
      "path": "16"
    },
    "5277": {
      "fn": "CryptidToken.setBaseURI",
      "offset": [
        5393,
        5439
      ],
      "op": "ADD",
      "path": "16"
    },
    "5278": {
      "op": "MSTORE"
    },
    "5279": {
      "op": "PUSH1",
      "value": "0x12"
    },
    "5281": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "5283": {
      "op": "DUP3"
    },
    "5284": {
      "op": "ADD"
    },
    "5285": {
      "op": "MSTORE"
    },
    "5286": {
      "op": "PUSH18",
      "value": "0x2130B9B2AAA9249034B990333937BD32B717"
    },
    "5305": {
      "op": "PUSH1",
      "value": "0x71"
    },
    "5307": {
      "op": "SHL"
    },
    "5308": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "5310": {
      "op": "DUP3"
    },
    "5311": {
      "op": "ADD"
    },
    "5312": {
      "op": "MSTORE"
    },
    "5313": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "5315": {
      "op": "ADD"
    },
    "5316": {
      "fn": "CryptidToken.setBaseURI",
      "offset": [
        5393,
        5439
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xB7A"
    },
    "5319": {
      "op": "JUMP"
    },
    "5320": {
      "fn": "CryptidToken.setBaseURI",
      "offset": [
        5393,
        5439
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "5321": {
      "fn": "CryptidToken.setBaseURI",
      "offset": [
        5449,
        5470
      ],
      "op": "DUP1",
      "path": "16",
      "statement": 39
    },
    "5322": {
      "fn": "CryptidToken.setBaseURI",
      "offset": [
        5449,
        5470
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "5323": {
      "fn": "CryptidToken.setBaseURI",
      "offset": [
        5449,
        5470
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xDB2"
    },
    "5326": {
      "fn": "CryptidToken.setBaseURI",
      "offset": [
        5449,
        5470
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "5327": {
      "fn": "CryptidToken.setBaseURI",
      "offset": [
        5449,
        5456
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0xF"
    },
    "5329": {
      "fn": "CryptidToken.setBaseURI",
      "offset": [
        5449,
        5456
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "5330": {
      "fn": "CryptidToken.setBaseURI",
      "offset": [
        5449,
        5470
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "5332": {
      "fn": "CryptidToken.setBaseURI",
      "offset": [
        5449,
        5470
      ],
      "op": "DUP5",
      "path": "16"
    },
    "5333": {
      "fn": "CryptidToken.setBaseURI",
      "offset": [
        5449,
        5470
      ],
      "op": "ADD",
      "path": "16"
    },
    "5334": {
      "fn": "CryptidToken.setBaseURI",
      "offset": [
        5449,
        5470
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "5335": {
      "fn": "CryptidToken.setBaseURI",
      "offset": [
        5449,
        5470
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x2E7F"
    },
    "5338": {
      "fn": "CryptidToken.setBaseURI",
      "jump": "i",
      "offset": [
        5449,
        5470
      ],
      "op": "JUMP",
      "path": "16"
    },
    "5339": {
      "fn": "CryptidToken.setMaxMintPerTx",
      "offset": [
        6095,
        6211
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "5340": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xA"
    },
    "5342": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "5343": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5345": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5347": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5349": {
      "op": "SHL"
    },
    "5350": {
      "op": "SUB"
    },
    "5351": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x100"
    },
    "5354": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "5355": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "5356": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "DIV",
      "path": "0"
    },
    "5357": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "AND",
      "path": "0"
    },
    "5358": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "10"
    },
    "5359": {
      "offset": [
        1248,
        1271
      ],
      "op": "EQ",
      "path": "0"
    },
    "5360": {
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x150B"
    },
    "5363": {
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "5364": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "5366": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "5367": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "5371": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "5373": {
      "op": "SHL"
    },
    "5374": {
      "offset": [
        1240,
        1308
      ],
      "op": "DUP2",
      "path": "0"
    },
    "5375": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "5376": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "5378": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "ADD",
      "path": "0"
    },
    "5379": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xB7A"
    },
    "5382": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "5383": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x33CE"
    },
    "5386": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMP",
      "path": "0"
    },
    "5387": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "5388": {
      "fn": "CryptidToken.setMaxMintPerTx",
      "offset": [
        6173,
        6185
      ],
      "op": "PUSH1",
      "path": "16",
      "statement": 40,
      "value": "0x11"
    },
    "5390": {
      "fn": "CryptidToken.setMaxMintPerTx",
      "offset": [
        6173,
        6204
      ],
      "op": "DUP1",
      "path": "16"
    },
    "5391": {
      "fn": "CryptidToken.setMaxMintPerTx",
      "offset": [
        6173,
        6204
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "5392": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "5394": {
      "op": "NOT"
    },
    "5395": {
      "fn": "CryptidToken.setMaxMintPerTx",
      "offset": [
        6173,
        6204
      ],
      "op": "AND",
      "path": "16"
    },
    "5396": {
      "fn": "CryptidToken.setMaxMintPerTx",
      "offset": [
        6173,
        6204
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0xFF"
    },
    "5398": {
      "fn": "CryptidToken.setMaxMintPerTx",
      "offset": [
        6173,
        6204
      ],
      "op": "SWAP3",
      "path": "16"
    },
    "5399": {
      "fn": "CryptidToken.setMaxMintPerTx",
      "offset": [
        6173,
        6204
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "5400": {
      "fn": "CryptidToken.setMaxMintPerTx",
      "offset": [
        6173,
        6204
      ],
      "op": "SWAP3",
      "path": "16"
    },
    "5401": {
      "fn": "CryptidToken.setMaxMintPerTx",
      "offset": [
        6173,
        6204
      ],
      "op": "AND",
      "path": "16"
    },
    "5402": {
      "fn": "CryptidToken.setMaxMintPerTx",
      "offset": [
        6173,
        6204
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "5403": {
      "fn": "CryptidToken.setMaxMintPerTx",
      "offset": [
        6173,
        6204
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "5404": {
      "fn": "CryptidToken.setMaxMintPerTx",
      "offset": [
        6173,
        6204
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "5405": {
      "fn": "CryptidToken.setMaxMintPerTx",
      "offset": [
        6173,
        6204
      ],
      "op": "OR",
      "path": "16"
    },
    "5406": {
      "fn": "CryptidToken.setMaxMintPerTx",
      "offset": [
        6173,
        6204
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "5407": {
      "fn": "CryptidToken.setMaxMintPerTx",
      "offset": [
        6173,
        6204
      ],
      "op": "SSTORE",
      "path": "16"
    },
    "5408": {
      "fn": "CryptidToken.setMaxMintPerTx",
      "jump": "o",
      "offset": [
        6095,
        6211
      ],
      "op": "JUMP",
      "path": "16"
    },
    "5409": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2176,
        2411
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "5410": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2248,
        2255
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "5412": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2283,
        2299
      ],
      "op": "DUP2",
      "path": "3"
    },
    "5413": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2283,
        2299
      ],
      "op": "DUP2",
      "path": "3"
    },
    "5414": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2283,
        2299
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "5415": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2283,
        2290
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x2"
    },
    "5417": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2283,
        2299
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "5419": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2283,
        2299
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "5420": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2283,
        2299
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "5422": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2283,
        2299
      ],
      "op": "DUP2",
      "path": "3"
    },
    "5423": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2283,
        2299
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "5424": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2283,
        2299
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "5425": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5427": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5429": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5431": {
      "op": "SHL"
    },
    "5432": {
      "op": "SUB"
    },
    "5433": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2283,
        2299
      ],
      "op": "AND",
      "path": "3"
    },
    "5434": {
      "branch": 174,
      "fn": "ERC721.ownerOf",
      "offset": [
        2317,
        2336
      ],
      "op": "DUP1",
      "path": "3",
      "statement": 41
    },
    "5435": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2309,
        2382
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xA6D"
    },
    "5438": {
      "branch": 174,
      "fn": "ERC721.ownerOf",
      "offset": [
        2309,
        2382
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "5439": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2309,
        2382
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "5441": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2309,
        2382
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "5442": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "5446": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "5448": {
      "op": "SHL"
    },
    "5449": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2309,
        2382
      ],
      "op": "DUP2",
      "path": "3"
    },
    "5450": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2309,
        2382
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "5451": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5453": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2309,
        2382
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "5455": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2309,
        2382
      ],
      "op": "DUP3",
      "path": "3"
    },
    "5456": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2309,
        2382
      ],
      "op": "ADD",
      "path": "3"
    },
    "5457": {
      "op": "MSTORE"
    },
    "5458": {
      "op": "PUSH1",
      "value": "0x29"
    },
    "5460": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "5462": {
      "op": "DUP3"
    },
    "5463": {
      "op": "ADD"
    },
    "5464": {
      "op": "MSTORE"
    },
    "5465": {
      "op": "PUSH32",
      "value": "0x4552433732313A206F776E657220717565727920666F72206E6F6E6578697374"
    },
    "5498": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "5500": {
      "op": "DUP3"
    },
    "5501": {
      "op": "ADD"
    },
    "5502": {
      "op": "MSTORE"
    },
    "5503": {
      "op": "PUSH9",
      "value": "0x32B73A103A37B5B2B7"
    },
    "5513": {
      "op": "PUSH1",
      "value": "0xB9"
    },
    "5515": {
      "op": "SHL"
    },
    "5516": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "5518": {
      "op": "DUP3"
    },
    "5519": {
      "op": "ADD"
    },
    "5520": {
      "op": "MSTORE"
    },
    "5521": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "5523": {
      "op": "ADD"
    },
    "5524": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2309,
        2382
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xB7A"
    },
    "5527": {
      "op": "JUMP"
    },
    "5528": {
      "offset": [
        903,
        929
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "5529": {
      "fn": "ERC721.ownerOf",
      "offset": [
        903,
        929
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0xF"
    },
    "5531": {
      "fn": "ERC721.ownerOf",
      "offset": [
        903,
        929
      ],
      "op": "DUP1",
      "path": "16"
    },
    "5532": {
      "fn": "ERC721.ownerOf",
      "offset": [
        903,
        929
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "5533": {
      "fn": "ERC721.ownerOf",
      "offset": [
        903,
        929
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x15A5"
    },
    "5536": {
      "fn": "ERC721.ownerOf",
      "offset": [
        903,
        929
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "5537": {
      "fn": "ERC721.ownerOf",
      "offset": [
        903,
        929
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x3393"
    },
    "5540": {
      "fn": "ERC721.ownerOf",
      "jump": "i",
      "offset": [
        903,
        929
      ],
      "op": "JUMP",
      "path": "16"
    },
    "5541": {
      "fn": "ERC721.ownerOf",
      "offset": [
        903,
        929
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "5542": {
      "fn": "ERC721.ownerOf",
      "offset": [
        903,
        929
      ],
      "op": "DUP1",
      "path": "16"
    },
    "5543": {
      "fn": "ERC721.ownerOf",
      "offset": [
        903,
        929
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x1F"
    },
    "5545": {
      "fn": "ERC721.ownerOf",
      "offset": [
        903,
        929
      ],
      "op": "ADD",
      "path": "16"
    },
    "5546": {
      "fn": "ERC721.ownerOf",
      "offset": [
        903,
        929
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "5548": {
      "fn": "ERC721.ownerOf",
      "offset": [
        903,
        929
      ],
      "op": "DUP1",
      "path": "16"
    },
    "5549": {
      "fn": "ERC721.ownerOf",
      "offset": [
        903,
        929
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "5550": {
      "fn": "ERC721.ownerOf",
      "offset": [
        903,
        929
      ],
      "op": "DIV",
      "path": "16"
    },
    "5551": {
      "fn": "ERC721.ownerOf",
      "offset": [
        903,
        929
      ],
      "op": "MUL",
      "path": "16"
    },
    "5552": {
      "fn": "ERC721.ownerOf",
      "offset": [
        903,
        929
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "5554": {
      "fn": "ERC721.ownerOf",
      "offset": [
        903,
        929
      ],
      "op": "ADD",
      "path": "16"
    },
    "5555": {
      "fn": "ERC721.ownerOf",
      "offset": [
        903,
        929
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "5557": {
      "fn": "ERC721.ownerOf",
      "offset": [
        903,
        929
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "5558": {
      "fn": "ERC721.ownerOf",
      "offset": [
        903,
        929
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "5559": {
      "fn": "ERC721.ownerOf",
      "offset": [
        903,
        929
      ],
      "op": "DUP2",
      "path": "16"
    },
    "5560": {
      "fn": "ERC721.ownerOf",
      "offset": [
        903,
        929
      ],
      "op": "ADD",
      "path": "16"
    },
    "5561": {
      "fn": "ERC721.ownerOf",
      "offset": [
        903,
        929
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "5563": {
      "fn": "ERC721.ownerOf",
      "offset": [
        903,
        929
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "5564": {
      "fn": "ERC721.ownerOf",
      "offset": [
        903,
        929
      ],
      "op": "DUP1",
      "path": "16"
    },
    "5565": {
      "fn": "ERC721.ownerOf",
      "offset": [
        903,
        929
      ],
      "op": "SWAP3",
      "path": "16"
    },
    "5566": {
      "fn": "ERC721.ownerOf",
      "offset": [
        903,
        929
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "5567": {
      "fn": "ERC721.ownerOf",
      "offset": [
        903,
        929
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "5568": {
      "fn": "ERC721.ownerOf",
      "offset": [
        903,
        929
      ],
      "op": "DUP2",
      "path": "16"
    },
    "5569": {
      "fn": "ERC721.ownerOf",
      "offset": [
        903,
        929
      ],
      "op": "DUP2",
      "path": "16"
    },
    "5570": {
      "fn": "ERC721.ownerOf",
      "offset": [
        903,
        929
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "5571": {
      "fn": "ERC721.ownerOf",
      "offset": [
        903,
        929
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "5573": {
      "fn": "ERC721.ownerOf",
      "offset": [
        903,
        929
      ],
      "op": "ADD",
      "path": "16"
    },
    "5574": {
      "fn": "ERC721.ownerOf",
      "offset": [
        903,
        929
      ],
      "op": "DUP3",
      "path": "16"
    },
    "5575": {
      "fn": "ERC721.ownerOf",
      "offset": [
        903,
        929
      ],
      "op": "DUP1",
      "path": "16"
    },
    "5576": {
      "fn": "ERC721.ownerOf",
      "offset": [
        903,
        929
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "5577": {
      "fn": "ERC721.ownerOf",
      "offset": [
        903,
        929
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x15D1"
    },
    "5580": {
      "fn": "ERC721.ownerOf",
      "offset": [
        903,
        929
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "5581": {
      "fn": "ERC721.ownerOf",
      "offset": [
        903,
        929
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x3393"
    },
    "5584": {
      "fn": "ERC721.ownerOf",
      "jump": "i",
      "offset": [
        903,
        929
      ],
      "op": "JUMP",
      "path": "16"
    },
    "5585": {
      "fn": "ERC721.ownerOf",
      "offset": [
        903,
        929
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "5586": {
      "fn": "ERC721.ownerOf",
      "offset": [
        903,
        929
      ],
      "op": "DUP1",
      "path": "16"
    },
    "5587": {
      "fn": "ERC721.ownerOf",
      "offset": [
        903,
        929
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "5588": {
      "fn": "ERC721.ownerOf",
      "offset": [
        903,
        929
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x161E"
    },
    "5591": {
      "fn": "ERC721.ownerOf",
      "offset": [
        903,
        929
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "5592": {
      "fn": "ERC721.ownerOf",
      "offset": [
        903,
        929
      ],
      "op": "DUP1",
      "path": "16"
    },
    "5593": {
      "fn": "ERC721.ownerOf",
      "offset": [
        903,
        929
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x1F"
    },
    "5595": {
      "fn": "ERC721.ownerOf",
      "offset": [
        903,
        929
      ],
      "op": "LT",
      "path": "16"
    },
    "5596": {
      "fn": "ERC721.ownerOf",
      "offset": [
        903,
        929
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x15F3"
    },
    "5599": {
      "fn": "ERC721.ownerOf",
      "offset": [
        903,
        929
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "5600": {
      "fn": "ERC721.ownerOf",
      "offset": [
        903,
        929
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x100"
    },
    "5603": {
      "fn": "ERC721.ownerOf",
      "offset": [
        903,
        929
      ],
      "op": "DUP1",
      "path": "16"
    },
    "5604": {
      "fn": "ERC721.ownerOf",
      "offset": [
        903,
        929
      ],
      "op": "DUP4",
      "path": "16"
    },
    "5605": {
      "fn": "ERC721.ownerOf",
      "offset": [
        903,
        929
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "5606": {
      "fn": "ERC721.ownerOf",
      "offset": [
        903,
        929
      ],
      "op": "DIV",
      "path": "16"
    },
    "5607": {
      "fn": "ERC721.ownerOf",
      "offset": [
        903,
        929
      ],
      "op": "MUL",
      "path": "16"
    },
    "5608": {
      "fn": "ERC721.ownerOf",
      "offset": [
        903,
        929
      ],
      "op": "DUP4",
      "path": "16"
    },
    "5609": {
      "fn": "ERC721.ownerOf",
      "offset": [
        903,
        929
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "5610": {
      "fn": "ERC721.ownerOf",
      "offset": [
        903,
        929
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "5611": {
      "fn": "ERC721.ownerOf",
      "offset": [
        903,
        929
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "5613": {
      "fn": "ERC721.ownerOf",
      "offset": [
        903,
        929
      ],
      "op": "ADD",
      "path": "16"
    },
    "5614": {
      "fn": "ERC721.ownerOf",
      "offset": [
        903,
        929
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "5615": {
      "fn": "ERC721.ownerOf",
      "offset": [
        903,
        929
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x161E"
    },
    "5618": {
      "fn": "ERC721.ownerOf",
      "offset": [
        903,
        929
      ],
      "op": "JUMP",
      "path": "16"
    },
    "5619": {
      "fn": "ERC721.ownerOf",
      "offset": [
        903,
        929
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "5620": {
      "fn": "ERC721.ownerOf",
      "offset": [
        903,
        929
      ],
      "op": "DUP3",
      "path": "16"
    },
    "5621": {
      "fn": "ERC721.ownerOf",
      "offset": [
        903,
        929
      ],
      "op": "ADD",
      "path": "16"
    },
    "5622": {
      "fn": "ERC721.ownerOf",
      "offset": [
        903,
        929
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "5623": {
      "fn": "ERC721.ownerOf",
      "offset": [
        903,
        929
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "5624": {
      "fn": "ERC721.ownerOf",
      "offset": [
        903,
        929
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "5626": {
      "fn": "ERC721.ownerOf",
      "offset": [
        903,
        929
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "5627": {
      "fn": "ERC721.ownerOf",
      "offset": [
        903,
        929
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "5629": {
      "fn": "ERC721.ownerOf",
      "offset": [
        903,
        929
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "5631": {
      "fn": "ERC721.ownerOf",
      "offset": [
        903,
        929
      ],
      "op": "KECCAK256",
      "path": "16"
    },
    "5632": {
      "fn": "ERC721.ownerOf",
      "offset": [
        903,
        929
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "5633": {
      "fn": "ERC721.ownerOf",
      "offset": [
        903,
        929
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "5634": {
      "fn": "ERC721.ownerOf",
      "offset": [
        903,
        929
      ],
      "op": "DUP2",
      "path": "16"
    },
    "5635": {
      "fn": "ERC721.ownerOf",
      "offset": [
        903,
        929
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "5636": {
      "fn": "ERC721.ownerOf",
      "offset": [
        903,
        929
      ],
      "op": "DUP2",
      "path": "16"
    },
    "5637": {
      "fn": "ERC721.ownerOf",
      "offset": [
        903,
        929
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "5638": {
      "fn": "ERC721.ownerOf",
      "offset": [
        903,
        929
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "5639": {
      "fn": "ERC721.ownerOf",
      "offset": [
        903,
        929
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x1"
    },
    "5641": {
      "fn": "ERC721.ownerOf",
      "offset": [
        903,
        929
      ],
      "op": "ADD",
      "path": "16"
    },
    "5642": {
      "fn": "ERC721.ownerOf",
      "offset": [
        903,
        929
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "5643": {
      "fn": "ERC721.ownerOf",
      "offset": [
        903,
        929
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "5645": {
      "fn": "ERC721.ownerOf",
      "offset": [
        903,
        929
      ],
      "op": "ADD",
      "path": "16"
    },
    "5646": {
      "fn": "ERC721.ownerOf",
      "offset": [
        903,
        929
      ],
      "op": "DUP1",
      "path": "16"
    },
    "5647": {
      "fn": "ERC721.ownerOf",
      "offset": [
        903,
        929
      ],
      "op": "DUP4",
      "path": "16"
    },
    "5648": {
      "fn": "ERC721.ownerOf",
      "offset": [
        903,
        929
      ],
      "op": "GT",
      "path": "16"
    },
    "5649": {
      "fn": "ERC721.ownerOf",
      "offset": [
        903,
        929
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1601"
    },
    "5652": {
      "fn": "ERC721.ownerOf",
      "offset": [
        903,
        929
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "5653": {
      "fn": "ERC721.ownerOf",
      "offset": [
        903,
        929
      ],
      "op": "DUP3",
      "path": "16"
    },
    "5654": {
      "fn": "ERC721.ownerOf",
      "offset": [
        903,
        929
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "5655": {
      "fn": "ERC721.ownerOf",
      "offset": [
        903,
        929
      ],
      "op": "SUB",
      "path": "16"
    },
    "5656": {
      "fn": "ERC721.ownerOf",
      "offset": [
        903,
        929
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x1F"
    },
    "5658": {
      "fn": "ERC721.ownerOf",
      "offset": [
        903,
        929
      ],
      "op": "AND",
      "path": "16"
    },
    "5659": {
      "fn": "ERC721.ownerOf",
      "offset": [
        903,
        929
      ],
      "op": "DUP3",
      "path": "16"
    },
    "5660": {
      "fn": "ERC721.ownerOf",
      "offset": [
        903,
        929
      ],
      "op": "ADD",
      "path": "16"
    },
    "5661": {
      "fn": "ERC721.ownerOf",
      "offset": [
        903,
        929
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "5662": {
      "fn": "ERC721.ownerOf",
      "offset": [
        903,
        929
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "5663": {
      "fn": "ERC721.ownerOf",
      "offset": [
        903,
        929
      ],
      "op": "POP",
      "path": "16"
    },
    "5664": {
      "fn": "ERC721.ownerOf",
      "offset": [
        903,
        929
      ],
      "op": "POP",
      "path": "16"
    },
    "5665": {
      "fn": "ERC721.ownerOf",
      "offset": [
        903,
        929
      ],
      "op": "POP",
      "path": "16"
    },
    "5666": {
      "fn": "ERC721.ownerOf",
      "offset": [
        903,
        929
      ],
      "op": "POP",
      "path": "16"
    },
    "5667": {
      "fn": "ERC721.ownerOf",
      "offset": [
        903,
        929
      ],
      "op": "POP",
      "path": "16"
    },
    "5668": {
      "fn": "ERC721.ownerOf",
      "offset": [
        903,
        929
      ],
      "op": "DUP2",
      "path": "16"
    },
    "5669": {
      "fn": "ERC721.ownerOf",
      "jump": "o",
      "offset": [
        903,
        929
      ],
      "op": "JUMP",
      "path": "16"
    },
    "5670": {
      "fn": "CryptidToken.lastMintAddress",
      "offset": [
        7433,
        7537
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "5671": {
      "fn": "CryptidToken.lastMintAddress",
      "offset": [
        7483,
        7490
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "5673": {
      "fn": "CryptidToken.lastMintAddress",
      "offset": [
        7508,
        7530
      ],
      "op": "PUSH2",
      "path": "16",
      "statement": 42,
      "value": "0xDCD"
    },
    "5676": {
      "fn": "CryptidToken.lastMintAddress",
      "offset": [
        7516,
        7529
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x62C"
    },
    "5679": {
      "fn": "CryptidToken.lastMintAddress",
      "offset": [
        7516,
        7527
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xDB6"
    },
    "5682": {
      "fn": "CryptidToken.lastMintAddress",
      "jump": "i",
      "offset": [
        7516,
        7529
      ],
      "op": "JUMP",
      "path": "16"
    },
    "5683": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1914,
        2119
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "5684": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1986,
        1993
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "5686": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5688": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5690": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5692": {
      "op": "SHL"
    },
    "5693": {
      "op": "SUB"
    },
    "5694": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2013,
        2032
      ],
      "op": "DUP3",
      "path": "3",
      "statement": 43
    },
    "5695": {
      "branch": 175,
      "fn": "ERC721.balanceOf",
      "offset": [
        2013,
        2032
      ],
      "op": "AND",
      "path": "3"
    },
    "5696": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2005,
        2079
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x169E"
    },
    "5699": {
      "branch": 175,
      "fn": "ERC721.balanceOf",
      "offset": [
        2005,
        2079
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "5700": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2005,
        2079
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "5702": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2005,
        2079
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "5703": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "5707": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "5709": {
      "op": "SHL"
    },
    "5710": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2005,
        2079
      ],
      "op": "DUP2",
      "path": "3"
    },
    "5711": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2005,
        2079
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "5712": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5714": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2005,
        2079
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "5716": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2005,
        2079
      ],
      "op": "DUP3",
      "path": "3"
    },
    "5717": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2005,
        2079
      ],
      "op": "ADD",
      "path": "3"
    },
    "5718": {
      "op": "MSTORE"
    },
    "5719": {
      "op": "PUSH1",
      "value": "0x2A"
    },
    "5721": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "5723": {
      "op": "DUP3"
    },
    "5724": {
      "op": "ADD"
    },
    "5725": {
      "op": "MSTORE"
    },
    "5726": {
      "op": "PUSH32",
      "value": "0x4552433732313A2062616C616E636520717565727920666F7220746865207A65"
    },
    "5759": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "5761": {
      "op": "DUP3"
    },
    "5762": {
      "op": "ADD"
    },
    "5763": {
      "op": "MSTORE"
    },
    "5764": {
      "op": "PUSH10",
      "value": "0x726F2061646472657373"
    },
    "5775": {
      "op": "PUSH1",
      "value": "0xB0"
    },
    "5777": {
      "op": "SHL"
    },
    "5778": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "5780": {
      "op": "DUP3"
    },
    "5781": {
      "op": "ADD"
    },
    "5782": {
      "op": "MSTORE"
    },
    "5783": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "5785": {
      "op": "ADD"
    },
    "5786": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2005,
        2079
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xB7A"
    },
    "5789": {
      "op": "JUMP"
    },
    "5790": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2005,
        2079
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "5791": {
      "op": "POP"
    },
    "5792": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5794": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5796": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5798": {
      "op": "SHL"
    },
    "5799": {
      "op": "SUB"
    },
    "5800": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2096,
        2112
      ],
      "op": "AND",
      "path": "3",
      "statement": 44
    },
    "5801": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2096,
        2112
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "5803": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2096,
        2112
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "5804": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2096,
        2112
      ],
      "op": "DUP2",
      "path": "3"
    },
    "5805": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2096,
        2112
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "5806": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2096,
        2105
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x3"
    },
    "5808": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2096,
        2112
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "5810": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2096,
        2112
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "5811": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2096,
        2112
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "5813": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2096,
        2112
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "5814": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2096,
        2112
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "5815": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2096,
        2112
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "5816": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2096,
        2112
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "5817": {
      "fn": "ERC721.balanceOf",
      "jump": "o",
      "offset": [
        1914,
        2119
      ],
      "op": "JUMP",
      "path": "3"
    },
    "5818": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1668,
        1769
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "5819": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xA"
    },
    "5821": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "5822": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5824": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5826": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5828": {
      "op": "SHL"
    },
    "5829": {
      "op": "SUB"
    },
    "5830": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x100"
    },
    "5833": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "5834": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "5835": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "DIV",
      "path": "0"
    },
    "5836": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "AND",
      "path": "0"
    },
    "5837": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "10"
    },
    "5838": {
      "offset": [
        1248,
        1271
      ],
      "op": "EQ",
      "path": "0"
    },
    "5839": {
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x16EA"
    },
    "5842": {
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "5843": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "5845": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "5846": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "5850": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "5852": {
      "op": "SHL"
    },
    "5853": {
      "offset": [
        1240,
        1308
      ],
      "op": "DUP2",
      "path": "0"
    },
    "5854": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "5855": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "5857": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "ADD",
      "path": "0"
    },
    "5858": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xB7A"
    },
    "5861": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "5862": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x33CE"
    },
    "5865": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMP",
      "path": "0"
    },
    "5866": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "5867": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1732,
        1762
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 45,
      "value": "0x12F9"
    },
    "5870": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1759,
        1760
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "5872": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1732,
        1750
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x25E4"
    },
    "5875": {
      "fn": "Ownable.renounceOwnership",
      "jump": "i",
      "offset": [
        1732,
        1762
      ],
      "op": "JUMP",
      "path": "0"
    },
    "5876": {
      "fn": "CryptidToken.setPublicSalePrice",
      "offset": [
        5977,
        6089
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "5877": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xA"
    },
    "5879": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "5880": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5882": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5884": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5886": {
      "op": "SHL"
    },
    "5887": {
      "op": "SUB"
    },
    "5888": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x100"
    },
    "5891": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "5892": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "5893": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "DIV",
      "path": "0"
    },
    "5894": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "AND",
      "path": "0"
    },
    "5895": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "10"
    },
    "5896": {
      "offset": [
        1248,
        1271
      ],
      "op": "EQ",
      "path": "0"
    },
    "5897": {
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1724"
    },
    "5900": {
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "5901": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "5903": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "5904": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "5908": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "5910": {
      "op": "SHL"
    },
    "5911": {
      "offset": [
        1240,
        1308
      ],
      "op": "DUP2",
      "path": "0"
    },
    "5912": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "5913": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "5915": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "ADD",
      "path": "0"
    },
    "5916": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xB7A"
    },
    "5919": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "5920": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x33CE"
    },
    "5923": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMP",
      "path": "0"
    },
    "5924": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "5925": {
      "fn": "CryptidToken.setPublicSalePrice",
      "offset": [
        6057,
        6066
      ],
      "op": "PUSH1",
      "path": "16",
      "statement": 46,
      "value": "0x17"
    },
    "5927": {
      "fn": "CryptidToken.setPublicSalePrice",
      "offset": [
        6057,
        6082
      ],
      "op": "SSTORE",
      "path": "16"
    },
    "5928": {
      "fn": "CryptidToken.setPublicSalePrice",
      "jump": "o",
      "offset": [
        5977,
        6089
      ],
      "op": "JUMP",
      "path": "16"
    },
    "5929": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        3722,
        4217
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "5930": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xA"
    },
    "5932": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "5933": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5935": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5937": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5939": {
      "op": "SHL"
    },
    "5940": {
      "op": "SUB"
    },
    "5941": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x100"
    },
    "5944": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "5945": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "5946": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "DIV",
      "path": "0"
    },
    "5947": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "AND",
      "path": "0"
    },
    "5948": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "10"
    },
    "5949": {
      "offset": [
        1248,
        1271
      ],
      "op": "EQ",
      "path": "0"
    },
    "5950": {
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1759"
    },
    "5953": {
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "5954": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "5956": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "5957": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "5961": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "5963": {
      "op": "SHL"
    },
    "5964": {
      "offset": [
        1240,
        1308
      ],
      "op": "DUP2",
      "path": "0"
    },
    "5965": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "5966": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "5968": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "ADD",
      "path": "0"
    },
    "5969": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xB7A"
    },
    "5972": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "5973": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x33CE"
    },
    "5976": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMP",
      "path": "0"
    },
    "5977": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "5978": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        3842,
        3856
      ],
      "op": "PUSH1",
      "path": "16",
      "statement": 47,
      "value": "0x2"
    },
    "5980": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        3833,
        3838
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x18"
    },
    "5982": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        3833,
        3838
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "5983": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        3833,
        3838
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0xFF"
    },
    "5985": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        3833,
        3838
      ],
      "op": "AND",
      "path": "16"
    },
    "5986": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        3833,
        3856
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x3"
    },
    "5988": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        3833,
        3856
      ],
      "op": "DUP2",
      "path": "16"
    },
    "5989": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        3833,
        3856
      ],
      "op": "GT",
      "path": "16"
    },
    "5990": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        3833,
        3856
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "5991": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        3833,
        3856
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1772"
    },
    "5994": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        3833,
        3856
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "5995": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        3833,
        3856
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1772"
    },
    "5998": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        3833,
        3856
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x3318"
    },
    "6001": {
      "fn": "CryptidToken.teamMint",
      "jump": "i",
      "offset": [
        3833,
        3856
      ],
      "op": "JUMP",
      "path": "16"
    },
    "6002": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        3833,
        3856
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "6003": {
      "branch": 159,
      "fn": "CryptidToken.teamMint",
      "offset": [
        3833,
        3856
      ],
      "op": "EQ",
      "path": "16"
    },
    "6004": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        3825,
        3890
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x17BF"
    },
    "6007": {
      "branch": 159,
      "fn": "CryptidToken.teamMint",
      "offset": [
        3825,
        3890
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "6008": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        3825,
        3890
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "6010": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        3825,
        3890
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "6011": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "6015": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "6017": {
      "op": "SHL"
    },
    "6018": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        3825,
        3890
      ],
      "op": "DUP2",
      "path": "16"
    },
    "6019": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        3825,
        3890
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "6020": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6022": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        3825,
        3890
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "6024": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        3825,
        3890
      ],
      "op": "DUP3",
      "path": "16"
    },
    "6025": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        3825,
        3890
      ],
      "op": "ADD",
      "path": "16"
    },
    "6026": {
      "op": "MSTORE"
    },
    "6027": {
      "op": "PUSH1",
      "value": "0x1D"
    },
    "6029": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "6031": {
      "op": "DUP3"
    },
    "6032": {
      "op": "ADD"
    },
    "6033": {
      "op": "MSTORE"
    },
    "6034": {
      "op": "PUSH32",
      "value": "0x57686974656C6973742073616C65206E6F7420696E697469617465642E000000"
    },
    "6067": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "6069": {
      "op": "DUP3"
    },
    "6070": {
      "op": "ADD"
    },
    "6071": {
      "op": "MSTORE"
    },
    "6072": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "6074": {
      "op": "ADD"
    },
    "6075": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        3825,
        3890
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xB7A"
    },
    "6078": {
      "op": "JUMP"
    },
    "6079": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        3825,
        3890
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "6080": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        3939,
        3953
      ],
      "op": "PUSH1",
      "path": "16",
      "statement": 48,
      "value": "0x14"
    },
    "6082": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        3939,
        3953
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "6083": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        3922,
        3935
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x15"
    },
    "6085": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        3922,
        3935
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "6086": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        3908,
        3935
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x17D2"
    },
    "6089": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        3908,
        3935
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "6090": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        3908,
        3935
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0xFF"
    },
    "6092": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        3908,
        3935
      ],
      "op": "DUP5",
      "path": "16"
    },
    "6093": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        3908,
        3935
      ],
      "op": "AND",
      "path": "16"
    },
    "6094": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        3908,
        3935
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x34CA"
    },
    "6097": {
      "fn": "CryptidToken.teamMint",
      "jump": "i",
      "offset": [
        3908,
        3935
      ],
      "op": "JUMP",
      "path": "16"
    },
    "6098": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        3908,
        3935
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "6099": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        3908,
        3953
      ],
      "op": "GT",
      "path": "16"
    },
    "6100": {
      "branch": 160,
      "fn": "CryptidToken.teamMint",
      "offset": [
        3908,
        3953
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "6101": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        3900,
        4000
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1833"
    },
    "6104": {
      "branch": 160,
      "fn": "CryptidToken.teamMint",
      "offset": [
        3900,
        4000
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "6105": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        3900,
        4000
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "6107": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        3900,
        4000
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "6108": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "6112": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "6114": {
      "op": "SHL"
    },
    "6115": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        3900,
        4000
      ],
      "op": "DUP2",
      "path": "16"
    },
    "6116": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        3900,
        4000
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "6117": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6119": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        3900,
        4000
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "6121": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        3900,
        4000
      ],
      "op": "DUP3",
      "path": "16"
    },
    "6122": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        3900,
        4000
      ],
      "op": "ADD",
      "path": "16"
    },
    "6123": {
      "op": "MSTORE"
    },
    "6124": {
      "op": "PUSH1",
      "value": "0x2A"
    },
    "6126": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "6128": {
      "op": "DUP3"
    },
    "6129": {
      "op": "ADD"
    },
    "6130": {
      "op": "MSTORE"
    },
    "6131": {
      "op": "PUSH32",
      "value": "0x5472616E73616374696F6E206578636565647320746F74616C207465616D2D73"
    },
    "6164": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "6166": {
      "op": "DUP3"
    },
    "6167": {
      "op": "ADD"
    },
    "6168": {
      "op": "MSTORE"
    },
    "6169": {
      "op": "PUSH10",
      "value": "0x616C6520737570706C79"
    },
    "6180": {
      "op": "PUSH1",
      "value": "0xB0"
    },
    "6182": {
      "op": "SHL"
    },
    "6183": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "6185": {
      "op": "DUP3"
    },
    "6186": {
      "op": "ADD"
    },
    "6187": {
      "op": "MSTORE"
    },
    "6188": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "6190": {
      "op": "ADD"
    },
    "6191": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        3900,
        4000
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xB7A"
    },
    "6194": {
      "op": "JUMP"
    },
    "6195": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        3900,
        4000
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "6196": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        4033,
        4044
      ],
      "op": "DUP1",
      "path": "16",
      "statement": 49
    },
    "6197": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        4016,
        4044
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0xFF"
    },
    "6199": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        4016,
        4044
      ],
      "op": "AND",
      "path": "16"
    },
    "6200": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        4016,
        4029
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x15"
    },
    "6202": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        4016,
        4029
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "6204": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        4016,
        4044
      ],
      "op": "DUP3",
      "path": "16"
    },
    "6205": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        4016,
        4044
      ],
      "op": "DUP3",
      "path": "16"
    },
    "6206": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        4016,
        4044
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "6207": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        4016,
        4044
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1848"
    },
    "6210": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        4016,
        4044
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "6211": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        4016,
        4044
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "6212": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        4016,
        4044
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x34CA"
    },
    "6215": {
      "fn": "CryptidToken.teamMint",
      "jump": "i",
      "offset": [
        4016,
        4044
      ],
      "op": "JUMP",
      "path": "16"
    },
    "6216": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        4016,
        4044
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "6217": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        4016,
        4044
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "6218": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        4016,
        4044
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "6219": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        4016,
        4044
      ],
      "op": "SSTORE",
      "path": "16"
    },
    "6220": {
      "op": "POP"
    },
    "6221": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        4071,
        4072
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x1"
    },
    "6223": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        4071,
        4072
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "6224": {
      "op": "POP"
    },
    "6225": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        4054,
        4211
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "6226": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        4079,
        4090
      ],
      "op": "DUP2",
      "path": "16"
    },
    "6227": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        4074,
        4090
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0xFF"
    },
    "6229": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        4074,
        4090
      ],
      "op": "AND",
      "path": "16"
    },
    "6230": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        4074,
        4075
      ],
      "op": "DUP2",
      "path": "16"
    },
    "6231": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        4074,
        4090
      ],
      "op": "GT",
      "path": "16"
    },
    "6232": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        4054,
        4211
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xDB2"
    },
    "6235": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        4054,
        4211
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "6236": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        4111,
        4159
      ],
      "op": "PUSH2",
      "path": "16",
      "statement": 50,
      "value": "0x1868"
    },
    "6239": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        4121,
        4131
      ],
      "op": "CALLER",
      "path": "16"
    },
    "6240": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        4133,
        4158
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x11CF"
    },
    "6243": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        4133,
        4148
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0xC"
    },
    "6245": {
      "fn": "Counters.current",
      "offset": [
        918,
        932
      ],
      "op": "SLOAD",
      "path": "11"
    },
    "6246": {
      "fn": "Counters.current",
      "offset": [
        918,
        932
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "6247": {
      "fn": "Counters.current",
      "offset": [
        827,
        939
      ],
      "op": "JUMP",
      "path": "11"
    },
    "6248": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        4111,
        4159
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "6249": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        4173,
        4200
      ],
      "op": "PUSH2",
      "path": "16",
      "statement": 51,
      "value": "0x1876"
    },
    "6252": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        4173,
        4188
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0xC"
    },
    "6254": {
      "fn": "Counters.increment",
      "offset": [
        1032,
        1051
      ],
      "op": "DUP1",
      "path": "11"
    },
    "6255": {
      "fn": "Counters.increment",
      "offset": [
        1032,
        1051
      ],
      "op": "SLOAD",
      "path": "11"
    },
    "6256": {
      "fn": "Counters.increment",
      "offset": [
        1050,
        1051
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x1"
    },
    "6258": {
      "fn": "Counters.increment",
      "offset": [
        1032,
        1051
      ],
      "op": "ADD",
      "path": "11"
    },
    "6259": {
      "fn": "Counters.increment",
      "offset": [
        1032,
        1051
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "6260": {
      "fn": "Counters.increment",
      "offset": [
        1032,
        1051
      ],
      "op": "SSTORE",
      "path": "11"
    },
    "6261": {
      "fn": "Counters.increment",
      "offset": [
        945,
        1068
      ],
      "op": "JUMP",
      "path": "11"
    },
    "6262": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        4173,
        4200
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "6263": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        4092,
        4095
      ],
      "op": "DUP1",
      "path": "16",
      "statement": 52
    },
    "6264": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        4092,
        4095
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1880"
    },
    "6267": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        4092,
        4095
      ],
      "op": "DUP2",
      "path": "16"
    },
    "6268": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        4092,
        4095
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x34F8"
    },
    "6271": {
      "fn": "CryptidToken.teamMint",
      "jump": "i",
      "offset": [
        4092,
        4095
      ],
      "op": "JUMP",
      "path": "16"
    },
    "6272": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        4092,
        4095
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "6273": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        4092,
        4095
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "6274": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        4092,
        4095
      ],
      "op": "POP",
      "path": "16"
    },
    "6275": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        4092,
        4095
      ],
      "op": "POP",
      "path": "16"
    },
    "6276": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        4054,
        4211
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1851"
    },
    "6279": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        4054,
        4211
      ],
      "op": "JUMP",
      "path": "16"
    },
    "6280": {
      "fn": "CryptidToken.setMerkleRoot",
      "offset": [
        5207,
        5311
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "6281": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xA"
    },
    "6283": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "6284": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6286": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6288": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6290": {
      "op": "SHL"
    },
    "6291": {
      "op": "SUB"
    },
    "6292": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x100"
    },
    "6295": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "6296": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "6297": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "DIV",
      "path": "0"
    },
    "6298": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "AND",
      "path": "0"
    },
    "6299": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "10"
    },
    "6300": {
      "offset": [
        1248,
        1271
      ],
      "op": "EQ",
      "path": "0"
    },
    "6301": {
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x18B8"
    },
    "6304": {
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "6305": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "6307": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "6308": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "6312": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "6314": {
      "op": "SHL"
    },
    "6315": {
      "offset": [
        1240,
        1308
      ],
      "op": "DUP2",
      "path": "0"
    },
    "6316": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "6317": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "6319": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "ADD",
      "path": "0"
    },
    "6320": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xB7A"
    },
    "6323": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "6324": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x33CE"
    },
    "6327": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMP",
      "path": "0"
    },
    "6328": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "6329": {
      "fn": "CryptidToken.setMerkleRoot",
      "offset": [
        5280,
        5290
      ],
      "op": "PUSH1",
      "path": "16",
      "statement": 53,
      "value": "0xD"
    },
    "6331": {
      "fn": "CryptidToken.setMerkleRoot",
      "offset": [
        5280,
        5304
      ],
      "op": "SSTORE",
      "path": "16"
    },
    "6332": {
      "fn": "CryptidToken.setMerkleRoot",
      "jump": "o",
      "offset": [
        5207,
        5311
      ],
      "op": "JUMP",
      "path": "16"
    },
    "6333": {
      "fn": "CryptidToken.freezeProvenanceHash",
      "offset": [
        6514,
        6774
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "6334": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xA"
    },
    "6336": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "6337": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6339": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6341": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6343": {
      "op": "SHL"
    },
    "6344": {
      "op": "SUB"
    },
    "6345": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x100"
    },
    "6348": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "6349": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "6350": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "DIV",
      "path": "0"
    },
    "6351": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "AND",
      "path": "0"
    },
    "6352": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "10"
    },
    "6353": {
      "offset": [
        1248,
        1271
      ],
      "op": "EQ",
      "path": "0"
    },
    "6354": {
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x18ED"
    },
    "6357": {
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "6358": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "6360": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "6361": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "6365": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "6367": {
      "op": "SHL"
    },
    "6368": {
      "offset": [
        1240,
        1308
      ],
      "op": "DUP2",
      "path": "0"
    },
    "6369": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "6370": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "6372": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "ADD",
      "path": "0"
    },
    "6373": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xB7A"
    },
    "6376": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "6377": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x33CE"
    },
    "6380": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMP",
      "path": "0"
    },
    "6381": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "6382": {
      "fn": "CryptidToken.freezeProvenanceHash",
      "offset": [
        6614,
        6615
      ],
      "op": "PUSH1",
      "path": "16",
      "statement": 54,
      "value": "0x0"
    },
    "6384": {
      "fn": "CryptidToken.freezeProvenanceHash",
      "offset": [
        6589,
        6603
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0xE"
    },
    "6386": {
      "fn": "CryptidToken.freezeProvenanceHash",
      "offset": [
        6583,
        6611
      ],
      "op": "DUP1",
      "path": "16"
    },
    "6387": {
      "fn": "CryptidToken.freezeProvenanceHash",
      "offset": [
        6583,
        6611
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "6388": {
      "fn": "CryptidToken.freezeProvenanceHash",
      "offset": [
        6583,
        6611
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x18FC"
    },
    "6391": {
      "fn": "CryptidToken.freezeProvenanceHash",
      "offset": [
        6583,
        6611
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "6392": {
      "fn": "CryptidToken.freezeProvenanceHash",
      "offset": [
        6583,
        6611
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x3393"
    },
    "6395": {
      "fn": "CryptidToken.freezeProvenanceHash",
      "jump": "i",
      "offset": [
        6583,
        6611
      ],
      "op": "JUMP",
      "path": "16"
    },
    "6396": {
      "fn": "CryptidToken.freezeProvenanceHash",
      "offset": [
        6583,
        6611
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "6397": {
      "fn": "CryptidToken.freezeProvenanceHash",
      "offset": [
        6583,
        6611
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "6398": {
      "fn": "CryptidToken.freezeProvenanceHash",
      "offset": [
        6583,
        6611
      ],
      "op": "POP",
      "path": "16"
    },
    "6399": {
      "branch": 161,
      "fn": "CryptidToken.freezeProvenanceHash",
      "offset": [
        6583,
        6615
      ],
      "op": "GT",
      "path": "16"
    },
    "6400": {
      "fn": "CryptidToken.freezeProvenanceHash",
      "offset": [
        6575,
        6652
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x194B"
    },
    "6403": {
      "branch": 161,
      "fn": "CryptidToken.freezeProvenanceHash",
      "offset": [
        6575,
        6652
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "6404": {
      "fn": "CryptidToken.freezeProvenanceHash",
      "offset": [
        6575,
        6652
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "6406": {
      "fn": "CryptidToken.freezeProvenanceHash",
      "offset": [
        6575,
        6652
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "6407": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "6411": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "6413": {
      "op": "SHL"
    },
    "6414": {
      "fn": "CryptidToken.freezeProvenanceHash",
      "offset": [
        6575,
        6652
      ],
      "op": "DUP2",
      "path": "16"
    },
    "6415": {
      "fn": "CryptidToken.freezeProvenanceHash",
      "offset": [
        6575,
        6652
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "6416": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6418": {
      "fn": "CryptidToken.freezeProvenanceHash",
      "offset": [
        6575,
        6652
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "6420": {
      "fn": "CryptidToken.freezeProvenanceHash",
      "offset": [
        6575,
        6652
      ],
      "op": "DUP3",
      "path": "16"
    },
    "6421": {
      "fn": "CryptidToken.freezeProvenanceHash",
      "offset": [
        6575,
        6652
      ],
      "op": "ADD",
      "path": "16"
    },
    "6422": {
      "op": "DUP2"
    },
    "6423": {
      "op": "SWAP1"
    },
    "6424": {
      "op": "MSTORE"
    },
    "6425": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "6427": {
      "op": "DUP3"
    },
    "6428": {
      "op": "ADD"
    },
    "6429": {
      "op": "MSTORE"
    },
    "6430": {
      "op": "PUSH32",
      "value": "0x50726F76656E616E636520686173682063616E6E6F7420626520656D7074792E"
    },
    "6463": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "6465": {
      "op": "DUP3"
    },
    "6466": {
      "op": "ADD"
    },
    "6467": {
      "op": "MSTORE"
    },
    "6468": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "6470": {
      "op": "ADD"
    },
    "6471": {
      "fn": "CryptidToken.freezeProvenanceHash",
      "offset": [
        6575,
        6652
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xB7A"
    },
    "6474": {
      "op": "JUMP"
    },
    "6475": {
      "fn": "CryptidToken.freezeProvenanceHash",
      "offset": [
        6575,
        6652
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "6476": {
      "fn": "CryptidToken.freezeProvenanceHash",
      "offset": [
        6671,
        6691
      ],
      "op": "PUSH1",
      "path": "16",
      "statement": 55,
      "value": "0x11"
    },
    "6478": {
      "fn": "CryptidToken.freezeProvenanceHash",
      "offset": [
        6671,
        6691
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "6479": {
      "fn": "CryptidToken.freezeProvenanceHash",
      "offset": [
        6671,
        6691
      ],
      "op": "PUSH3",
      "path": "16",
      "value": "0x10000"
    },
    "6483": {
      "fn": "CryptidToken.freezeProvenanceHash",
      "offset": [
        6671,
        6691
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "6484": {
      "fn": "CryptidToken.freezeProvenanceHash",
      "offset": [
        6671,
        6691
      ],
      "op": "DIV",
      "path": "16"
    },
    "6485": {
      "fn": "CryptidToken.freezeProvenanceHash",
      "offset": [
        6671,
        6691
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0xFF"
    },
    "6487": {
      "fn": "CryptidToken.freezeProvenanceHash",
      "offset": [
        6671,
        6691
      ],
      "op": "AND",
      "path": "16"
    },
    "6488": {
      "branch": 162,
      "fn": "CryptidToken.freezeProvenanceHash",
      "offset": [
        6670,
        6691
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "6489": {
      "fn": "CryptidToken.freezeProvenanceHash",
      "offset": [
        6662,
        6730
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x19AF"
    },
    "6492": {
      "branch": 162,
      "fn": "CryptidToken.freezeProvenanceHash",
      "offset": [
        6662,
        6730
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "6493": {
      "fn": "CryptidToken.freezeProvenanceHash",
      "offset": [
        6662,
        6730
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "6495": {
      "fn": "CryptidToken.freezeProvenanceHash",
      "offset": [
        6662,
        6730
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "6496": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "6500": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "6502": {
      "op": "SHL"
    },
    "6503": {
      "fn": "CryptidToken.freezeProvenanceHash",
      "offset": [
        6662,
        6730
      ],
      "op": "DUP2",
      "path": "16"
    },
    "6504": {
      "fn": "CryptidToken.freezeProvenanceHash",
      "offset": [
        6662,
        6730
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "6505": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6507": {
      "fn": "CryptidToken.freezeProvenanceHash",
      "offset": [
        6662,
        6730
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "6509": {
      "fn": "CryptidToken.freezeProvenanceHash",
      "offset": [
        6662,
        6730
      ],
      "op": "DUP3",
      "path": "16"
    },
    "6510": {
      "fn": "CryptidToken.freezeProvenanceHash",
      "offset": [
        6662,
        6730
      ],
      "op": "ADD",
      "path": "16"
    },
    "6511": {
      "op": "MSTORE"
    },
    "6512": {
      "op": "PUSH1",
      "value": "0x22"
    },
    "6514": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "6516": {
      "op": "DUP3"
    },
    "6517": {
      "op": "ADD"
    },
    "6518": {
      "op": "MSTORE"
    },
    "6519": {
      "op": "PUSH32",
      "value": "0x50726F76656E616E6365206861736820697320616C72656164792066726F7A65"
    },
    "6552": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "6554": {
      "op": "DUP3"
    },
    "6555": {
      "op": "ADD"
    },
    "6556": {
      "op": "MSTORE"
    },
    "6557": {
      "op": "PUSH2",
      "value": "0x3717"
    },
    "6560": {
      "op": "PUSH1",
      "value": "0xF1"
    },
    "6562": {
      "op": "SHL"
    },
    "6563": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "6565": {
      "op": "DUP3"
    },
    "6566": {
      "op": "ADD"
    },
    "6567": {
      "op": "MSTORE"
    },
    "6568": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "6570": {
      "op": "ADD"
    },
    "6571": {
      "fn": "CryptidToken.freezeProvenanceHash",
      "offset": [
        6662,
        6730
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xB7A"
    },
    "6574": {
      "op": "JUMP"
    },
    "6575": {
      "fn": "CryptidToken.freezeProvenanceHash",
      "offset": [
        6662,
        6730
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "6576": {
      "fn": "CryptidToken.freezeProvenanceHash",
      "offset": [
        6740,
        6760
      ],
      "op": "PUSH1",
      "path": "16",
      "statement": 56,
      "value": "0x11"
    },
    "6578": {
      "fn": "CryptidToken.freezeProvenanceHash",
      "offset": [
        6740,
        6767
      ],
      "op": "DUP1",
      "path": "16"
    },
    "6579": {
      "fn": "CryptidToken.freezeProvenanceHash",
      "offset": [
        6740,
        6767
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "6580": {
      "op": "PUSH3",
      "value": "0xFF0000"
    },
    "6584": {
      "op": "NOT"
    },
    "6585": {
      "fn": "CryptidToken.freezeProvenanceHash",
      "offset": [
        6740,
        6767
      ],
      "op": "AND",
      "path": "16"
    },
    "6586": {
      "fn": "CryptidToken.freezeProvenanceHash",
      "offset": [
        6740,
        6767
      ],
      "op": "PUSH3",
      "path": "16",
      "value": "0x10000"
    },
    "6590": {
      "fn": "CryptidToken.freezeProvenanceHash",
      "offset": [
        6740,
        6767
      ],
      "op": "OR",
      "path": "16"
    },
    "6591": {
      "fn": "CryptidToken.freezeProvenanceHash",
      "offset": [
        6740,
        6767
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "6592": {
      "fn": "CryptidToken.freezeProvenanceHash",
      "offset": [
        6740,
        6767
      ],
      "op": "SSTORE",
      "path": "16"
    },
    "6593": {
      "fn": "CryptidToken.freezeProvenanceHash",
      "jump": "o",
      "offset": [
        6514,
        6774
      ],
      "op": "JUMP",
      "path": "16"
    },
    "6594": {
      "fn": "CryptidToken.pause",
      "offset": [
        4916,
        4977
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "6595": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xA"
    },
    "6597": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "6598": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6600": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6602": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6604": {
      "op": "SHL"
    },
    "6605": {
      "op": "SUB"
    },
    "6606": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x100"
    },
    "6609": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "6610": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "6611": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "DIV",
      "path": "0"
    },
    "6612": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "AND",
      "path": "0"
    },
    "6613": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "10"
    },
    "6614": {
      "offset": [
        1248,
        1271
      ],
      "op": "EQ",
      "path": "0"
    },
    "6615": {
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x19F2"
    },
    "6618": {
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "6619": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "6621": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "6622": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "6626": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "6628": {
      "op": "SHL"
    },
    "6629": {
      "offset": [
        1240,
        1308
      ],
      "op": "DUP2",
      "path": "0"
    },
    "6630": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "6631": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "6633": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "ADD",
      "path": "0"
    },
    "6634": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xB7A"
    },
    "6637": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "6638": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x33CE"
    },
    "6641": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMP",
      "path": "0"
    },
    "6642": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "6643": {
      "fn": "CryptidToken.pause",
      "offset": [
        4962,
        4970
      ],
      "op": "PUSH2",
      "path": "16",
      "statement": 57,
      "value": "0x12F9"
    },
    "6646": {
      "fn": "CryptidToken.pause",
      "offset": [
        4962,
        4968
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x263E"
    },
    "6649": {
      "fn": "CryptidToken.pause",
      "jump": "i",
      "offset": [
        4962,
        4970
      ],
      "op": "JUMP",
      "path": "16"
    },
    "6650": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        4252,
        4888
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "6651": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        4365,
        4374
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x17"
    },
    "6653": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        4365,
        4374
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "6654": {
      "offset": [
        2443,
        2609
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0xFF"
    },
    "6656": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        2443,
        2609
      ],
      "op": "DUP3",
      "path": "16"
    },
    "6657": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        2443,
        2609
      ],
      "op": "AND",
      "path": "16"
    },
    "6658": {
      "offset": [
        2552,
        2561
      ],
      "op": "CALLVALUE",
      "path": "16"
    },
    "6659": {
      "offset": [
        2526,
        2548
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1A0C"
    },
    "6662": {
      "offset": [
        2443,
        2609
      ],
      "op": "DUP3",
      "path": "16"
    },
    "6663": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        4365,
        4374
      ],
      "op": "DUP5",
      "path": "16"
    },
    "6664": {
      "offset": [
        2526,
        2548
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x3481"
    },
    "6667": {
      "fn": "CryptidToken.publicMint",
      "jump": "i",
      "offset": [
        2526,
        2548
      ],
      "op": "JUMP",
      "path": "16"
    },
    "6668": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        2526,
        2548
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "6669": {
      "offset": [
        2526,
        2561
      ],
      "op": "EQ",
      "path": "16"
    },
    "6670": {
      "offset": [
        2518,
        2591
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1A55"
    },
    "6673": {
      "offset": [
        2518,
        2591
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "6674": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        2518,
        2591
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "6676": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        2518,
        2591
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "6677": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "6681": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "6683": {
      "op": "SHL"
    },
    "6684": {
      "offset": [
        2518,
        2591
      ],
      "op": "DUP2",
      "path": "16"
    },
    "6685": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        2518,
        2591
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "6686": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6688": {
      "offset": [
        2518,
        2591
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "6690": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        2518,
        2591
      ],
      "op": "DUP3",
      "path": "16"
    },
    "6691": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        2518,
        2591
      ],
      "op": "ADD",
      "path": "16"
    },
    "6692": {
      "op": "MSTORE"
    },
    "6693": {
      "op": "PUSH1",
      "value": "0x19"
    },
    "6695": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "6697": {
      "op": "DUP3"
    },
    "6698": {
      "op": "ADD"
    },
    "6699": {
      "op": "MSTORE"
    },
    "6700": {
      "op": "PUSH25",
      "value": "0x24B731B7B93932B1BA1022AA24103B30B63AB29039B2B73A17"
    },
    "6726": {
      "op": "PUSH1",
      "value": "0x39"
    },
    "6728": {
      "op": "SHL"
    },
    "6729": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "6731": {
      "op": "DUP3"
    },
    "6732": {
      "op": "ADD"
    },
    "6733": {
      "op": "MSTORE"
    },
    "6734": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "6736": {
      "op": "ADD"
    },
    "6737": {
      "offset": [
        2518,
        2591
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xB7A"
    },
    "6740": {
      "op": "JUMP"
    },
    "6741": {
      "offset": [
        2518,
        2591
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "6742": {
      "offset": [
        1744,
        1745
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x2"
    },
    "6744": {
      "offset": [
        2325,
        2332
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xB"
    },
    "6746": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        2325,
        2332
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "6747": {
      "offset": [
        2325,
        2344
      ],
      "op": "EQ",
      "path": "2"
    },
    "6748": {
      "branch": 192,
      "fn": "CryptidToken.publicMint",
      "offset": [
        2325,
        2344
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "6749": {
      "offset": [
        2317,
        2380
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1AA8"
    },
    "6752": {
      "branch": 192,
      "offset": [
        2317,
        2380
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "6753": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        2317,
        2380
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "6755": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        2317,
        2380
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "6756": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "6760": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "6762": {
      "op": "SHL"
    },
    "6763": {
      "offset": [
        2317,
        2380
      ],
      "op": "DUP2",
      "path": "2"
    },
    "6764": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        2317,
        2380
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "6765": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6767": {
      "offset": [
        2317,
        2380
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "6769": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        2317,
        2380
      ],
      "op": "DUP3",
      "path": "2"
    },
    "6770": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        2317,
        2380
      ],
      "op": "ADD",
      "path": "2"
    },
    "6771": {
      "op": "MSTORE"
    },
    "6772": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "6774": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "6776": {
      "op": "DUP3"
    },
    "6777": {
      "op": "ADD"
    },
    "6778": {
      "op": "MSTORE"
    },
    "6779": {
      "op": "PUSH32",
      "value": "0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00"
    },
    "6812": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "6814": {
      "op": "DUP3"
    },
    "6815": {
      "op": "ADD"
    },
    "6816": {
      "op": "MSTORE"
    },
    "6817": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "6819": {
      "op": "ADD"
    },
    "6820": {
      "offset": [
        2317,
        2380
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xB7A"
    },
    "6823": {
      "op": "JUMP"
    },
    "6824": {
      "offset": [
        2317,
        2380
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "6825": {
      "offset": [
        1744,
        1745
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x2"
    },
    "6827": {
      "offset": [
        2455,
        2462
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xB"
    },
    "6829": {
      "offset": [
        2455,
        2473
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "6830": {
      "fn": "Pausable.paused",
      "offset": [
        1168,
        1175
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xA"
    },
    "6832": {
      "fn": "Pausable.paused",
      "offset": [
        1168,
        1175
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "6833": {
      "fn": "Pausable.paused",
      "offset": [
        1168,
        1175
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xFF"
    },
    "6835": {
      "fn": "Pausable.paused",
      "offset": [
        1168,
        1175
      ],
      "op": "AND",
      "path": "1"
    },
    "6836": {
      "offset": [
        1411,
        1420
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "6837": {
      "offset": [
        1403,
        1441
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1AD0"
    },
    "6840": {
      "offset": [
        1403,
        1441
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "6841": {
      "fn": "Pausable.paused",
      "offset": [
        1403,
        1441
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "6843": {
      "fn": "Pausable.paused",
      "offset": [
        1403,
        1441
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "6844": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "6848": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "6850": {
      "op": "SHL"
    },
    "6851": {
      "offset": [
        1403,
        1441
      ],
      "op": "DUP2",
      "path": "1"
    },
    "6852": {
      "fn": "Pausable.paused",
      "offset": [
        1403,
        1441
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "6853": {
      "fn": "Pausable.paused",
      "offset": [
        1403,
        1441
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "6855": {
      "fn": "Pausable.paused",
      "offset": [
        1403,
        1441
      ],
      "op": "ADD",
      "path": "1"
    },
    "6856": {
      "fn": "Pausable.paused",
      "offset": [
        1403,
        1441
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xB7A"
    },
    "6859": {
      "fn": "Pausable.paused",
      "offset": [
        1403,
        1441
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "6860": {
      "fn": "Pausable.paused",
      "offset": [
        1403,
        1441
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x34A0"
    },
    "6863": {
      "fn": "Pausable.paused",
      "jump": "i",
      "offset": [
        1403,
        1441
      ],
      "op": "JUMP",
      "path": "1"
    },
    "6864": {
      "fn": "Pausable.paused",
      "offset": [
        1403,
        1441
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "6865": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        4467,
        4483
      ],
      "op": "PUSH1",
      "path": "16",
      "statement": 58,
      "value": "0x3"
    },
    "6867": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        4458,
        4463
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x18"
    },
    "6869": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        4458,
        4463
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "6870": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        4458,
        4463
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0xFF"
    },
    "6872": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        4458,
        4463
      ],
      "op": "AND",
      "path": "16"
    },
    "6873": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        4458,
        4483
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x3"
    },
    "6875": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        4458,
        4483
      ],
      "op": "DUP2",
      "path": "16"
    },
    "6876": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        4458,
        4483
      ],
      "op": "GT",
      "path": "16"
    },
    "6877": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        4458,
        4483
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "6878": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        4458,
        4483
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1AE9"
    },
    "6881": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        4458,
        4483
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "6882": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        4458,
        4483
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1AE9"
    },
    "6885": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        4458,
        4483
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x3318"
    },
    "6888": {
      "fn": "CryptidToken.publicMint",
      "jump": "i",
      "offset": [
        4458,
        4483
      ],
      "op": "JUMP",
      "path": "16"
    },
    "6889": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        4458,
        4483
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "6890": {
      "branch": 163,
      "fn": "CryptidToken.publicMint",
      "offset": [
        4458,
        4483
      ],
      "op": "EQ",
      "path": "16"
    },
    "6891": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        4450,
        4514
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1B36"
    },
    "6894": {
      "branch": 163,
      "fn": "CryptidToken.publicMint",
      "offset": [
        4450,
        4514
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "6895": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        4450,
        4514
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "6897": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        4450,
        4514
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "6898": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "6902": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "6904": {
      "op": "SHL"
    },
    "6905": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        4450,
        4514
      ],
      "op": "DUP2",
      "path": "16"
    },
    "6906": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        4450,
        4514
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "6907": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6909": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        4450,
        4514
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "6911": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        4450,
        4514
      ],
      "op": "DUP3",
      "path": "16"
    },
    "6912": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        4450,
        4514
      ],
      "op": "ADD",
      "path": "16"
    },
    "6913": {
      "op": "MSTORE"
    },
    "6914": {
      "op": "PUSH1",
      "value": "0x1A"
    },
    "6916": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "6918": {
      "op": "DUP3"
    },
    "6919": {
      "op": "ADD"
    },
    "6920": {
      "op": "MSTORE"
    },
    "6921": {
      "op": "PUSH32",
      "value": "0x5075626C69632053616C65206E6F7420696E697469617465642E000000000000"
    },
    "6954": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "6956": {
      "op": "DUP3"
    },
    "6957": {
      "op": "ADD"
    },
    "6958": {
      "op": "MSTORE"
    },
    "6959": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "6961": {
      "op": "ADD"
    },
    "6962": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        4450,
        4514
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xB7A"
    },
    "6965": {
      "op": "JUMP"
    },
    "6966": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        4450,
        4514
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "6967": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        4564,
        4579
      ],
      "op": "PUSH1",
      "path": "16",
      "statement": 59,
      "value": "0x16"
    },
    "6969": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        4564,
        4579
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "6970": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        4549,
        4560
      ],
      "op": "DUP4",
      "path": "16"
    },
    "6971": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        4532,
        4560
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0xFF"
    },
    "6973": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        4532,
        4560
      ],
      "op": "AND",
      "path": "16"
    },
    "6974": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        4532,
        4545
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1B45"
    },
    "6977": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        4532,
        4543
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xDB6"
    },
    "6980": {
      "fn": "CryptidToken.publicMint",
      "jump": "i",
      "offset": [
        4532,
        4545
      ],
      "op": "JUMP",
      "path": "16"
    },
    "6981": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        4532,
        4545
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "6982": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        4532,
        4560
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1B4F"
    },
    "6985": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        4532,
        4560
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "6986": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        4532,
        4560
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "6987": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        4532,
        4560
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x34CA"
    },
    "6990": {
      "fn": "CryptidToken.publicMint",
      "jump": "i",
      "offset": [
        4532,
        4560
      ],
      "op": "JUMP",
      "path": "16"
    },
    "6991": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        4532,
        4560
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "6992": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        4532,
        4579
      ],
      "op": "GT",
      "path": "16"
    },
    "6993": {
      "branch": 164,
      "fn": "CryptidToken.publicMint",
      "offset": [
        4532,
        4579
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "6994": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        4524,
        4621
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1BAB"
    },
    "6997": {
      "branch": 164,
      "fn": "CryptidToken.publicMint",
      "offset": [
        4524,
        4621
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "6998": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        4524,
        4621
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "7000": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        4524,
        4621
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "7001": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "7005": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "7007": {
      "op": "SHL"
    },
    "7008": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        4524,
        4621
      ],
      "op": "DUP2",
      "path": "16"
    },
    "7009": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        4524,
        4621
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "7010": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7012": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        4524,
        4621
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "7014": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        4524,
        4621
      ],
      "op": "DUP3",
      "path": "16"
    },
    "7015": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        4524,
        4621
      ],
      "op": "ADD",
      "path": "16"
    },
    "7016": {
      "op": "MSTORE"
    },
    "7017": {
      "op": "PUSH1",
      "value": "0x25"
    },
    "7019": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "7021": {
      "op": "DUP3"
    },
    "7022": {
      "op": "ADD"
    },
    "7023": {
      "op": "MSTORE"
    },
    "7024": {
      "op": "PUSH32",
      "value": "0x5472616E73616374696F6E206578636565647320746F74616C2073616C652073"
    },
    "7057": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "7059": {
      "op": "DUP3"
    },
    "7060": {
      "op": "ADD"
    },
    "7061": {
      "op": "MSTORE"
    },
    "7062": {
      "op": "PUSH5",
      "value": "0x7570706C79"
    },
    "7068": {
      "op": "PUSH1",
      "value": "0xD8"
    },
    "7070": {
      "op": "SHL"
    },
    "7071": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "7073": {
      "op": "DUP3"
    },
    "7074": {
      "op": "ADD"
    },
    "7075": {
      "op": "MSTORE"
    },
    "7076": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "7078": {
      "op": "ADD"
    },
    "7079": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        4524,
        4621
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xB7A"
    },
    "7082": {
      "op": "JUMP"
    },
    "7083": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        4524,
        4621
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "7084": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        4654,
        4666
      ],
      "op": "PUSH1",
      "path": "16",
      "statement": 60,
      "value": "0x11"
    },
    "7086": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        4654,
        4666
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "7087": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        4654,
        4666
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0xFF"
    },
    "7089": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        4654,
        4666
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "7090": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        4654,
        4666
      ],
      "op": "DUP2",
      "path": "16"
    },
    "7091": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        4654,
        4666
      ],
      "op": "AND",
      "path": "16"
    },
    "7092": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        4639,
        4666
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "7093": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        4639,
        4666
      ],
      "op": "DUP5",
      "path": "16"
    },
    "7094": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        4639,
        4666
      ],
      "op": "AND",
      "path": "16"
    },
    "7095": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        4639,
        4666
      ],
      "op": "GT",
      "path": "16"
    },
    "7096": {
      "branch": 165,
      "fn": "CryptidToken.publicMint",
      "offset": [
        4639,
        4666
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "7097": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        4631,
        4713
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1C17"
    },
    "7100": {
      "branch": 165,
      "fn": "CryptidToken.publicMint",
      "offset": [
        4631,
        4713
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "7101": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        4631,
        4713
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "7103": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        4631,
        4713
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "7104": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "7108": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "7110": {
      "op": "SHL"
    },
    "7111": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        4631,
        4713
      ],
      "op": "DUP2",
      "path": "16"
    },
    "7112": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        4631,
        4713
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "7113": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7115": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        4631,
        4713
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "7117": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        4631,
        4713
      ],
      "op": "DUP3",
      "path": "16"
    },
    "7118": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        4631,
        4713
      ],
      "op": "ADD",
      "path": "16"
    },
    "7119": {
      "op": "MSTORE"
    },
    "7120": {
      "op": "PUSH1",
      "value": "0x2A"
    },
    "7122": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "7124": {
      "op": "DUP3"
    },
    "7125": {
      "op": "ADD"
    },
    "7126": {
      "op": "MSTORE"
    },
    "7127": {
      "op": "PUSH32",
      "value": "0x45786365656473206D617820616C6C6F776564206D696E747320706572207472"
    },
    "7160": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "7162": {
      "op": "DUP3"
    },
    "7163": {
      "op": "ADD"
    },
    "7164": {
      "op": "MSTORE"
    },
    "7165": {
      "op": "PUSH10",
      "value": "0x30B739B0B1BA34B7B717"
    },
    "7176": {
      "op": "PUSH1",
      "value": "0xB1"
    },
    "7178": {
      "op": "SHL"
    },
    "7179": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "7181": {
      "op": "DUP3"
    },
    "7182": {
      "op": "ADD"
    },
    "7183": {
      "op": "MSTORE"
    },
    "7184": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "7186": {
      "op": "ADD"
    },
    "7187": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        4631,
        4713
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xB7A"
    },
    "7190": {
      "op": "JUMP"
    },
    "7191": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        4631,
        4713
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "7192": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        4742,
        4743
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x1"
    },
    "7194": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        4725,
        4882
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "7195": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        4750,
        4761
      ],
      "op": "DUP4",
      "path": "16"
    },
    "7196": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        4745,
        4761
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0xFF"
    },
    "7198": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        4745,
        4761
      ],
      "op": "AND",
      "path": "16"
    },
    "7199": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        4745,
        4746
      ],
      "op": "DUP2",
      "path": "16"
    },
    "7200": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        4745,
        4761
      ],
      "op": "GT",
      "path": "16"
    },
    "7201": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        4725,
        4882
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1C51"
    },
    "7204": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        4725,
        4882
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "7205": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        4782,
        4830
      ],
      "op": "PUSH2",
      "path": "16",
      "statement": 61,
      "value": "0x1C31"
    },
    "7208": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        4792,
        4802
      ],
      "op": "CALLER",
      "path": "16"
    },
    "7209": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        4804,
        4829
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x11CF"
    },
    "7212": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        4804,
        4819
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0xC"
    },
    "7214": {
      "fn": "Counters.current",
      "offset": [
        918,
        932
      ],
      "op": "SLOAD",
      "path": "11"
    },
    "7215": {
      "fn": "Counters.current",
      "offset": [
        918,
        932
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "7216": {
      "fn": "Counters.current",
      "offset": [
        827,
        939
      ],
      "op": "JUMP",
      "path": "11"
    },
    "7217": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        4782,
        4830
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "7218": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        4844,
        4871
      ],
      "op": "PUSH2",
      "path": "16",
      "statement": 62,
      "value": "0x1C3F"
    },
    "7221": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        4844,
        4859
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0xC"
    },
    "7223": {
      "fn": "Counters.increment",
      "offset": [
        1032,
        1051
      ],
      "op": "DUP1",
      "path": "11"
    },
    "7224": {
      "fn": "Counters.increment",
      "offset": [
        1032,
        1051
      ],
      "op": "SLOAD",
      "path": "11"
    },
    "7225": {
      "fn": "Counters.increment",
      "offset": [
        1050,
        1051
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x1"
    },
    "7227": {
      "fn": "Counters.increment",
      "offset": [
        1032,
        1051
      ],
      "op": "ADD",
      "path": "11"
    },
    "7228": {
      "fn": "Counters.increment",
      "offset": [
        1032,
        1051
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "7229": {
      "fn": "Counters.increment",
      "offset": [
        1032,
        1051
      ],
      "op": "SSTORE",
      "path": "11"
    },
    "7230": {
      "fn": "Counters.increment",
      "offset": [
        945,
        1068
      ],
      "op": "JUMP",
      "path": "11"
    },
    "7231": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        4844,
        4871
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "7232": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        4763,
        4766
      ],
      "op": "DUP1",
      "path": "16",
      "statement": 63
    },
    "7233": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        4763,
        4766
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1C49"
    },
    "7236": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        4763,
        4766
      ],
      "op": "DUP2",
      "path": "16"
    },
    "7237": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        4763,
        4766
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x34F8"
    },
    "7240": {
      "fn": "CryptidToken.publicMint",
      "jump": "i",
      "offset": [
        4763,
        4766
      ],
      "op": "JUMP",
      "path": "16"
    },
    "7241": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        4763,
        4766
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "7242": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        4763,
        4766
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "7243": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        4763,
        4766
      ],
      "op": "POP",
      "path": "16"
    },
    "7244": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        4763,
        4766
      ],
      "op": "POP",
      "path": "16"
    },
    "7245": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        4725,
        4882
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1C1A"
    },
    "7248": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        4725,
        4882
      ],
      "op": "JUMP",
      "path": "16"
    },
    "7249": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        4725,
        4882
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "7250": {
      "op": "POP"
    },
    "7251": {
      "op": "POP"
    },
    "7252": {
      "offset": [
        1701,
        1702
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "7254": {
      "offset": [
        2628,
        2635
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xB"
    },
    "7256": {
      "offset": [
        2628,
        2650
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "7257": {
      "op": "POP"
    },
    "7258": {
      "op": "POP"
    },
    "7259": {
      "fn": "CryptidToken.publicMint",
      "jump": "o",
      "offset": [
        4252,
        4888
      ],
      "op": "JUMP",
      "path": "16"
    },
    "7260": {
      "fn": "ERC721.symbol",
      "offset": [
        2635,
        2737
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "7261": {
      "fn": "ERC721.symbol",
      "offset": [
        2691,
        2704
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x60"
    },
    "7263": {
      "fn": "ERC721.symbol",
      "offset": [
        2723,
        2730
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 64,
      "value": "0x1"
    },
    "7265": {
      "fn": "ERC721.symbol",
      "offset": [
        2716,
        2730
      ],
      "op": "DUP1",
      "path": "3"
    },
    "7266": {
      "fn": "ERC721.symbol",
      "offset": [
        2716,
        2730
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "7267": {
      "fn": "ERC721.symbol",
      "offset": [
        2716,
        2730
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xA82"
    },
    "7270": {
      "fn": "ERC721.symbol",
      "offset": [
        2716,
        2730
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "7271": {
      "fn": "ERC721.symbol",
      "offset": [
        2716,
        2730
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x3393"
    },
    "7274": {
      "fn": "ERC721.symbol",
      "jump": "i",
      "offset": [
        2716,
        2730
      ],
      "op": "JUMP",
      "path": "3"
    },
    "7275": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4268,
        4421
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "7276": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4362,
        4414
      ],
      "op": "PUSH2",
      "path": "3",
      "statement": 65,
      "value": "0xDB2"
    },
    "7279": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "10"
    },
    "7280": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4395,
        4403
      ],
      "op": "DUP4",
      "path": "3"
    },
    "7281": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4405,
        4413
      ],
      "op": "DUP4",
      "path": "3"
    },
    "7282": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4362,
        4380
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2696"
    },
    "7285": {
      "fn": "ERC721.setApprovalForAll",
      "jump": "i",
      "offset": [
        4362,
        4414
      ],
      "op": "JUMP",
      "path": "3"
    },
    "7286": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        2615,
        3008
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "7287": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xA"
    },
    "7289": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "7290": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7292": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7294": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7296": {
      "op": "SHL"
    },
    "7297": {
      "op": "SUB"
    },
    "7298": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x100"
    },
    "7301": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "7302": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "7303": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "DIV",
      "path": "0"
    },
    "7304": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "AND",
      "path": "0"
    },
    "7305": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "10"
    },
    "7306": {
      "offset": [
        1248,
        1271
      ],
      "op": "EQ",
      "path": "0"
    },
    "7307": {
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1CA6"
    },
    "7310": {
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "7311": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "7313": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "7314": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "7318": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "7320": {
      "op": "SHL"
    },
    "7321": {
      "offset": [
        1240,
        1308
      ],
      "op": "DUP2",
      "path": "0"
    },
    "7322": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "7323": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "7325": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "ADD",
      "path": "0"
    },
    "7326": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xB7A"
    },
    "7329": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "7330": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x33CE"
    },
    "7333": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMP",
      "path": "0"
    },
    "7334": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "7335": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        2782,
        2797
      ],
      "op": "PUSH1",
      "path": "16",
      "statement": 66,
      "value": "0x16"
    },
    "7337": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        2782,
        2797
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "7338": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        2768,
        2778
      ],
      "op": "DUP3",
      "path": "16"
    },
    "7339": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        2751,
        2778
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0xFF"
    },
    "7341": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        2751,
        2778
      ],
      "op": "AND",
      "path": "16"
    },
    "7342": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        2751,
        2764
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1CB5"
    },
    "7345": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        2751,
        2762
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xDB6"
    },
    "7348": {
      "fn": "CryptidToken.airdropCryptid",
      "jump": "i",
      "offset": [
        2751,
        2764
      ],
      "op": "JUMP",
      "path": "16"
    },
    "7349": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        2751,
        2764
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "7350": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        2751,
        2778
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1CBF"
    },
    "7353": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        2751,
        2778
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "7354": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        2751,
        2778
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "7355": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        2751,
        2778
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x34CA"
    },
    "7358": {
      "fn": "CryptidToken.airdropCryptid",
      "jump": "i",
      "offset": [
        2751,
        2778
      ],
      "op": "JUMP",
      "path": "16"
    },
    "7359": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        2751,
        2778
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "7360": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        2751,
        2797
      ],
      "op": "GT",
      "path": "16"
    },
    "7361": {
      "branch": 166,
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        2751,
        2797
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "7362": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        2743,
        2844
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1D20"
    },
    "7365": {
      "branch": 166,
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        2743,
        2844
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "7366": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        2743,
        2844
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "7368": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        2743,
        2844
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "7369": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "7373": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "7375": {
      "op": "SHL"
    },
    "7376": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        2743,
        2844
      ],
      "op": "DUP2",
      "path": "16"
    },
    "7377": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        2743,
        2844
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "7378": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7380": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        2743,
        2844
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "7382": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        2743,
        2844
      ],
      "op": "DUP3",
      "path": "16"
    },
    "7383": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        2743,
        2844
      ],
      "op": "ADD",
      "path": "16"
    },
    "7384": {
      "op": "MSTORE"
    },
    "7385": {
      "op": "PUSH1",
      "value": "0x2A"
    },
    "7387": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "7389": {
      "op": "DUP3"
    },
    "7390": {
      "op": "ADD"
    },
    "7391": {
      "op": "MSTORE"
    },
    "7392": {
      "op": "PUSH32",
      "value": "0x4D696E7420616D6F756E742077696C6C2065786365656420746F74616C207361"
    },
    "7425": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "7427": {
      "op": "DUP3"
    },
    "7428": {
      "op": "ADD"
    },
    "7429": {
      "op": "MSTORE"
    },
    "7430": {
      "op": "PUSH10",
      "value": "0x36329039BAB838363C97"
    },
    "7441": {
      "op": "PUSH1",
      "value": "0xB1"
    },
    "7443": {
      "op": "SHL"
    },
    "7444": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "7446": {
      "op": "DUP3"
    },
    "7447": {
      "op": "ADD"
    },
    "7448": {
      "op": "MSTORE"
    },
    "7449": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "7451": {
      "op": "ADD"
    },
    "7452": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        2743,
        2844
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xB7A"
    },
    "7455": {
      "op": "JUMP"
    },
    "7456": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        2743,
        2844
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "7457": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        2871,
        2872
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x1"
    },
    "7459": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        2854,
        3002
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "7460": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        2879,
        2889
      ],
      "op": "DUP3",
      "path": "16"
    },
    "7461": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        2874,
        2889
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0xFF"
    },
    "7463": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        2874,
        2889
      ],
      "op": "AND",
      "path": "16"
    },
    "7464": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        2874,
        2875
      ],
      "op": "DUP2",
      "path": "16"
    },
    "7465": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        2874,
        2889
      ],
      "op": "GT",
      "path": "16"
    },
    "7466": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        2854,
        3002
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xCB0"
    },
    "7469": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        2854,
        3002
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "7470": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        2910,
        2950
      ],
      "op": "PUSH2",
      "path": "16",
      "statement": 67,
      "value": "0x1D3A"
    },
    "7473": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        2920,
        2922
      ],
      "op": "DUP3",
      "path": "16"
    },
    "7474": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        2924,
        2949
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x11CF"
    },
    "7477": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        2924,
        2939
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0xC"
    },
    "7479": {
      "fn": "Counters.current",
      "offset": [
        918,
        932
      ],
      "op": "SLOAD",
      "path": "11"
    },
    "7480": {
      "fn": "Counters.current",
      "offset": [
        918,
        932
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "7481": {
      "fn": "Counters.current",
      "offset": [
        827,
        939
      ],
      "op": "JUMP",
      "path": "11"
    },
    "7482": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        2910,
        2950
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "7483": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        2964,
        2991
      ],
      "op": "PUSH2",
      "path": "16",
      "statement": 68,
      "value": "0x1D48"
    },
    "7486": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        2964,
        2979
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0xC"
    },
    "7488": {
      "fn": "Counters.increment",
      "offset": [
        1032,
        1051
      ],
      "op": "DUP1",
      "path": "11"
    },
    "7489": {
      "fn": "Counters.increment",
      "offset": [
        1032,
        1051
      ],
      "op": "SLOAD",
      "path": "11"
    },
    "7490": {
      "fn": "Counters.increment",
      "offset": [
        1050,
        1051
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x1"
    },
    "7492": {
      "fn": "Counters.increment",
      "offset": [
        1032,
        1051
      ],
      "op": "ADD",
      "path": "11"
    },
    "7493": {
      "fn": "Counters.increment",
      "offset": [
        1032,
        1051
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "7494": {
      "fn": "Counters.increment",
      "offset": [
        1032,
        1051
      ],
      "op": "SSTORE",
      "path": "11"
    },
    "7495": {
      "fn": "Counters.increment",
      "offset": [
        945,
        1068
      ],
      "op": "JUMP",
      "path": "11"
    },
    "7496": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        2964,
        2991
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "7497": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        2891,
        2894
      ],
      "op": "DUP1",
      "path": "16",
      "statement": 69
    },
    "7498": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        2891,
        2894
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1D52"
    },
    "7501": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        2891,
        2894
      ],
      "op": "DUP2",
      "path": "16"
    },
    "7502": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        2891,
        2894
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x34F8"
    },
    "7505": {
      "fn": "CryptidToken.airdropCryptid",
      "jump": "i",
      "offset": [
        2891,
        2894
      ],
      "op": "JUMP",
      "path": "16"
    },
    "7506": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        2891,
        2894
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "7507": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        2891,
        2894
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "7508": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        2891,
        2894
      ],
      "op": "POP",
      "path": "16"
    },
    "7509": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        2891,
        2894
      ],
      "op": "POP",
      "path": "16"
    },
    "7510": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        2854,
        3002
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1D23"
    },
    "7513": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        2854,
        3002
      ],
      "op": "JUMP",
      "path": "16"
    },
    "7514": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5352,
        5672
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "7515": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5521,
        5562
      ],
      "op": "PUSH2",
      "path": "3",
      "statement": 70,
      "value": "0x1D64"
    },
    "7518": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "10"
    },
    "7519": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5554,
        5561
      ],
      "op": "DUP4",
      "path": "3"
    },
    "7520": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5521,
        5539
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x227F"
    },
    "7523": {
      "fn": "ERC721.safeTransferFrom",
      "jump": "i",
      "offset": [
        5521,
        5562
      ],
      "op": "JUMP",
      "path": "3"
    },
    "7524": {
      "branch": 176,
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5521,
        5562
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "7525": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5513,
        5616
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1D80"
    },
    "7528": {
      "branch": 176,
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5513,
        5616
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "7529": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5513,
        5616
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "7531": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5513,
        5616
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "7532": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "7536": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "7538": {
      "op": "SHL"
    },
    "7539": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5513,
        5616
      ],
      "op": "DUP2",
      "path": "3"
    },
    "7540": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5513,
        5616
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "7541": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5513,
        5616
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "7543": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5513,
        5616
      ],
      "op": "ADD",
      "path": "3"
    },
    "7544": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5513,
        5616
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xB7A"
    },
    "7547": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5513,
        5616
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "7548": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5513,
        5616
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x3430"
    },
    "7551": {
      "fn": "ERC721.safeTransferFrom",
      "jump": "i",
      "offset": [
        5513,
        5616
      ],
      "op": "JUMP",
      "path": "3"
    },
    "7552": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5513,
        5616
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "7553": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5626,
        5665
      ],
      "op": "PUSH2",
      "path": "3",
      "statement": 71,
      "value": "0x1D8C"
    },
    "7556": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5640,
        5644
      ],
      "op": "DUP5",
      "path": "3"
    },
    "7557": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5646,
        5648
      ],
      "op": "DUP5",
      "path": "3"
    },
    "7558": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5650,
        5657
      ],
      "op": "DUP5",
      "path": "3"
    },
    "7559": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5659,
        5664
      ],
      "op": "DUP5",
      "path": "3"
    },
    "7560": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5626,
        5639
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2765"
    },
    "7563": {
      "fn": "ERC721.safeTransferFrom",
      "jump": "i",
      "offset": [
        5626,
        5665
      ],
      "op": "JUMP",
      "path": "3"
    },
    "7564": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5626,
        5665
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "7565": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5352,
        5672
      ],
      "op": "POP",
      "path": "3"
    },
    "7566": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5352,
        5672
      ],
      "op": "POP",
      "path": "3"
    },
    "7567": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5352,
        5672
      ],
      "op": "POP",
      "path": "3"
    },
    "7568": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5352,
        5672
      ],
      "op": "POP",
      "path": "3"
    },
    "7569": {
      "fn": "ERC721.safeTransferFrom",
      "jump": "o",
      "offset": [
        5352,
        5672
      ],
      "op": "JUMP",
      "path": "3"
    },
    "7570": {
      "fn": "CryptidToken.overrideClaim",
      "offset": [
        5099,
        5201
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "7571": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xA"
    },
    "7573": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "7574": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7576": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7578": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7580": {
      "op": "SHL"
    },
    "7581": {
      "op": "SUB"
    },
    "7582": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x100"
    },
    "7585": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "7586": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "7587": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "DIV",
      "path": "0"
    },
    "7588": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "AND",
      "path": "0"
    },
    "7589": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "10"
    },
    "7590": {
      "offset": [
        1248,
        1271
      ],
      "op": "EQ",
      "path": "0"
    },
    "7591": {
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1DC2"
    },
    "7594": {
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "7595": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "7597": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "7598": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "7602": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "7604": {
      "op": "SHL"
    },
    "7605": {
      "offset": [
        1240,
        1308
      ],
      "op": "DUP2",
      "path": "0"
    },
    "7606": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "7607": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "7609": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "ADD",
      "path": "0"
    },
    "7610": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xB7A"
    },
    "7613": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "7614": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x33CE"
    },
    "7617": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMP",
      "path": "0"
    },
    "7618": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "7619": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7621": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7623": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7625": {
      "op": "SHL"
    },
    "7626": {
      "op": "SUB"
    },
    "7627": {
      "fn": "CryptidToken.overrideClaim",
      "offset": [
        5169,
        5187
      ],
      "op": "AND",
      "path": "16",
      "statement": 72
    },
    "7628": {
      "fn": "CryptidToken.overrideClaim",
      "offset": [
        5169,
        5187
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "7630": {
      "fn": "CryptidToken.overrideClaim",
      "offset": [
        5169,
        5187
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "7631": {
      "fn": "CryptidToken.overrideClaim",
      "offset": [
        5169,
        5187
      ],
      "op": "DUP2",
      "path": "16"
    },
    "7632": {
      "fn": "CryptidToken.overrideClaim",
      "offset": [
        5169,
        5187
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "7633": {
      "fn": "CryptidToken.overrideClaim",
      "offset": [
        5169,
        5176
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x13"
    },
    "7635": {
      "fn": "CryptidToken.overrideClaim",
      "offset": [
        5169,
        5187
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "7637": {
      "fn": "CryptidToken.overrideClaim",
      "offset": [
        5169,
        5187
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "7638": {
      "fn": "CryptidToken.overrideClaim",
      "offset": [
        5169,
        5187
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "7640": {
      "fn": "CryptidToken.overrideClaim",
      "offset": [
        5169,
        5187
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "7641": {
      "fn": "CryptidToken.overrideClaim",
      "offset": [
        5169,
        5187
      ],
      "op": "KECCAK256",
      "path": "16"
    },
    "7642": {
      "fn": "CryptidToken.overrideClaim",
      "offset": [
        5169,
        5194
      ],
      "op": "DUP1",
      "path": "16"
    },
    "7643": {
      "fn": "CryptidToken.overrideClaim",
      "offset": [
        5169,
        5194
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "7644": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "7646": {
      "op": "NOT"
    },
    "7647": {
      "fn": "CryptidToken.overrideClaim",
      "offset": [
        5169,
        5194
      ],
      "op": "AND",
      "path": "16"
    },
    "7648": {
      "fn": "CryptidToken.overrideClaim",
      "offset": [
        5190,
        5194
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x1"
    },
    "7650": {
      "fn": "CryptidToken.overrideClaim",
      "offset": [
        5169,
        5194
      ],
      "op": "OR",
      "path": "16"
    },
    "7651": {
      "fn": "CryptidToken.overrideClaim",
      "offset": [
        5169,
        5194
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "7652": {
      "fn": "CryptidToken.overrideClaim",
      "offset": [
        5169,
        5194
      ],
      "op": "SSTORE",
      "path": "16"
    },
    "7653": {
      "fn": "CryptidToken.overrideClaim",
      "jump": "o",
      "offset": [
        5099,
        5201
      ],
      "op": "JUMP",
      "path": "16"
    },
    "7654": {
      "offset": [
        935,
        972
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "7655": {
      "fn": "CryptidToken.overrideClaim",
      "offset": [
        935,
        972
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x10"
    },
    "7657": {
      "fn": "CryptidToken.overrideClaim",
      "offset": [
        935,
        972
      ],
      "op": "DUP1",
      "path": "16"
    },
    "7658": {
      "fn": "CryptidToken.overrideClaim",
      "offset": [
        935,
        972
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "7659": {
      "fn": "CryptidToken.overrideClaim",
      "offset": [
        935,
        972
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x15A5"
    },
    "7662": {
      "fn": "CryptidToken.overrideClaim",
      "offset": [
        935,
        972
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "7663": {
      "fn": "CryptidToken.overrideClaim",
      "offset": [
        935,
        972
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x3393"
    },
    "7666": {
      "fn": "CryptidToken.overrideClaim",
      "jump": "i",
      "offset": [
        935,
        972
      ],
      "op": "JUMP",
      "path": "16"
    },
    "7667": {
      "offset": [
        869,
        897
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "7668": {
      "fn": "CryptidToken.overrideClaim",
      "offset": [
        869,
        897
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0xE"
    },
    "7670": {
      "fn": "CryptidToken.overrideClaim",
      "offset": [
        869,
        897
      ],
      "op": "DUP1",
      "path": "16"
    },
    "7671": {
      "fn": "CryptidToken.overrideClaim",
      "offset": [
        869,
        897
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "7672": {
      "fn": "CryptidToken.overrideClaim",
      "offset": [
        869,
        897
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x15A5"
    },
    "7675": {
      "fn": "CryptidToken.overrideClaim",
      "offset": [
        869,
        897
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "7676": {
      "fn": "CryptidToken.overrideClaim",
      "offset": [
        869,
        897
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x3393"
    },
    "7679": {
      "fn": "CryptidToken.overrideClaim",
      "jump": "i",
      "offset": [
        869,
        897
      ],
      "op": "JUMP",
      "path": "16"
    },
    "7680": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        7761,
        8027
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "7681": {
      "fn": "ERC721._exists",
      "offset": [
        7209,
        7213
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "7683": {
      "fn": "ERC721._exists",
      "offset": [
        7232,
        7248
      ],
      "op": "DUP2",
      "path": "3"
    },
    "7684": {
      "fn": "ERC721._exists",
      "offset": [
        7232,
        7248
      ],
      "op": "DUP2",
      "path": "3"
    },
    "7685": {
      "fn": "ERC721._exists",
      "offset": [
        7232,
        7248
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "7686": {
      "fn": "ERC721._exists",
      "offset": [
        7232,
        7239
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x2"
    },
    "7688": {
      "fn": "ERC721._exists",
      "offset": [
        7232,
        7248
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "7690": {
      "fn": "ERC721._exists",
      "offset": [
        7232,
        7248
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "7691": {
      "fn": "ERC721._exists",
      "offset": [
        7232,
        7248
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "7693": {
      "fn": "ERC721._exists",
      "offset": [
        7232,
        7248
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "7694": {
      "fn": "ERC721._exists",
      "offset": [
        7232,
        7248
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "7695": {
      "fn": "ERC721._exists",
      "offset": [
        7232,
        7248
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "7696": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        7834,
        7847
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x60"
    },
    "7698": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        7834,
        7847
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "7699": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7701": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7703": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7705": {
      "op": "SHL"
    },
    "7706": {
      "op": "SUB"
    },
    "7707": {
      "fn": "ERC721._exists",
      "offset": [
        7232,
        7248
      ],
      "op": "AND",
      "path": "3"
    },
    "7708": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        7859,
        7935
      ],
      "op": "PUSH2",
      "path": "16",
      "statement": 73,
      "value": "0x1E7F"
    },
    "7711": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        7859,
        7935
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "7712": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        7859,
        7935
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "7714": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        7859,
        7935
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "7715": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "7719": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "7721": {
      "op": "SHL"
    },
    "7722": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        7859,
        7935
      ],
      "op": "DUP2",
      "path": "16"
    },
    "7723": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        7859,
        7935
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "7724": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7726": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        7859,
        7935
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "7728": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        7859,
        7935
      ],
      "op": "DUP3",
      "path": "16"
    },
    "7729": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        7859,
        7935
      ],
      "op": "ADD",
      "path": "16"
    },
    "7730": {
      "op": "MSTORE"
    },
    "7731": {
      "op": "PUSH1",
      "value": "0x2F"
    },
    "7733": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "7735": {
      "op": "DUP3"
    },
    "7736": {
      "op": "ADD"
    },
    "7737": {
      "op": "MSTORE"
    },
    "7738": {
      "op": "PUSH32",
      "value": "0x4552433732314D657461646174613A2055524920717565727920666F72206E6F"
    },
    "7771": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "7773": {
      "op": "DUP3"
    },
    "7774": {
      "op": "ADD"
    },
    "7775": {
      "op": "MSTORE"
    },
    "7776": {
      "op": "PUSH15",
      "value": "0x3732BC34B9BA32B73A103A37B5B2B7"
    },
    "7792": {
      "op": "PUSH1",
      "value": "0x89"
    },
    "7794": {
      "op": "SHL"
    },
    "7795": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "7797": {
      "op": "DUP3"
    },
    "7798": {
      "op": "ADD"
    },
    "7799": {
      "op": "MSTORE"
    },
    "7800": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "7802": {
      "op": "ADD"
    },
    "7803": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        7859,
        7935
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xB7A"
    },
    "7806": {
      "op": "JUMP"
    },
    "7807": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        7859,
        7935
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "7808": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        7976,
        7983
      ],
      "op": "PUSH1",
      "path": "16",
      "statement": 74,
      "value": "0xF"
    },
    "7810": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        7985,
        8003
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1E8A"
    },
    "7813": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        7985,
        7992
      ],
      "op": "DUP4",
      "path": "16"
    },
    "7814": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        7985,
        8001
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x2798"
    },
    "7817": {
      "fn": "CryptidToken.tokenURI",
      "jump": "i",
      "offset": [
        7985,
        8003
      ],
      "op": "JUMP",
      "path": "16"
    },
    "7818": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        7985,
        8003
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "7819": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        8005,
        8018
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x10"
    },
    "7821": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        7959,
        8019
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "7823": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        7959,
        8019
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "7824": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        7959,
        8019
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "7826": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        7959,
        8019
      ],
      "op": "ADD",
      "path": "16"
    },
    "7827": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        7959,
        8019
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1E9E"
    },
    "7830": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        7959,
        8019
      ],
      "op": "SWAP4",
      "path": "16"
    },
    "7831": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        7959,
        8019
      ],
      "op": "SWAP3",
      "path": "16"
    },
    "7832": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        7959,
        8019
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "7833": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        7959,
        8019
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "7834": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        7959,
        8019
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x35AD"
    },
    "7837": {
      "fn": "CryptidToken.tokenURI",
      "jump": "i",
      "offset": [
        7959,
        8019
      ],
      "op": "JUMP",
      "path": "16"
    },
    "7838": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        7959,
        8019
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "7839": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        7959,
        8019
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "7841": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        7959,
        8019
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "7842": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        7959,
        8019
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "7844": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        7959,
        8019
      ],
      "op": "DUP2",
      "path": "16"
    },
    "7845": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        7959,
        8019
      ],
      "op": "DUP4",
      "path": "16"
    },
    "7846": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        7959,
        8019
      ],
      "op": "SUB",
      "path": "16"
    },
    "7847": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        7959,
        8019
      ],
      "op": "SUB",
      "path": "16"
    },
    "7848": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        7959,
        8019
      ],
      "op": "DUP2",
      "path": "16"
    },
    "7849": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        7959,
        8019
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "7850": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        7959,
        8019
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "7851": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        7959,
        8019
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "7853": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        7959,
        8019
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "7854": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        7945,
        8020
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "7855": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        7945,
        8020
      ],
      "op": "POP",
      "path": "16"
    },
    "7856": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        7761,
        8027
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "7857": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        7761,
        8027
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "7858": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        7761,
        8027
      ],
      "op": "POP",
      "path": "16"
    },
    "7859": {
      "fn": "CryptidToken.tokenURI",
      "jump": "o",
      "offset": [
        7761,
        8027
      ],
      "op": "JUMP",
      "path": "16"
    },
    "7860": {
      "fn": "CryptidToken.setStage",
      "offset": [
        7114,
        7398
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "7861": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xA"
    },
    "7863": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "7864": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7866": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7868": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7870": {
      "op": "SHL"
    },
    "7871": {
      "op": "SUB"
    },
    "7872": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x100"
    },
    "7875": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "7876": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "7877": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "DIV",
      "path": "0"
    },
    "7878": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "AND",
      "path": "0"
    },
    "7879": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "10"
    },
    "7880": {
      "offset": [
        1248,
        1271
      ],
      "op": "EQ",
      "path": "0"
    },
    "7881": {
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1EE4"
    },
    "7884": {
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "7885": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "7887": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "7888": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "7892": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "7894": {
      "op": "SHL"
    },
    "7895": {
      "offset": [
        1240,
        1308
      ],
      "op": "DUP2",
      "path": "0"
    },
    "7896": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "7897": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "7899": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "ADD",
      "path": "0"
    },
    "7900": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xB7A"
    },
    "7903": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "7904": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x33CE"
    },
    "7907": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMP",
      "path": "0"
    },
    "7908": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "7909": {
      "fn": "CryptidToken.setStage",
      "offset": [
        7183,
        7203
      ],
      "op": "PUSH1",
      "path": "16",
      "statement": 75,
      "value": "0x11"
    },
    "7911": {
      "fn": "CryptidToken.setStage",
      "offset": [
        7183,
        7203
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "7912": {
      "fn": "CryptidToken.setStage",
      "offset": [
        7183,
        7203
      ],
      "op": "PUSH3",
      "path": "16",
      "value": "0x10000"
    },
    "7916": {
      "fn": "CryptidToken.setStage",
      "offset": [
        7183,
        7203
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "7917": {
      "fn": "CryptidToken.setStage",
      "offset": [
        7183,
        7203
      ],
      "op": "DIV",
      "path": "16"
    },
    "7918": {
      "fn": "CryptidToken.setStage",
      "offset": [
        7183,
        7203
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0xFF"
    },
    "7920": {
      "fn": "CryptidToken.setStage",
      "offset": [
        7183,
        7203
      ],
      "op": "AND",
      "path": "16"
    },
    "7921": {
      "fn": "CryptidToken.setStage",
      "offset": [
        7183,
        7211
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "7922": {
      "fn": "CryptidToken.setStage",
      "offset": [
        7183,
        7211
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "7923": {
      "fn": "CryptidToken.setStage",
      "offset": [
        7207,
        7211
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x1"
    },
    "7925": {
      "branch": 167,
      "fn": "CryptidToken.setStage",
      "offset": [
        7183,
        7211
      ],
      "op": "EQ",
      "path": "16"
    },
    "7926": {
      "fn": "CryptidToken.setStage",
      "offset": [
        7175,
        7272
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1F67"
    },
    "7929": {
      "branch": 167,
      "fn": "CryptidToken.setStage",
      "offset": [
        7175,
        7272
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "7930": {
      "fn": "CryptidToken.setStage",
      "offset": [
        7175,
        7272
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "7932": {
      "fn": "CryptidToken.setStage",
      "offset": [
        7175,
        7272
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "7933": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "7937": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "7939": {
      "op": "SHL"
    },
    "7940": {
      "fn": "CryptidToken.setStage",
      "offset": [
        7175,
        7272
      ],
      "op": "DUP2",
      "path": "16"
    },
    "7941": {
      "fn": "CryptidToken.setStage",
      "offset": [
        7175,
        7272
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "7942": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7944": {
      "fn": "CryptidToken.setStage",
      "offset": [
        7175,
        7272
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "7946": {
      "fn": "CryptidToken.setStage",
      "offset": [
        7175,
        7272
      ],
      "op": "DUP3",
      "path": "16"
    },
    "7947": {
      "fn": "CryptidToken.setStage",
      "offset": [
        7175,
        7272
      ],
      "op": "ADD",
      "path": "16"
    },
    "7948": {
      "op": "MSTORE"
    },
    "7949": {
      "op": "PUSH1",
      "value": "0x38"
    },
    "7951": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "7953": {
      "op": "DUP3"
    },
    "7954": {
      "op": "ADD"
    },
    "7955": {
      "op": "MSTORE"
    },
    "7956": {
      "op": "PUSH32",
      "value": "0x50726F76656E616E63652068617368206D7573742062652066726F7A656E2062"
    },
    "7989": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "7991": {
      "op": "DUP3"
    },
    "7992": {
      "op": "ADD"
    },
    "7993": {
      "op": "MSTORE"
    },
    "7994": {
      "op": "PUSH32",
      "value": "0x65666F7265206D696E74696E672063616E2073746172742E0000000000000000"
    },
    "8027": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "8029": {
      "op": "DUP3"
    },
    "8030": {
      "op": "ADD"
    },
    "8031": {
      "op": "MSTORE"
    },
    "8032": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "8034": {
      "op": "ADD"
    },
    "8035": {
      "fn": "CryptidToken.setStage",
      "offset": [
        7175,
        7272
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xB7A"
    },
    "8038": {
      "op": "JUMP"
    },
    "8039": {
      "fn": "CryptidToken.setStage",
      "offset": [
        7175,
        7272
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "8040": {
      "fn": "CryptidToken.setStage",
      "offset": [
        7377,
        7382
      ],
      "op": "PUSH1",
      "path": "16",
      "statement": 76,
      "value": "0x18"
    },
    "8042": {
      "fn": "CryptidToken.setStage",
      "offset": [
        7377,
        7391
      ],
      "op": "DUP1",
      "path": "16"
    },
    "8043": {
      "fn": "CryptidToken.setStage",
      "offset": [
        7377,
        7391
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "8044": {
      "fn": "CryptidToken.setStage",
      "offset": [
        7385,
        7391
      ],
      "op": "DUP3",
      "path": "16"
    },
    "8045": {
      "fn": "CryptidToken.setStage",
      "offset": [
        7385,
        7391
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "8046": {
      "fn": "CryptidToken.setStage",
      "offset": [
        7377,
        7382
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "8047": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "8049": {
      "op": "NOT"
    },
    "8050": {
      "fn": "CryptidToken.setStage",
      "offset": [
        7377,
        7391
      ],
      "op": "AND",
      "path": "16"
    },
    "8051": {
      "fn": "CryptidToken.setStage",
      "offset": [
        7377,
        7391
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x1"
    },
    "8053": {
      "fn": "CryptidToken.setStage",
      "offset": [
        7385,
        7391
      ],
      "op": "DUP4",
      "path": "16"
    },
    "8054": {
      "fn": "CryptidToken.setStage",
      "offset": [
        7377,
        7391
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x3"
    },
    "8056": {
      "fn": "CryptidToken.setStage",
      "offset": [
        7377,
        7391
      ],
      "op": "DUP2",
      "path": "16"
    },
    "8057": {
      "fn": "CryptidToken.setStage",
      "offset": [
        7377,
        7391
      ],
      "op": "GT",
      "path": "16"
    },
    "8058": {
      "fn": "CryptidToken.setStage",
      "offset": [
        7377,
        7391
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "8059": {
      "fn": "CryptidToken.setStage",
      "offset": [
        7377,
        7391
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1F86"
    },
    "8062": {
      "fn": "CryptidToken.setStage",
      "offset": [
        7377,
        7391
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "8063": {
      "fn": "CryptidToken.setStage",
      "offset": [
        7377,
        7391
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1F86"
    },
    "8066": {
      "fn": "CryptidToken.setStage",
      "offset": [
        7377,
        7391
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x3318"
    },
    "8069": {
      "fn": "CryptidToken.setStage",
      "jump": "i",
      "offset": [
        7377,
        7391
      ],
      "op": "JUMP",
      "path": "16"
    },
    "8070": {
      "fn": "CryptidToken.setStage",
      "offset": [
        7377,
        7391
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "8071": {
      "fn": "CryptidToken.setStage",
      "offset": [
        7377,
        7391
      ],
      "op": "MUL",
      "path": "16"
    },
    "8072": {
      "fn": "CryptidToken.setStage",
      "offset": [
        7377,
        7391
      ],
      "op": "OR",
      "path": "16"
    },
    "8073": {
      "fn": "CryptidToken.setStage",
      "offset": [
        7377,
        7391
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "8074": {
      "fn": "CryptidToken.setStage",
      "offset": [
        7377,
        7391
      ],
      "op": "SSTORE",
      "path": "16"
    },
    "8075": {
      "fn": "CryptidToken.setStage",
      "offset": [
        7377,
        7391
      ],
      "op": "POP",
      "path": "16"
    },
    "8076": {
      "fn": "CryptidToken.setStage",
      "offset": [
        7114,
        7398
      ],
      "op": "POP",
      "path": "16"
    },
    "8077": {
      "fn": "CryptidToken.setStage",
      "jump": "o",
      "offset": [
        7114,
        7398
      ],
      "op": "JUMP",
      "path": "16"
    },
    "8078": {
      "fn": "CryptidToken.lastMintID",
      "offset": [
        7543,
        7634
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "8079": {
      "fn": "CryptidToken.lastMintID",
      "offset": [
        7588,
        7595
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "8081": {
      "fn": "CryptidToken.lastMintID",
      "offset": [
        7613,
        7626
      ],
      "op": "PUSH2",
      "path": "16",
      "statement": 77,
      "value": "0xDCD"
    },
    "8084": {
      "fn": "CryptidToken.lastMintID",
      "offset": [
        7613,
        7624
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xDB6"
    },
    "8087": {
      "fn": "CryptidToken.lastMintID",
      "jump": "i",
      "offset": [
        7613,
        7626
      ],
      "op": "JUMP",
      "path": "16"
    },
    "8088": {
      "fn": "CryptidToken.setBaseExtension",
      "offset": [
        5843,
        5971
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "8089": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xA"
    },
    "8091": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "8092": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8094": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8096": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8098": {
      "op": "SHL"
    },
    "8099": {
      "op": "SUB"
    },
    "8100": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x100"
    },
    "8103": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "8104": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "8105": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "DIV",
      "path": "0"
    },
    "8106": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "AND",
      "path": "0"
    },
    "8107": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "10"
    },
    "8108": {
      "offset": [
        1248,
        1271
      ],
      "op": "EQ",
      "path": "0"
    },
    "8109": {
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1FC8"
    },
    "8112": {
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "8113": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "8115": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "8116": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "8120": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "8122": {
      "op": "SHL"
    },
    "8123": {
      "offset": [
        1240,
        1308
      ],
      "op": "DUP2",
      "path": "0"
    },
    "8124": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "8125": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "8127": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "ADD",
      "path": "0"
    },
    "8128": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xB7A"
    },
    "8131": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "8132": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x33CE"
    },
    "8135": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMP",
      "path": "0"
    },
    "8136": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "8137": {
      "fn": "CryptidToken.setBaseExtension",
      "offset": [
        5931,
        5964
      ],
      "op": "DUP1",
      "path": "16",
      "statement": 78
    },
    "8138": {
      "fn": "CryptidToken.setBaseExtension",
      "offset": [
        5931,
        5964
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "8139": {
      "fn": "CryptidToken.setBaseExtension",
      "offset": [
        5931,
        5964
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xDB2"
    },
    "8142": {
      "fn": "CryptidToken.setBaseExtension",
      "offset": [
        5931,
        5964
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "8143": {
      "fn": "CryptidToken.setBaseExtension",
      "offset": [
        5931,
        5944
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x10"
    },
    "8145": {
      "fn": "CryptidToken.setBaseExtension",
      "offset": [
        5931,
        5944
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "8146": {
      "fn": "CryptidToken.setBaseExtension",
      "offset": [
        5931,
        5964
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "8148": {
      "fn": "CryptidToken.setBaseExtension",
      "offset": [
        5931,
        5964
      ],
      "op": "DUP5",
      "path": "16"
    },
    "8149": {
      "fn": "CryptidToken.setBaseExtension",
      "offset": [
        5931,
        5964
      ],
      "op": "ADD",
      "path": "16"
    },
    "8150": {
      "fn": "CryptidToken.setBaseExtension",
      "offset": [
        5931,
        5964
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "8151": {
      "fn": "CryptidToken.setBaseExtension",
      "offset": [
        5931,
        5964
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x2E7F"
    },
    "8154": {
      "fn": "CryptidToken.setBaseExtension",
      "jump": "i",
      "offset": [
        5931,
        5964
      ],
      "op": "JUMP",
      "path": "16"
    },
    "8155": {
      "fn": "CryptidToken.getTokensLeft",
      "offset": [
        8033,
        8145
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "8156": {
      "fn": "CryptidToken.getTokensLeft",
      "offset": [
        8081,
        8088
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "8158": {
      "fn": "CryptidToken.getTokensLeft",
      "offset": [
        8125,
        8138
      ],
      "op": "PUSH2",
      "path": "16",
      "statement": 79,
      "value": "0x1FE5"
    },
    "8161": {
      "fn": "CryptidToken.getTokensLeft",
      "offset": [
        8125,
        8136
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xDB6"
    },
    "8164": {
      "fn": "CryptidToken.getTokensLeft",
      "jump": "i",
      "offset": [
        8125,
        8138
      ],
      "op": "JUMP",
      "path": "16"
    },
    "8165": {
      "fn": "CryptidToken.getTokensLeft",
      "offset": [
        8125,
        8138
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "8166": {
      "fn": "CryptidToken.getTokensLeft",
      "offset": [
        8107,
        8122
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x16"
    },
    "8168": {
      "fn": "CryptidToken.getTokensLeft",
      "offset": [
        8107,
        8122
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "8169": {
      "fn": "CryptidToken.getTokensLeft",
      "offset": [
        8107,
        8138
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xDCD"
    },
    "8172": {
      "fn": "CryptidToken.getTokensLeft",
      "offset": [
        8107,
        8138
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "8173": {
      "fn": "CryptidToken.getTokensLeft",
      "offset": [
        8107,
        8138
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "8174": {
      "fn": "CryptidToken.getTokensLeft",
      "offset": [
        8107,
        8138
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x3419"
    },
    "8177": {
      "fn": "CryptidToken.getTokensLeft",
      "jump": "i",
      "offset": [
        8107,
        8138
      ],
      "op": "JUMP",
      "path": "16"
    },
    "8178": {
      "fn": "CryptidToken.freezeBaseURI",
      "offset": [
        5488,
        5705
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "8179": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xA"
    },
    "8181": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "8182": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8184": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8186": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8188": {
      "op": "SHL"
    },
    "8189": {
      "op": "SUB"
    },
    "8190": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x100"
    },
    "8193": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "8194": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "8195": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "DIV",
      "path": "0"
    },
    "8196": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "AND",
      "path": "0"
    },
    "8197": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "10"
    },
    "8198": {
      "offset": [
        1248,
        1271
      ],
      "op": "EQ",
      "path": "0"
    },
    "8199": {
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2022"
    },
    "8202": {
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "8203": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "8205": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "8206": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "8210": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "8212": {
      "op": "SHL"
    },
    "8213": {
      "offset": [
        1240,
        1308
      ],
      "op": "DUP2",
      "path": "0"
    },
    "8214": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "8215": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "8217": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "ADD",
      "path": "0"
    },
    "8218": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xB7A"
    },
    "8221": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "8222": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x33CE"
    },
    "8225": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMP",
      "path": "0"
    },
    "8226": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "8227": {
      "fn": "CryptidToken.freezeBaseURI",
      "offset": [
        5574,
        5575
      ],
      "op": "PUSH1",
      "path": "16",
      "statement": 80,
      "value": "0x0"
    },
    "8229": {
      "fn": "CryptidToken.freezeBaseURI",
      "offset": [
        5556,
        5563
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0xF"
    },
    "8231": {
      "fn": "CryptidToken.freezeBaseURI",
      "offset": [
        5550,
        5571
      ],
      "op": "DUP1",
      "path": "16"
    },
    "8232": {
      "fn": "CryptidToken.freezeBaseURI",
      "offset": [
        5550,
        5571
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "8233": {
      "fn": "CryptidToken.freezeBaseURI",
      "offset": [
        5550,
        5571
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x2031"
    },
    "8236": {
      "fn": "CryptidToken.freezeBaseURI",
      "offset": [
        5550,
        5571
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "8237": {
      "fn": "CryptidToken.freezeBaseURI",
      "offset": [
        5550,
        5571
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x3393"
    },
    "8240": {
      "fn": "CryptidToken.freezeBaseURI",
      "jump": "i",
      "offset": [
        5550,
        5571
      ],
      "op": "JUMP",
      "path": "16"
    },
    "8241": {
      "fn": "CryptidToken.freezeBaseURI",
      "offset": [
        5550,
        5571
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "8242": {
      "fn": "CryptidToken.freezeBaseURI",
      "offset": [
        5550,
        5571
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "8243": {
      "fn": "CryptidToken.freezeBaseURI",
      "offset": [
        5550,
        5571
      ],
      "op": "POP",
      "path": "16"
    },
    "8244": {
      "branch": 168,
      "fn": "CryptidToken.freezeBaseURI",
      "offset": [
        5550,
        5575
      ],
      "op": "GT",
      "path": "16"
    },
    "8245": {
      "fn": "CryptidToken.freezeBaseURI",
      "offset": [
        5542,
        5603
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x2080"
    },
    "8248": {
      "branch": 168,
      "fn": "CryptidToken.freezeBaseURI",
      "offset": [
        5542,
        5603
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "8249": {
      "fn": "CryptidToken.freezeBaseURI",
      "offset": [
        5542,
        5603
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "8251": {
      "fn": "CryptidToken.freezeBaseURI",
      "offset": [
        5542,
        5603
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "8252": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "8256": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "8258": {
      "op": "SHL"
    },
    "8259": {
      "fn": "CryptidToken.freezeBaseURI",
      "offset": [
        5542,
        5603
      ],
      "op": "DUP2",
      "path": "16"
    },
    "8260": {
      "fn": "CryptidToken.freezeBaseURI",
      "offset": [
        5542,
        5603
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "8261": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8263": {
      "fn": "CryptidToken.freezeBaseURI",
      "offset": [
        5542,
        5603
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "8265": {
      "fn": "CryptidToken.freezeBaseURI",
      "offset": [
        5542,
        5603
      ],
      "op": "DUP3",
      "path": "16"
    },
    "8266": {
      "fn": "CryptidToken.freezeBaseURI",
      "offset": [
        5542,
        5603
      ],
      "op": "ADD",
      "path": "16"
    },
    "8267": {
      "op": "MSTORE"
    },
    "8268": {
      "op": "PUSH1",
      "value": "0x17"
    },
    "8270": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "8272": {
      "op": "DUP3"
    },
    "8273": {
      "op": "ADD"
    },
    "8274": {
      "op": "MSTORE"
    },
    "8275": {
      "op": "PUSH32",
      "value": "0x626173655552492063616E6E6F7420626520656D707479000000000000000000"
    },
    "8308": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "8310": {
      "op": "DUP3"
    },
    "8311": {
      "op": "ADD"
    },
    "8312": {
      "op": "MSTORE"
    },
    "8313": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "8315": {
      "op": "ADD"
    },
    "8316": {
      "fn": "CryptidToken.freezeBaseURI",
      "offset": [
        5542,
        5603
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xB7A"
    },
    "8319": {
      "op": "JUMP"
    },
    "8320": {
      "fn": "CryptidToken.freezeBaseURI",
      "offset": [
        5542,
        5603
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "8321": {
      "fn": "CryptidToken.freezeBaseURI",
      "offset": [
        5622,
        5636
      ],
      "op": "PUSH1",
      "path": "16",
      "statement": 81,
      "value": "0x11"
    },
    "8323": {
      "fn": "CryptidToken.freezeBaseURI",
      "offset": [
        5622,
        5636
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "8324": {
      "fn": "CryptidToken.freezeBaseURI",
      "offset": [
        5622,
        5636
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x100"
    },
    "8327": {
      "fn": "CryptidToken.freezeBaseURI",
      "offset": [
        5622,
        5636
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "8328": {
      "fn": "CryptidToken.freezeBaseURI",
      "offset": [
        5622,
        5636
      ],
      "op": "DIV",
      "path": "16"
    },
    "8329": {
      "fn": "CryptidToken.freezeBaseURI",
      "offset": [
        5622,
        5636
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0xFF"
    },
    "8331": {
      "fn": "CryptidToken.freezeBaseURI",
      "offset": [
        5622,
        5636
      ],
      "op": "AND",
      "path": "16"
    },
    "8332": {
      "branch": 169,
      "fn": "CryptidToken.freezeBaseURI",
      "offset": [
        5621,
        5636
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "8333": {
      "fn": "CryptidToken.freezeBaseURI",
      "offset": [
        5613,
        5667
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x20D8"
    },
    "8336": {
      "branch": 169,
      "fn": "CryptidToken.freezeBaseURI",
      "offset": [
        5613,
        5667
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "8337": {
      "fn": "CryptidToken.freezeBaseURI",
      "offset": [
        5613,
        5667
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "8339": {
      "fn": "CryptidToken.freezeBaseURI",
      "offset": [
        5613,
        5667
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "8340": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "8344": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "8346": {
      "op": "SHL"
    },
    "8347": {
      "fn": "CryptidToken.freezeBaseURI",
      "offset": [
        5613,
        5667
      ],
      "op": "DUP2",
      "path": "16"
    },
    "8348": {
      "fn": "CryptidToken.freezeBaseURI",
      "offset": [
        5613,
        5667
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "8349": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8351": {
      "fn": "CryptidToken.freezeBaseURI",
      "offset": [
        5613,
        5667
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "8353": {
      "fn": "CryptidToken.freezeBaseURI",
      "offset": [
        5613,
        5667
      ],
      "op": "DUP3",
      "path": "16"
    },
    "8354": {
      "fn": "CryptidToken.freezeBaseURI",
      "offset": [
        5613,
        5667
      ],
      "op": "ADD",
      "path": "16"
    },
    "8355": {
      "op": "MSTORE"
    },
    "8356": {
      "op": "PUSH1",
      "value": "0x1A"
    },
    "8358": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "8360": {
      "op": "DUP3"
    },
    "8361": {
      "op": "ADD"
    },
    "8362": {
      "op": "MSTORE"
    },
    "8363": {
      "op": "PUSH32",
      "value": "0x4261736555524920697320616C72656164792066726F7A656E2E000000000000"
    },
    "8396": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "8398": {
      "op": "DUP3"
    },
    "8399": {
      "op": "ADD"
    },
    "8400": {
      "op": "MSTORE"
    },
    "8401": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "8403": {
      "op": "ADD"
    },
    "8404": {
      "fn": "CryptidToken.freezeBaseURI",
      "offset": [
        5613,
        5667
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xB7A"
    },
    "8407": {
      "op": "JUMP"
    },
    "8408": {
      "fn": "CryptidToken.freezeBaseURI",
      "offset": [
        5613,
        5667
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "8409": {
      "fn": "CryptidToken.freezeBaseURI",
      "offset": [
        5677,
        5691
      ],
      "op": "PUSH1",
      "path": "16",
      "statement": 82,
      "value": "0x11"
    },
    "8411": {
      "fn": "CryptidToken.freezeBaseURI",
      "offset": [
        5677,
        5698
      ],
      "op": "DUP1",
      "path": "16"
    },
    "8412": {
      "fn": "CryptidToken.freezeBaseURI",
      "offset": [
        5677,
        5698
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "8413": {
      "op": "PUSH2",
      "value": "0xFF00"
    },
    "8416": {
      "op": "NOT"
    },
    "8417": {
      "fn": "CryptidToken.freezeBaseURI",
      "offset": [
        5677,
        5698
      ],
      "op": "AND",
      "path": "16"
    },
    "8418": {
      "fn": "CryptidToken.freezeBaseURI",
      "offset": [
        5677,
        5698
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x100"
    },
    "8421": {
      "fn": "CryptidToken.freezeBaseURI",
      "offset": [
        5677,
        5698
      ],
      "op": "OR",
      "path": "16"
    },
    "8422": {
      "fn": "CryptidToken.freezeBaseURI",
      "offset": [
        5677,
        5698
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "8423": {
      "fn": "CryptidToken.freezeBaseURI",
      "offset": [
        5677,
        5698
      ],
      "op": "SSTORE",
      "path": "16"
    },
    "8424": {
      "fn": "CryptidToken.freezeBaseURI",
      "jump": "o",
      "offset": [
        5488,
        5705
      ],
      "op": "JUMP",
      "path": "16"
    },
    "8425": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "8426": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xA"
    },
    "8428": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "8429": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8431": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8433": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8435": {
      "op": "SHL"
    },
    "8436": {
      "op": "SUB"
    },
    "8437": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x100"
    },
    "8440": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "8441": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "8442": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "DIV",
      "path": "0"
    },
    "8443": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "AND",
      "path": "0"
    },
    "8444": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "10"
    },
    "8445": {
      "offset": [
        1248,
        1271
      ],
      "op": "EQ",
      "path": "0"
    },
    "8446": {
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2119"
    },
    "8449": {
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "8450": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "8452": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "8453": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "8457": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "8459": {
      "op": "SHL"
    },
    "8460": {
      "offset": [
        1240,
        1308
      ],
      "op": "DUP2",
      "path": "0"
    },
    "8461": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "8462": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "8464": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "ADD",
      "path": "0"
    },
    "8465": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xB7A"
    },
    "8468": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "8469": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x33CE"
    },
    "8472": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMP",
      "path": "0"
    },
    "8473": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "8474": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8476": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8478": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8480": {
      "op": "SHL"
    },
    "8481": {
      "op": "SUB"
    },
    "8482": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2006,
        2028
      ],
      "op": "DUP2",
      "path": "0",
      "statement": 83
    },
    "8483": {
      "branch": 191,
      "fn": "Ownable.transferOwnership",
      "offset": [
        2006,
        2028
      ],
      "op": "AND",
      "path": "0"
    },
    "8484": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x217E"
    },
    "8487": {
      "branch": 191,
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "8488": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "8490": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "8491": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "8495": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "8497": {
      "op": "SHL"
    },
    "8498": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "DUP2",
      "path": "0"
    },
    "8499": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "8500": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8502": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "8504": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "DUP3",
      "path": "0"
    },
    "8505": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "ADD",
      "path": "0"
    },
    "8506": {
      "op": "MSTORE"
    },
    "8507": {
      "op": "PUSH1",
      "value": "0x26"
    },
    "8509": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "8511": {
      "op": "DUP3"
    },
    "8512": {
      "op": "ADD"
    },
    "8513": {
      "op": "MSTORE"
    },
    "8514": {
      "op": "PUSH32",
      "value": "0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061"
    },
    "8547": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "8549": {
      "op": "DUP3"
    },
    "8550": {
      "op": "ADD"
    },
    "8551": {
      "op": "MSTORE"
    },
    "8552": {
      "op": "PUSH6",
      "value": "0x646472657373"
    },
    "8559": {
      "op": "PUSH1",
      "value": "0xD0"
    },
    "8561": {
      "op": "SHL"
    },
    "8562": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "8564": {
      "op": "DUP3"
    },
    "8565": {
      "op": "ADD"
    },
    "8566": {
      "op": "MSTORE"
    },
    "8567": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "8569": {
      "op": "ADD"
    },
    "8570": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xB7A"
    },
    "8573": {
      "op": "JUMP"
    },
    "8574": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "8575": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2081,
        2109
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 84,
      "value": "0x12BE"
    },
    "8578": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2100,
        2108
      ],
      "op": "DUP2",
      "path": "0"
    },
    "8579": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2081,
        2099
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x25E4"
    },
    "8582": {
      "fn": "Ownable.transferOwnership",
      "jump": "i",
      "offset": [
        2081,
        2109
      ],
      "op": "JUMP",
      "path": "0"
    },
    "8583": {
      "fn": "CryptidToken.setWithdrawlAddress",
      "offset": [
        6780,
        6908
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "8584": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xA"
    },
    "8586": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "8587": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8589": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8591": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8593": {
      "op": "SHL"
    },
    "8594": {
      "op": "SUB"
    },
    "8595": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x100"
    },
    "8598": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "8599": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "8600": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "DIV",
      "path": "0"
    },
    "8601": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "AND",
      "path": "0"
    },
    "8602": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "10"
    },
    "8603": {
      "offset": [
        1248,
        1271
      ],
      "op": "EQ",
      "path": "0"
    },
    "8604": {
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x21B7"
    },
    "8607": {
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "8608": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "8610": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "8611": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "8615": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "8617": {
      "op": "SHL"
    },
    "8618": {
      "offset": [
        1240,
        1308
      ],
      "op": "DUP2",
      "path": "0"
    },
    "8619": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "8620": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "8622": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "ADD",
      "path": "0"
    },
    "8623": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xB7A"
    },
    "8626": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "8627": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x33CE"
    },
    "8630": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMP",
      "path": "0"
    },
    "8631": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "8632": {
      "fn": "CryptidToken.setWithdrawlAddress",
      "offset": [
        6865,
        6881
      ],
      "op": "PUSH1",
      "path": "16",
      "statement": 85,
      "value": "0x11"
    },
    "8634": {
      "fn": "CryptidToken.setWithdrawlAddress",
      "offset": [
        6865,
        6901
      ],
      "op": "DUP1",
      "path": "16"
    },
    "8635": {
      "fn": "CryptidToken.setWithdrawlAddress",
      "offset": [
        6865,
        6901
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "8636": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8638": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8640": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8642": {
      "op": "SHL"
    },
    "8643": {
      "op": "SUB"
    },
    "8644": {
      "fn": "CryptidToken.setWithdrawlAddress",
      "offset": [
        6865,
        6901
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "8645": {
      "fn": "CryptidToken.setWithdrawlAddress",
      "offset": [
        6865,
        6901
      ],
      "op": "SWAP3",
      "path": "16"
    },
    "8646": {
      "fn": "CryptidToken.setWithdrawlAddress",
      "offset": [
        6865,
        6901
      ],
      "op": "AND",
      "path": "16"
    },
    "8647": {
      "fn": "CryptidToken.setWithdrawlAddress",
      "offset": [
        6865,
        6901
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0x1000000"
    },
    "8652": {
      "fn": "CryptidToken.setWithdrawlAddress",
      "offset": [
        6865,
        6901
      ],
      "op": "MUL",
      "path": "16"
    },
    "8653": {
      "op": "PUSH4",
      "value": "0x1000000"
    },
    "8658": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8660": {
      "op": "PUSH1",
      "value": "0xB8"
    },
    "8662": {
      "op": "SHL"
    },
    "8663": {
      "op": "SUB"
    },
    "8664": {
      "op": "NOT"
    },
    "8665": {
      "fn": "CryptidToken.setWithdrawlAddress",
      "offset": [
        6865,
        6901
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "8666": {
      "fn": "CryptidToken.setWithdrawlAddress",
      "offset": [
        6865,
        6901
      ],
      "op": "SWAP3",
      "path": "16"
    },
    "8667": {
      "fn": "CryptidToken.setWithdrawlAddress",
      "offset": [
        6865,
        6901
      ],
      "op": "AND",
      "path": "16"
    },
    "8668": {
      "fn": "CryptidToken.setWithdrawlAddress",
      "offset": [
        6865,
        6901
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "8669": {
      "fn": "CryptidToken.setWithdrawlAddress",
      "offset": [
        6865,
        6901
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "8670": {
      "fn": "CryptidToken.setWithdrawlAddress",
      "offset": [
        6865,
        6901
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "8671": {
      "fn": "CryptidToken.setWithdrawlAddress",
      "offset": [
        6865,
        6901
      ],
      "op": "OR",
      "path": "16"
    },
    "8672": {
      "fn": "CryptidToken.setWithdrawlAddress",
      "offset": [
        6865,
        6901
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "8673": {
      "fn": "CryptidToken.setWithdrawlAddress",
      "offset": [
        6865,
        6901
      ],
      "op": "SSTORE",
      "path": "16"
    },
    "8674": {
      "fn": "CryptidToken.setWithdrawlAddress",
      "jump": "o",
      "offset": [
        6780,
        6908
      ],
      "op": "JUMP",
      "path": "16"
    },
    "8675": {
      "fn": "Counters.increment",
      "offset": [
        945,
        1068
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "8676": {
      "fn": "Counters.increment",
      "offset": [
        1032,
        1051
      ],
      "op": "DUP1",
      "path": "11"
    },
    "8677": {
      "fn": "Counters.increment",
      "offset": [
        1032,
        1051
      ],
      "op": "SLOAD",
      "path": "11"
    },
    "8678": {
      "fn": "Counters.increment",
      "offset": [
        1050,
        1051
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x1"
    },
    "8680": {
      "fn": "Counters.increment",
      "offset": [
        1032,
        1051
      ],
      "op": "ADD",
      "path": "11"
    },
    "8681": {
      "fn": "Counters.increment",
      "offset": [
        1032,
        1051
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "8682": {
      "fn": "Counters.increment",
      "offset": [
        1032,
        1051
      ],
      "op": "SSTORE",
      "path": "11"
    },
    "8683": {
      "fn": "Counters.increment",
      "jump": "o",
      "offset": [
        945,
        1068
      ],
      "op": "JUMP",
      "path": "11"
    },
    "8684": {
      "fn": "ERC721Enumerable.supportsInterface",
      "offset": [
        990,
        1212
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "8685": {
      "fn": "ERC721Enumerable.supportsInterface",
      "offset": [
        1092,
        1096
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "8687": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8689": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8691": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "8693": {
      "op": "SHL"
    },
    "8694": {
      "op": "SUB"
    },
    "8695": {
      "op": "NOT"
    },
    "8696": {
      "fn": "ERC721Enumerable.supportsInterface",
      "offset": [
        1115,
        1165
      ],
      "op": "DUP3",
      "path": "6",
      "statement": 86
    },
    "8697": {
      "fn": "ERC721Enumerable.supportsInterface",
      "offset": [
        1115,
        1165
      ],
      "op": "AND",
      "path": "6"
    },
    "8698": {
      "op": "PUSH4",
      "value": "0x780E9D63"
    },
    "8703": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "8705": {
      "op": "SHL"
    },
    "8706": {
      "fn": "ERC721Enumerable.supportsInterface",
      "offset": [
        1115,
        1165
      ],
      "op": "EQ",
      "path": "6"
    },
    "8707": {
      "fn": "ERC721Enumerable.supportsInterface",
      "offset": [
        1115,
        1165
      ],
      "op": "DUP1",
      "path": "6"
    },
    "8708": {
      "fn": "ERC721Enumerable.supportsInterface",
      "offset": [
        1115,
        1205
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xA6D"
    },
    "8711": {
      "fn": "ERC721Enumerable.supportsInterface",
      "offset": [
        1115,
        1205
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "8712": {
      "fn": "ERC721Enumerable.supportsInterface",
      "offset": [
        1115,
        1205
      ],
      "op": "POP",
      "path": "6"
    },
    "8713": {
      "fn": "ERC721Enumerable.supportsInterface",
      "offset": [
        1169,
        1205
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xA6D"
    },
    "8716": {
      "fn": "ERC721Enumerable.supportsInterface",
      "offset": [
        1193,
        1204
      ],
      "op": "DUP3",
      "path": "6"
    },
    "8717": {
      "fn": "ERC721Enumerable.supportsInterface",
      "offset": [
        1169,
        1192
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x2896"
    },
    "8720": {
      "fn": "ERC721Enumerable.supportsInterface",
      "jump": "i",
      "offset": [
        1169,
        1205
      ],
      "op": "JUMP",
      "path": "6"
    },
    "8721": {
      "fn": "ERC721._approve",
      "offset": [
        10995,
        11166
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "8722": {
      "fn": "ERC721._approve",
      "offset": [
        11069,
        11093
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 87,
      "value": "0x0"
    },
    "8724": {
      "fn": "ERC721._approve",
      "offset": [
        11069,
        11093
      ],
      "op": "DUP2",
      "path": "3"
    },
    "8725": {
      "fn": "ERC721._approve",
      "offset": [
        11069,
        11093
      ],
      "op": "DUP2",
      "path": "3"
    },
    "8726": {
      "fn": "ERC721._approve",
      "offset": [
        11069,
        11093
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "8727": {
      "fn": "ERC721._approve",
      "offset": [
        11069,
        11084
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "8729": {
      "fn": "ERC721._approve",
      "offset": [
        11069,
        11093
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "8731": {
      "fn": "ERC721._approve",
      "offset": [
        11069,
        11093
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "8732": {
      "fn": "ERC721._approve",
      "offset": [
        11069,
        11093
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "8734": {
      "fn": "ERC721._approve",
      "offset": [
        11069,
        11093
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "8735": {
      "fn": "ERC721._approve",
      "offset": [
        11069,
        11093
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "8736": {
      "fn": "ERC721._approve",
      "offset": [
        11069,
        11098
      ],
      "op": "DUP1",
      "path": "3"
    },
    "8737": {
      "fn": "ERC721._approve",
      "offset": [
        11069,
        11098
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "8738": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8740": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8742": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8744": {
      "op": "SHL"
    },
    "8745": {
      "op": "SUB"
    },
    "8746": {
      "op": "NOT"
    },
    "8747": {
      "fn": "ERC721._approve",
      "offset": [
        11069,
        11098
      ],
      "op": "AND",
      "path": "3"
    },
    "8748": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8750": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8752": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8754": {
      "op": "SHL"
    },
    "8755": {
      "op": "SUB"
    },
    "8756": {
      "fn": "ERC721._approve",
      "offset": [
        11069,
        11098
      ],
      "op": "DUP5",
      "path": "3"
    },
    "8757": {
      "fn": "ERC721._approve",
      "offset": [
        11069,
        11098
      ],
      "op": "AND",
      "path": "3"
    },
    "8758": {
      "fn": "ERC721._approve",
      "offset": [
        11069,
        11098
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "8759": {
      "fn": "ERC721._approve",
      "offset": [
        11069,
        11098
      ],
      "op": "DUP2",
      "path": "3"
    },
    "8760": {
      "fn": "ERC721._approve",
      "offset": [
        11069,
        11098
      ],
      "op": "OR",
      "path": "3"
    },
    "8761": {
      "fn": "ERC721._approve",
      "offset": [
        11069,
        11098
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "8762": {
      "fn": "ERC721._approve",
      "offset": [
        11069,
        11098
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "8763": {
      "fn": "ERC721._approve",
      "offset": [
        11069,
        11098
      ],
      "op": "SSTORE",
      "path": "3"
    },
    "8764": {
      "fn": "ERC721._approve",
      "offset": [
        11069,
        11093
      ],
      "op": "DUP2",
      "path": "3"
    },
    "8765": {
      "fn": "ERC721._approve",
      "offset": [
        11069,
        11093
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "8766": {
      "fn": "ERC721._approve",
      "offset": [
        11122,
        11145
      ],
      "op": "PUSH2",
      "path": "3",
      "statement": 88,
      "value": "0x2246"
    },
    "8769": {
      "fn": "ERC721._approve",
      "offset": [
        11069,
        11093
      ],
      "op": "DUP3",
      "path": "3"
    },
    "8770": {
      "fn": "ERC721._approve",
      "offset": [
        11122,
        11136
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1521"
    },
    "8773": {
      "fn": "ERC721._approve",
      "jump": "i",
      "offset": [
        11122,
        11145
      ],
      "op": "JUMP",
      "path": "3"
    },
    "8774": {
      "fn": "ERC721._approve",
      "offset": [
        11122,
        11145
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "8775": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8777": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8779": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8781": {
      "op": "SHL"
    },
    "8782": {
      "op": "SUB"
    },
    "8783": {
      "fn": "ERC721._approve",
      "offset": [
        11113,
        11159
      ],
      "op": "AND",
      "path": "3"
    },
    "8784": {
      "fn": "ERC721._approve",
      "offset": [
        11113,
        11159
      ],
      "op": "PUSH32",
      "path": "3",
      "value": "0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
    },
    "8817": {
      "fn": "ERC721._approve",
      "offset": [
        11113,
        11159
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "8819": {
      "fn": "ERC721._approve",
      "offset": [
        11113,
        11159
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "8820": {
      "fn": "ERC721._approve",
      "offset": [
        11113,
        11159
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "8822": {
      "fn": "ERC721._approve",
      "offset": [
        11113,
        11159
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "8823": {
      "fn": "ERC721._approve",
      "offset": [
        11113,
        11159
      ],
      "op": "DUP1",
      "path": "3"
    },
    "8824": {
      "fn": "ERC721._approve",
      "offset": [
        11113,
        11159
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "8825": {
      "fn": "ERC721._approve",
      "offset": [
        11113,
        11159
      ],
      "op": "SUB",
      "path": "3"
    },
    "8826": {
      "fn": "ERC721._approve",
      "offset": [
        11113,
        11159
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "8827": {
      "fn": "ERC721._approve",
      "offset": [
        11113,
        11159
      ],
      "op": "LOG4",
      "path": "3"
    },
    "8828": {
      "fn": "ERC721._approve",
      "offset": [
        10995,
        11166
      ],
      "op": "POP",
      "path": "3"
    },
    "8829": {
      "fn": "ERC721._approve",
      "offset": [
        10995,
        11166
      ],
      "op": "POP",
      "path": "3"
    },
    "8830": {
      "fn": "ERC721._approve",
      "jump": "o",
      "offset": [
        10995,
        11166
      ],
      "op": "JUMP",
      "path": "3"
    },
    "8831": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7427,
        7771
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "8832": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7520,
        7524
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "8834": {
      "fn": "ERC721._exists",
      "offset": [
        7232,
        7248
      ],
      "op": "DUP2",
      "path": "3"
    },
    "8835": {
      "fn": "ERC721._exists",
      "offset": [
        7232,
        7248
      ],
      "op": "DUP2",
      "path": "3"
    },
    "8836": {
      "fn": "ERC721._exists",
      "offset": [
        7232,
        7248
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "8837": {
      "fn": "ERC721._exists",
      "offset": [
        7232,
        7239
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x2"
    },
    "8839": {
      "fn": "ERC721._exists",
      "offset": [
        7232,
        7248
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "8841": {
      "fn": "ERC721._exists",
      "offset": [
        7232,
        7248
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "8842": {
      "fn": "ERC721._exists",
      "offset": [
        7232,
        7248
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "8844": {
      "fn": "ERC721._exists",
      "offset": [
        7232,
        7248
      ],
      "op": "DUP2",
      "path": "3"
    },
    "8845": {
      "fn": "ERC721._exists",
      "offset": [
        7232,
        7248
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "8846": {
      "fn": "ERC721._exists",
      "offset": [
        7232,
        7248
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "8847": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8849": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8851": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8853": {
      "op": "SHL"
    },
    "8854": {
      "op": "SUB"
    },
    "8855": {
      "fn": "ERC721._exists",
      "offset": [
        7232,
        7248
      ],
      "op": "AND",
      "path": "3"
    },
    "8856": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7536,
        7609
      ],
      "op": "PUSH2",
      "path": "3",
      "statement": 89,
      "value": "0x22F8"
    },
    "8859": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7536,
        7609
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "8860": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7536,
        7609
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "8862": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7536,
        7609
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "8863": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "8867": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "8869": {
      "op": "SHL"
    },
    "8870": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7536,
        7609
      ],
      "op": "DUP2",
      "path": "3"
    },
    "8871": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7536,
        7609
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "8872": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8874": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7536,
        7609
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "8876": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7536,
        7609
      ],
      "op": "DUP3",
      "path": "3"
    },
    "8877": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7536,
        7609
      ],
      "op": "ADD",
      "path": "3"
    },
    "8878": {
      "op": "MSTORE"
    },
    "8879": {
      "op": "PUSH1",
      "value": "0x2C"
    },
    "8881": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "8883": {
      "op": "DUP3"
    },
    "8884": {
      "op": "ADD"
    },
    "8885": {
      "op": "MSTORE"
    },
    "8886": {
      "op": "PUSH32",
      "value": "0x4552433732313A206F70657261746F7220717565727920666F72206E6F6E6578"
    },
    "8919": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "8921": {
      "op": "DUP3"
    },
    "8922": {
      "op": "ADD"
    },
    "8923": {
      "op": "MSTORE"
    },
    "8924": {
      "op": "PUSH12",
      "value": "0x34B9BA32B73A103A37B5B2B7"
    },
    "8937": {
      "op": "PUSH1",
      "value": "0xA1"
    },
    "8939": {
      "op": "SHL"
    },
    "8940": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "8942": {
      "op": "DUP3"
    },
    "8943": {
      "op": "ADD"
    },
    "8944": {
      "op": "MSTORE"
    },
    "8945": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "8947": {
      "op": "ADD"
    },
    "8948": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7536,
        7609
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xB7A"
    },
    "8951": {
      "op": "JUMP"
    },
    "8952": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7536,
        7609
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "8953": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7619,
        7632
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "8955": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7635,
        7658
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2303"
    },
    "8958": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7650,
        7657
      ],
      "op": "DUP4",
      "path": "3"
    },
    "8959": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7635,
        7649
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1521"
    },
    "8962": {
      "fn": "ERC721._isApprovedOrOwner",
      "jump": "i",
      "offset": [
        7635,
        7658
      ],
      "op": "JUMP",
      "path": "3"
    },
    "8963": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7635,
        7658
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "8964": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7619,
        7658
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "8965": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7619,
        7658
      ],
      "op": "POP",
      "path": "3"
    },
    "8966": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7687,
        7692
      ],
      "op": "DUP1",
      "path": "3",
      "statement": 90
    },
    "8967": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8969": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8971": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8973": {
      "op": "SHL"
    },
    "8974": {
      "op": "SUB"
    },
    "8975": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7676,
        7692
      ],
      "op": "AND",
      "path": "3"
    },
    "8976": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7676,
        7683
      ],
      "op": "DUP5",
      "path": "3"
    },
    "8977": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8979": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8981": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8983": {
      "op": "SHL"
    },
    "8984": {
      "op": "SUB"
    },
    "8985": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7676,
        7692
      ],
      "op": "AND",
      "path": "3"
    },
    "8986": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7676,
        7692
      ],
      "op": "EQ",
      "path": "3"
    },
    "8987": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7676,
        7727
      ],
      "op": "DUP1",
      "path": "3"
    },
    "8988": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7676,
        7727
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x233E"
    },
    "8991": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7676,
        7727
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "8992": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7676,
        7727
      ],
      "op": "POP",
      "path": "3"
    },
    "8993": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7720,
        7727
      ],
      "op": "DUP4",
      "path": "3"
    },
    "8994": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8996": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8998": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "9000": {
      "op": "SHL"
    },
    "9001": {
      "op": "SUB"
    },
    "9002": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7696,
        7727
      ],
      "op": "AND",
      "path": "3"
    },
    "9003": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7696,
        7716
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2333"
    },
    "9006": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7708,
        7715
      ],
      "op": "DUP5",
      "path": "3"
    },
    "9007": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7696,
        7707
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xB05"
    },
    "9010": {
      "fn": "ERC721._isApprovedOrOwner",
      "jump": "i",
      "offset": [
        7696,
        7716
      ],
      "op": "JUMP",
      "path": "3"
    },
    "9011": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7696,
        7716
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "9012": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9014": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9016": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "9018": {
      "op": "SHL"
    },
    "9019": {
      "op": "SUB"
    },
    "9020": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7696,
        7727
      ],
      "op": "AND",
      "path": "3"
    },
    "9021": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7696,
        7727
      ],
      "op": "EQ",
      "path": "3"
    },
    "9022": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7676,
        7727
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "9023": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7676,
        7763
      ],
      "op": "DUP1",
      "path": "3"
    },
    "9024": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7676,
        7763
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x236E"
    },
    "9027": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7676,
        7763
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "9028": {
      "op": "POP"
    },
    "9029": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9031": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9033": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "9035": {
      "op": "SHL"
    },
    "9036": {
      "op": "SUB"
    },
    "9037": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4607,
        4632
      ],
      "op": "DUP1",
      "path": "3"
    },
    "9038": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4607,
        4632
      ],
      "op": "DUP3",
      "path": "3"
    },
    "9039": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4607,
        4632
      ],
      "op": "AND",
      "path": "3"
    },
    "9040": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4584,
        4588
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "9042": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4607,
        4632
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "9043": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4607,
        4632
      ],
      "op": "DUP2",
      "path": "3"
    },
    "9044": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4607,
        4632
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "9045": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4607,
        4625
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x5"
    },
    "9047": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4607,
        4632
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "9049": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4607,
        4632
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "9050": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4607,
        4632
      ],
      "op": "DUP2",
      "path": "3"
    },
    "9051": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4607,
        4632
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "9052": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4607,
        4632
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "9054": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4607,
        4632
      ],
      "op": "DUP1",
      "path": "3"
    },
    "9055": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4607,
        4632
      ],
      "op": "DUP4",
      "path": "3"
    },
    "9056": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4607,
        4632
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "9057": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4607,
        4642
      ],
      "op": "SWAP4",
      "path": "3"
    },
    "9058": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4607,
        4642
      ],
      "op": "DUP9",
      "path": "3"
    },
    "9059": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4607,
        4642
      ],
      "op": "AND",
      "path": "3"
    },
    "9060": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4607,
        4642
      ],
      "op": "DUP4",
      "path": "3"
    },
    "9061": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4607,
        4642
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "9062": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4607,
        4642
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "9063": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4607,
        4642
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "9064": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4607,
        4642
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "9065": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4607,
        4642
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "9066": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4607,
        4642
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "9067": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4607,
        4642
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0xFF"
    },
    "9069": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4607,
        4642
      ],
      "op": "AND",
      "path": "3"
    },
    "9070": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7731,
        7763
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "9071": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7668,
        7764
      ],
      "op": "SWAP5",
      "path": "3"
    },
    "9072": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7427,
        7771
      ],
      "op": "SWAP4",
      "path": "3"
    },
    "9073": {
      "op": "POP"
    },
    "9074": {
      "op": "POP"
    },
    "9075": {
      "op": "POP"
    },
    "9076": {
      "op": "POP"
    },
    "9077": {
      "fn": "ERC721._isApprovedOrOwner",
      "jump": "o",
      "offset": [
        7427,
        7771
      ],
      "op": "JUMP",
      "path": "3"
    },
    "9078": {
      "fn": "ERC721._transfer",
      "offset": [
        10324,
        10884
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "9079": {
      "fn": "ERC721._transfer",
      "offset": [
        10478,
        10482
      ],
      "op": "DUP3",
      "path": "3",
      "statement": 91
    },
    "9080": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9082": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9084": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "9086": {
      "op": "SHL"
    },
    "9087": {
      "op": "SUB"
    },
    "9088": {
      "fn": "ERC721._transfer",
      "offset": [
        10451,
        10482
      ],
      "op": "AND",
      "path": "3"
    },
    "9089": {
      "fn": "ERC721._transfer",
      "offset": [
        10451,
        10474
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2389"
    },
    "9092": {
      "fn": "ERC721._transfer",
      "offset": [
        10466,
        10473
      ],
      "op": "DUP3",
      "path": "3"
    },
    "9093": {
      "fn": "ERC721._transfer",
      "offset": [
        10451,
        10465
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1521"
    },
    "9096": {
      "fn": "ERC721._transfer",
      "jump": "i",
      "offset": [
        10451,
        10474
      ],
      "op": "JUMP",
      "path": "3"
    },
    "9097": {
      "fn": "ERC721._transfer",
      "offset": [
        10451,
        10474
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "9098": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9100": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9102": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "9104": {
      "op": "SHL"
    },
    "9105": {
      "op": "SUB"
    },
    "9106": {
      "fn": "ERC721._transfer",
      "offset": [
        10451,
        10482
      ],
      "op": "AND",
      "path": "3"
    },
    "9107": {
      "branch": 177,
      "fn": "ERC721._transfer",
      "offset": [
        10451,
        10482
      ],
      "op": "EQ",
      "path": "3"
    },
    "9108": {
      "fn": "ERC721._transfer",
      "offset": [
        10443,
        10528
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x23F1"
    },
    "9111": {
      "branch": 177,
      "fn": "ERC721._transfer",
      "offset": [
        10443,
        10528
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "9112": {
      "fn": "ERC721._transfer",
      "offset": [
        10443,
        10528
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "9114": {
      "fn": "ERC721._transfer",
      "offset": [
        10443,
        10528
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "9115": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "9119": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "9121": {
      "op": "SHL"
    },
    "9122": {
      "fn": "ERC721._transfer",
      "offset": [
        10443,
        10528
      ],
      "op": "DUP2",
      "path": "3"
    },
    "9123": {
      "fn": "ERC721._transfer",
      "offset": [
        10443,
        10528
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "9124": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9126": {
      "fn": "ERC721._transfer",
      "offset": [
        10443,
        10528
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "9128": {
      "fn": "ERC721._transfer",
      "offset": [
        10443,
        10528
      ],
      "op": "DUP3",
      "path": "3"
    },
    "9129": {
      "fn": "ERC721._transfer",
      "offset": [
        10443,
        10528
      ],
      "op": "ADD",
      "path": "3"
    },
    "9130": {
      "op": "MSTORE"
    },
    "9131": {
      "op": "PUSH1",
      "value": "0x29"
    },
    "9133": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "9135": {
      "op": "DUP3"
    },
    "9136": {
      "op": "ADD"
    },
    "9137": {
      "op": "MSTORE"
    },
    "9138": {
      "op": "PUSH32",
      "value": "0x4552433732313A207472616E73666572206F6620746F6B656E20746861742069"
    },
    "9171": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "9173": {
      "op": "DUP3"
    },
    "9174": {
      "op": "ADD"
    },
    "9175": {
      "op": "MSTORE"
    },
    "9176": {
      "op": "PUSH9",
      "value": "0x39903737BA1037BBB7"
    },
    "9186": {
      "op": "PUSH1",
      "value": "0xB9"
    },
    "9188": {
      "op": "SHL"
    },
    "9189": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "9191": {
      "op": "DUP3"
    },
    "9192": {
      "op": "ADD"
    },
    "9193": {
      "op": "MSTORE"
    },
    "9194": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "9196": {
      "op": "ADD"
    },
    "9197": {
      "fn": "ERC721._transfer",
      "offset": [
        10443,
        10528
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xB7A"
    },
    "9200": {
      "op": "JUMP"
    },
    "9201": {
      "fn": "ERC721._transfer",
      "offset": [
        10443,
        10528
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "9202": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9204": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9206": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "9208": {
      "op": "SHL"
    },
    "9209": {
      "op": "SUB"
    },
    "9210": {
      "fn": "ERC721._transfer",
      "offset": [
        10546,
        10562
      ],
      "op": "DUP3",
      "path": "3",
      "statement": 92
    },
    "9211": {
      "branch": 178,
      "fn": "ERC721._transfer",
      "offset": [
        10546,
        10562
      ],
      "op": "AND",
      "path": "3"
    },
    "9212": {
      "fn": "ERC721._transfer",
      "offset": [
        10538,
        10603
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2453"
    },
    "9215": {
      "branch": 178,
      "fn": "ERC721._transfer",
      "offset": [
        10538,
        10603
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "9216": {
      "fn": "ERC721._transfer",
      "offset": [
        10538,
        10603
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "9218": {
      "fn": "ERC721._transfer",
      "offset": [
        10538,
        10603
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "9219": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "9223": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "9225": {
      "op": "SHL"
    },
    "9226": {
      "fn": "ERC721._transfer",
      "offset": [
        10538,
        10603
      ],
      "op": "DUP2",
      "path": "3"
    },
    "9227": {
      "fn": "ERC721._transfer",
      "offset": [
        10538,
        10603
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "9228": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9230": {
      "fn": "ERC721._transfer",
      "offset": [
        10538,
        10603
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "9232": {
      "fn": "ERC721._transfer",
      "offset": [
        10538,
        10603
      ],
      "op": "DUP3",
      "path": "3"
    },
    "9233": {
      "fn": "ERC721._transfer",
      "offset": [
        10538,
        10603
      ],
      "op": "ADD",
      "path": "3"
    },
    "9234": {
      "op": "MSTORE"
    },
    "9235": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "9237": {
      "op": "DUP1"
    },
    "9238": {
      "op": "DUP3"
    },
    "9239": {
      "op": "ADD"
    },
    "9240": {
      "op": "MSTORE"
    },
    "9241": {
      "op": "PUSH32",
      "value": "0x4552433732313A207472616E7366657220746F20746865207A65726F20616464"
    },
    "9274": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "9276": {
      "op": "DUP3"
    },
    "9277": {
      "op": "ADD"
    },
    "9278": {
      "op": "MSTORE"
    },
    "9279": {
      "op": "PUSH4",
      "value": "0x72657373"
    },
    "9284": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "9286": {
      "op": "SHL"
    },
    "9287": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "9289": {
      "op": "DUP3"
    },
    "9290": {
      "op": "ADD"
    },
    "9291": {
      "op": "MSTORE"
    },
    "9292": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "9294": {
      "op": "ADD"
    },
    "9295": {
      "fn": "ERC721._transfer",
      "offset": [
        10538,
        10603
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xB7A"
    },
    "9298": {
      "op": "JUMP"
    },
    "9299": {
      "fn": "ERC721._transfer",
      "offset": [
        10538,
        10603
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "9300": {
      "fn": "ERC721._transfer",
      "offset": [
        10614,
        10653
      ],
      "op": "PUSH2",
      "path": "3",
      "statement": 93,
      "value": "0x245E"
    },
    "9303": {
      "fn": "ERC721._transfer",
      "offset": [
        10635,
        10639
      ],
      "op": "DUP4",
      "path": "3"
    },
    "9304": {
      "fn": "ERC721._transfer",
      "offset": [
        10641,
        10643
      ],
      "op": "DUP4",
      "path": "3"
    },
    "9305": {
      "fn": "ERC721._transfer",
      "offset": [
        10645,
        10652
      ],
      "op": "DUP4",
      "path": "3"
    },
    "9306": {
      "fn": "ERC721._transfer",
      "offset": [
        10614,
        10634
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x28E6"
    },
    "9309": {
      "fn": "ERC721._transfer",
      "jump": "i",
      "offset": [
        10614,
        10653
      ],
      "op": "JUMP",
      "path": "3"
    },
    "9310": {
      "fn": "ERC721._transfer",
      "offset": [
        10614,
        10653
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "9311": {
      "fn": "ERC721._transfer",
      "offset": [
        10715,
        10744
      ],
      "op": "PUSH2",
      "path": "3",
      "statement": 94,
      "value": "0x2469"
    },
    "9314": {
      "fn": "ERC721._transfer",
      "offset": [
        10732,
        10733
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "9316": {
      "fn": "ERC721._transfer",
      "offset": [
        10736,
        10743
      ],
      "op": "DUP3",
      "path": "3"
    },
    "9317": {
      "fn": "ERC721._transfer",
      "offset": [
        10715,
        10723
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2211"
    },
    "9320": {
      "fn": "ERC721._transfer",
      "jump": "i",
      "offset": [
        10715,
        10744
      ],
      "op": "JUMP",
      "path": "3"
    },
    "9321": {
      "fn": "ERC721._transfer",
      "offset": [
        10715,
        10744
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "9322": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9324": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9326": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "9328": {
      "op": "SHL"
    },
    "9329": {
      "op": "SUB"
    },
    "9330": {
      "fn": "ERC721._transfer",
      "offset": [
        10755,
        10770
      ],
      "op": "DUP4",
      "path": "3",
      "statement": 95
    },
    "9331": {
      "fn": "ERC721._transfer",
      "offset": [
        10755,
        10770
      ],
      "op": "AND",
      "path": "3"
    },
    "9332": {
      "fn": "ERC721._transfer",
      "offset": [
        10755,
        10770
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "9334": {
      "fn": "ERC721._transfer",
      "offset": [
        10755,
        10770
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "9335": {
      "fn": "ERC721._transfer",
      "offset": [
        10755,
        10770
      ],
      "op": "DUP2",
      "path": "3"
    },
    "9336": {
      "fn": "ERC721._transfer",
      "offset": [
        10755,
        10770
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "9337": {
      "fn": "ERC721._transfer",
      "offset": [
        10755,
        10764
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x3"
    },
    "9339": {
      "fn": "ERC721._transfer",
      "offset": [
        10755,
        10770
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "9341": {
      "fn": "ERC721._transfer",
      "offset": [
        10755,
        10770
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "9342": {
      "fn": "ERC721._transfer",
      "offset": [
        10755,
        10770
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "9344": {
      "fn": "ERC721._transfer",
      "offset": [
        10755,
        10770
      ],
      "op": "DUP2",
      "path": "3"
    },
    "9345": {
      "fn": "ERC721._transfer",
      "offset": [
        10755,
        10770
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "9346": {
      "fn": "ERC721._transfer",
      "offset": [
        10755,
        10775
      ],
      "op": "DUP1",
      "path": "3"
    },
    "9347": {
      "fn": "ERC721._transfer",
      "offset": [
        10755,
        10775
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "9348": {
      "fn": "ERC721._transfer",
      "offset": [
        10774,
        10775
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1"
    },
    "9350": {
      "fn": "ERC721._transfer",
      "offset": [
        10774,
        10775
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "9351": {
      "fn": "ERC721._transfer",
      "offset": [
        10755,
        10770
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "9352": {
      "fn": "ERC721._transfer",
      "offset": [
        10755,
        10775
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2492"
    },
    "9355": {
      "fn": "ERC721._transfer",
      "offset": [
        10755,
        10775
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "9356": {
      "fn": "ERC721._transfer",
      "offset": [
        10774,
        10775
      ],
      "op": "DUP5",
      "path": "3"
    },
    "9357": {
      "fn": "ERC721._transfer",
      "offset": [
        10774,
        10775
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "9358": {
      "fn": "ERC721._transfer",
      "offset": [
        10755,
        10775
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x3419"
    },
    "9361": {
      "fn": "ERC721._transfer",
      "jump": "i",
      "offset": [
        10755,
        10775
      ],
      "op": "JUMP",
      "path": "3"
    },
    "9362": {
      "fn": "ERC721._transfer",
      "offset": [
        10755,
        10775
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "9363": {
      "fn": "ERC721._transfer",
      "offset": [
        10755,
        10775
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "9364": {
      "fn": "ERC721._transfer",
      "offset": [
        10755,
        10775
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "9365": {
      "fn": "ERC721._transfer",
      "offset": [
        10755,
        10775
      ],
      "op": "SSTORE",
      "path": "3"
    },
    "9366": {
      "op": "POP"
    },
    "9367": {
      "op": "POP"
    },
    "9368": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9370": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9372": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "9374": {
      "op": "SHL"
    },
    "9375": {
      "op": "SUB"
    },
    "9376": {
      "fn": "ERC721._transfer",
      "offset": [
        10785,
        10798
      ],
      "op": "DUP3",
      "path": "3",
      "statement": 96
    },
    "9377": {
      "fn": "ERC721._transfer",
      "offset": [
        10785,
        10798
      ],
      "op": "AND",
      "path": "3"
    },
    "9378": {
      "fn": "ERC721._transfer",
      "offset": [
        10785,
        10798
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "9380": {
      "fn": "ERC721._transfer",
      "offset": [
        10785,
        10798
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "9381": {
      "fn": "ERC721._transfer",
      "offset": [
        10785,
        10798
      ],
      "op": "DUP2",
      "path": "3"
    },
    "9382": {
      "fn": "ERC721._transfer",
      "offset": [
        10785,
        10798
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "9383": {
      "fn": "ERC721._transfer",
      "offset": [
        10785,
        10794
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x3"
    },
    "9385": {
      "fn": "ERC721._transfer",
      "offset": [
        10785,
        10798
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "9387": {
      "fn": "ERC721._transfer",
      "offset": [
        10785,
        10798
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "9388": {
      "fn": "ERC721._transfer",
      "offset": [
        10785,
        10798
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "9390": {
      "fn": "ERC721._transfer",
      "offset": [
        10785,
        10798
      ],
      "op": "DUP2",
      "path": "3"
    },
    "9391": {
      "fn": "ERC721._transfer",
      "offset": [
        10785,
        10798
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "9392": {
      "fn": "ERC721._transfer",
      "offset": [
        10785,
        10803
      ],
      "op": "DUP1",
      "path": "3"
    },
    "9393": {
      "fn": "ERC721._transfer",
      "offset": [
        10785,
        10803
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "9394": {
      "fn": "ERC721._transfer",
      "offset": [
        10802,
        10803
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1"
    },
    "9396": {
      "fn": "ERC721._transfer",
      "offset": [
        10802,
        10803
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "9397": {
      "fn": "ERC721._transfer",
      "offset": [
        10785,
        10798
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "9398": {
      "fn": "ERC721._transfer",
      "offset": [
        10785,
        10803
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x24C0"
    },
    "9401": {
      "fn": "ERC721._transfer",
      "offset": [
        10785,
        10803
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "9402": {
      "fn": "ERC721._transfer",
      "offset": [
        10802,
        10803
      ],
      "op": "DUP5",
      "path": "3"
    },
    "9403": {
      "fn": "ERC721._transfer",
      "offset": [
        10802,
        10803
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "9404": {
      "fn": "ERC721._transfer",
      "offset": [
        10785,
        10803
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x34CA"
    },
    "9407": {
      "fn": "ERC721._transfer",
      "jump": "i",
      "offset": [
        10785,
        10803
      ],
      "op": "JUMP",
      "path": "3"
    },
    "9408": {
      "fn": "ERC721._transfer",
      "offset": [
        10785,
        10803
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "9409": {
      "fn": "ERC721._transfer",
      "offset": [
        10785,
        10803
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "9410": {
      "fn": "ERC721._transfer",
      "offset": [
        10785,
        10803
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "9411": {
      "fn": "ERC721._transfer",
      "offset": [
        10785,
        10803
      ],
      "op": "SSTORE",
      "path": "3"
    },
    "9412": {
      "op": "POP"
    },
    "9413": {
      "op": "POP"
    },
    "9414": {
      "fn": "ERC721._transfer",
      "offset": [
        10813,
        10829
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 97,
      "value": "0x0"
    },
    "9416": {
      "fn": "ERC721._transfer",
      "offset": [
        10813,
        10829
      ],
      "op": "DUP2",
      "path": "3"
    },
    "9417": {
      "fn": "ERC721._transfer",
      "offset": [
        10813,
        10829
      ],
      "op": "DUP2",
      "path": "3"
    },
    "9418": {
      "fn": "ERC721._transfer",
      "offset": [
        10813,
        10829
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "9419": {
      "fn": "ERC721._transfer",
      "offset": [
        10813,
        10820
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x2"
    },
    "9421": {
      "fn": "ERC721._transfer",
      "offset": [
        10813,
        10829
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "9423": {
      "fn": "ERC721._transfer",
      "offset": [
        10813,
        10829
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "9424": {
      "fn": "ERC721._transfer",
      "offset": [
        10813,
        10829
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "9426": {
      "fn": "ERC721._transfer",
      "offset": [
        10813,
        10829
      ],
      "op": "DUP1",
      "path": "3"
    },
    "9427": {
      "fn": "ERC721._transfer",
      "offset": [
        10813,
        10829
      ],
      "op": "DUP3",
      "path": "3"
    },
    "9428": {
      "fn": "ERC721._transfer",
      "offset": [
        10813,
        10829
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "9429": {
      "fn": "ERC721._transfer",
      "offset": [
        10813,
        10834
      ],
      "op": "DUP1",
      "path": "3"
    },
    "9430": {
      "fn": "ERC721._transfer",
      "offset": [
        10813,
        10834
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "9431": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9433": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9435": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "9437": {
      "op": "SHL"
    },
    "9438": {
      "op": "SUB"
    },
    "9439": {
      "op": "NOT"
    },
    "9440": {
      "fn": "ERC721._transfer",
      "offset": [
        10813,
        10834
      ],
      "op": "AND",
      "path": "3"
    },
    "9441": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9443": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9445": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "9447": {
      "op": "SHL"
    },
    "9448": {
      "op": "SUB"
    },
    "9449": {
      "fn": "ERC721._transfer",
      "offset": [
        10813,
        10834
      ],
      "op": "DUP7",
      "path": "3"
    },
    "9450": {
      "fn": "ERC721._transfer",
      "offset": [
        10813,
        10834
      ],
      "op": "DUP2",
      "path": "3"
    },
    "9451": {
      "fn": "ERC721._transfer",
      "offset": [
        10813,
        10834
      ],
      "op": "AND",
      "path": "3"
    },
    "9452": {
      "fn": "ERC721._transfer",
      "offset": [
        10813,
        10834
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "9453": {
      "fn": "ERC721._transfer",
      "offset": [
        10813,
        10834
      ],
      "op": "DUP3",
      "path": "3"
    },
    "9454": {
      "fn": "ERC721._transfer",
      "offset": [
        10813,
        10834
      ],
      "op": "OR",
      "path": "3"
    },
    "9455": {
      "fn": "ERC721._transfer",
      "offset": [
        10813,
        10834
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "9456": {
      "fn": "ERC721._transfer",
      "offset": [
        10813,
        10834
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "9457": {
      "fn": "ERC721._transfer",
      "offset": [
        10813,
        10834
      ],
      "op": "SSTORE",
      "path": "3"
    },
    "9458": {
      "fn": "ERC721._transfer",
      "offset": [
        10850,
        10877
      ],
      "op": "SWAP2",
      "path": "3",
      "statement": 98
    },
    "9459": {
      "fn": "ERC721._transfer",
      "offset": [
        10850,
        10877
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "9460": {
      "fn": "ERC721._transfer",
      "offset": [
        10813,
        10829
      ],
      "op": "DUP5",
      "path": "3"
    },
    "9461": {
      "fn": "ERC721._transfer",
      "offset": [
        10813,
        10829
      ],
      "op": "SWAP4",
      "path": "3"
    },
    "9462": {
      "fn": "ERC721._transfer",
      "offset": [
        10850,
        10877
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "9463": {
      "fn": "ERC721._transfer",
      "offset": [
        10850,
        10877
      ],
      "op": "DUP8",
      "path": "3"
    },
    "9464": {
      "fn": "ERC721._transfer",
      "offset": [
        10850,
        10877
      ],
      "op": "AND",
      "path": "3"
    },
    "9465": {
      "fn": "ERC721._transfer",
      "offset": [
        10850,
        10877
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "9466": {
      "fn": "ERC721._transfer",
      "offset": [
        10850,
        10877
      ],
      "op": "PUSH32",
      "path": "3",
      "value": "0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
    },
    "9499": {
      "fn": "ERC721._transfer",
      "offset": [
        10850,
        10877
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "9500": {
      "fn": "ERC721._transfer",
      "offset": [
        10850,
        10877
      ],
      "op": "LOG4",
      "path": "3"
    },
    "9501": {
      "fn": "ERC721._transfer",
      "offset": [
        10324,
        10884
      ],
      "op": "POP",
      "path": "3"
    },
    "9502": {
      "fn": "ERC721._transfer",
      "offset": [
        10324,
        10884
      ],
      "op": "POP",
      "path": "3"
    },
    "9503": {
      "fn": "ERC721._transfer",
      "offset": [
        10324,
        10884
      ],
      "op": "POP",
      "path": "3"
    },
    "9504": {
      "fn": "ERC721._transfer",
      "jump": "o",
      "offset": [
        10324,
        10884
      ],
      "op": "JUMP",
      "path": "3"
    },
    "9505": {
      "fn": "MerkleProof.verify",
      "offset": [
        847,
        1031
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "9506": {
      "fn": "MerkleProof.verify",
      "offset": [
        968,
        972
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "9508": {
      "fn": "MerkleProof.verify",
      "offset": [
        1020,
        1024
      ],
      "op": "DUP3",
      "path": "13",
      "statement": 99
    },
    "9509": {
      "fn": "MerkleProof.verify",
      "offset": [
        991,
        1016
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x252E"
    },
    "9512": {
      "fn": "MerkleProof.verify",
      "offset": [
        1004,
        1009
      ],
      "op": "DUP6",
      "path": "13"
    },
    "9513": {
      "fn": "MerkleProof.verify",
      "offset": [
        1011,
        1015
      ],
      "op": "DUP5",
      "path": "13"
    },
    "9514": {
      "fn": "MerkleProof.verify",
      "offset": [
        991,
        1003
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x2914"
    },
    "9517": {
      "fn": "MerkleProof.verify",
      "jump": "i",
      "offset": [
        991,
        1016
      ],
      "op": "JUMP",
      "path": "13"
    },
    "9518": {
      "fn": "MerkleProof.verify",
      "offset": [
        991,
        1016
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "9519": {
      "fn": "MerkleProof.verify",
      "offset": [
        991,
        1024
      ],
      "op": "EQ",
      "path": "13"
    },
    "9520": {
      "fn": "MerkleProof.verify",
      "offset": [
        991,
        1024
      ],
      "op": "SWAP5",
      "path": "13"
    },
    "9521": {
      "fn": "MerkleProof.verify",
      "offset": [
        847,
        1031
      ],
      "op": "SWAP4",
      "path": "13"
    },
    "9522": {
      "op": "POP"
    },
    "9523": {
      "op": "POP"
    },
    "9524": {
      "op": "POP"
    },
    "9525": {
      "op": "POP"
    },
    "9526": {
      "fn": "MerkleProof.verify",
      "jump": "o",
      "offset": [
        847,
        1031
      ],
      "op": "JUMP",
      "path": "13"
    },
    "9527": {
      "fn": "ERC721._safeMint",
      "offset": [
        8101,
        8209
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "9528": {
      "fn": "ERC721._safeMint",
      "offset": [
        8176,
        8202
      ],
      "op": "PUSH2",
      "path": "3",
      "statement": 100,
      "value": "0xDB2"
    },
    "9531": {
      "fn": "ERC721._safeMint",
      "offset": [
        8186,
        8188
      ],
      "op": "DUP3",
      "path": "3"
    },
    "9532": {
      "fn": "ERC721._safeMint",
      "offset": [
        8190,
        8197
      ],
      "op": "DUP3",
      "path": "3"
    },
    "9533": {
      "fn": "ERC721._safeMint",
      "offset": [
        8176,
        8202
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "9535": {
      "fn": "ERC721._safeMint",
      "offset": [
        8176,
        8202
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "9536": {
      "fn": "ERC721._safeMint",
      "offset": [
        8176,
        8202
      ],
      "op": "DUP1",
      "path": "3"
    },
    "9537": {
      "fn": "ERC721._safeMint",
      "offset": [
        8176,
        8202
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "9539": {
      "fn": "ERC721._safeMint",
      "offset": [
        8176,
        8202
      ],
      "op": "ADD",
      "path": "3"
    },
    "9540": {
      "fn": "ERC721._safeMint",
      "offset": [
        8176,
        8202
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "9542": {
      "fn": "ERC721._safeMint",
      "offset": [
        8176,
        8202
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "9543": {
      "fn": "ERC721._safeMint",
      "offset": [
        8176,
        8202
      ],
      "op": "DUP1",
      "path": "3"
    },
    "9544": {
      "fn": "ERC721._safeMint",
      "offset": [
        8176,
        8202
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "9546": {
      "fn": "ERC721._safeMint",
      "offset": [
        8176,
        8202
      ],
      "op": "DUP2",
      "path": "3"
    },
    "9547": {
      "fn": "ERC721._safeMint",
      "offset": [
        8176,
        8202
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "9548": {
      "fn": "ERC721._safeMint",
      "offset": [
        8176,
        8202
      ],
      "op": "POP",
      "path": "3"
    },
    "9549": {
      "fn": "ERC721._safeMint",
      "offset": [
        8176,
        8185
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x29B8"
    },
    "9552": {
      "fn": "ERC721._safeMint",
      "jump": "i",
      "offset": [
        8176,
        8202
      ],
      "op": "JUMP",
      "path": "3"
    },
    "9553": {
      "fn": "Pausable._unpause",
      "offset": [
        2110,
        2227
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "9554": {
      "fn": "Pausable.paused",
      "offset": [
        1168,
        1175
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xA"
    },
    "9556": {
      "fn": "Pausable.paused",
      "offset": [
        1168,
        1175
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "9557": {
      "fn": "Pausable.paused",
      "offset": [
        1168,
        1175
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xFF"
    },
    "9559": {
      "fn": "Pausable.paused",
      "offset": [
        1168,
        1175
      ],
      "op": "AND",
      "path": "1"
    },
    "9560": {
      "offset": [
        1669,
        1710
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x259A"
    },
    "9563": {
      "fn": "Pausable.paused",
      "offset": [
        1669,
        1710
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "9564": {
      "fn": "Pausable.paused",
      "offset": [
        1669,
        1710
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "9566": {
      "fn": "Pausable.paused",
      "offset": [
        1669,
        1710
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "9567": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "9571": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "9573": {
      "op": "SHL"
    },
    "9574": {
      "offset": [
        1669,
        1710
      ],
      "op": "DUP2",
      "path": "1"
    },
    "9575": {
      "fn": "Pausable.paused",
      "offset": [
        1669,
        1710
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "9576": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9578": {
      "offset": [
        1669,
        1710
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "9580": {
      "fn": "Pausable.paused",
      "offset": [
        1669,
        1710
      ],
      "op": "DUP3",
      "path": "1"
    },
    "9581": {
      "fn": "Pausable.paused",
      "offset": [
        1669,
        1710
      ],
      "op": "ADD",
      "path": "1"
    },
    "9582": {
      "op": "MSTORE"
    },
    "9583": {
      "op": "PUSH1",
      "value": "0x14"
    },
    "9585": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "9587": {
      "op": "DUP3"
    },
    "9588": {
      "op": "ADD"
    },
    "9589": {
      "op": "MSTORE"
    },
    "9590": {
      "op": "PUSH20",
      "value": "0x14185D5CD8589B194E881B9BDD081C185D5CD959"
    },
    "9611": {
      "op": "PUSH1",
      "value": "0x62"
    },
    "9613": {
      "op": "SHL"
    },
    "9614": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "9616": {
      "op": "DUP3"
    },
    "9617": {
      "op": "ADD"
    },
    "9618": {
      "op": "MSTORE"
    },
    "9619": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "9621": {
      "op": "ADD"
    },
    "9622": {
      "offset": [
        1669,
        1710
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xB7A"
    },
    "9625": {
      "op": "JUMP"
    },
    "9626": {
      "offset": [
        1669,
        1710
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "9627": {
      "fn": "Pausable._unpause",
      "offset": [
        2168,
        2175
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 101,
      "value": "0xA"
    },
    "9629": {
      "fn": "Pausable._unpause",
      "offset": [
        2168,
        2183
      ],
      "op": "DUP1",
      "path": "1"
    },
    "9630": {
      "fn": "Pausable._unpause",
      "offset": [
        2168,
        2183
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "9631": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "9633": {
      "op": "NOT"
    },
    "9634": {
      "fn": "Pausable._unpause",
      "offset": [
        2168,
        2183
      ],
      "op": "AND",
      "path": "1"
    },
    "9635": {
      "fn": "Pausable._unpause",
      "offset": [
        2168,
        2183
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "9636": {
      "fn": "Pausable._unpause",
      "offset": [
        2168,
        2183
      ],
      "op": "SSTORE",
      "path": "1"
    },
    "9637": {
      "fn": "Pausable._unpause",
      "offset": [
        2198,
        2220
      ],
      "op": "PUSH32",
      "path": "1",
      "statement": 102,
      "value": "0x5DB9EE0A495BF2E6FF9C91A7834C1BA4FDD244A5E8AA4E537BD38AEAE4B073AA"
    },
    "9670": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "10"
    },
    "9671": {
      "fn": "Pausable._unpause",
      "offset": [
        2207,
        2219
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "9672": {
      "fn": "Pausable._unpause",
      "offset": [
        2198,
        2220
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "9674": {
      "fn": "Pausable._unpause",
      "offset": [
        2198,
        2220
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "9675": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9677": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9679": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "9681": {
      "op": "SHL"
    },
    "9682": {
      "op": "SUB"
    },
    "9683": {
      "op": "SWAP1"
    },
    "9684": {
      "op": "SWAP2"
    },
    "9685": {
      "op": "AND"
    },
    "9686": {
      "op": "DUP2"
    },
    "9687": {
      "op": "MSTORE"
    },
    "9688": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9690": {
      "op": "ADD"
    },
    "9691": {
      "fn": "Pausable._unpause",
      "offset": [
        2198,
        2220
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "9693": {
      "fn": "Pausable._unpause",
      "offset": [
        2198,
        2220
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "9694": {
      "fn": "Pausable._unpause",
      "offset": [
        2198,
        2220
      ],
      "op": "DUP1",
      "path": "1"
    },
    "9695": {
      "fn": "Pausable._unpause",
      "offset": [
        2198,
        2220
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "9696": {
      "fn": "Pausable._unpause",
      "offset": [
        2198,
        2220
      ],
      "op": "SUB",
      "path": "1"
    },
    "9697": {
      "fn": "Pausable._unpause",
      "offset": [
        2198,
        2220
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "9698": {
      "fn": "Pausable._unpause",
      "offset": [
        2198,
        2220
      ],
      "op": "LOG1",
      "path": "1"
    },
    "9699": {
      "fn": "Pausable._unpause",
      "jump": "o",
      "offset": [
        2110,
        2227
      ],
      "op": "JUMP",
      "path": "1"
    },
    "9700": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2270,
        2457
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "9701": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2362,
        2368
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xA"
    },
    "9703": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2362,
        2368
      ],
      "op": "DUP1",
      "path": "0"
    },
    "9704": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2362,
        2368
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "9705": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9707": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9709": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "9711": {
      "op": "SHL"
    },
    "9712": {
      "op": "SUB"
    },
    "9713": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2378,
        2395
      ],
      "op": "DUP4",
      "path": "0",
      "statement": 103
    },
    "9714": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2378,
        2395
      ],
      "op": "DUP2",
      "path": "0"
    },
    "9715": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2378,
        2395
      ],
      "op": "AND",
      "path": "0"
    },
    "9716": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2362,
        2368
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x100"
    },
    "9719": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2378,
        2395
      ],
      "op": "DUP2",
      "path": "0"
    },
    "9720": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2378,
        2395
      ],
      "op": "DUP2",
      "path": "0"
    },
    "9721": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2378,
        2395
      ],
      "op": "MUL",
      "path": "0"
    },
    "9722": {
      "op": "PUSH2",
      "value": "0x100"
    },
    "9725": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9727": {
      "op": "PUSH1",
      "value": "0xA8"
    },
    "9729": {
      "op": "SHL"
    },
    "9730": {
      "op": "SUB"
    },
    "9731": {
      "op": "NOT"
    },
    "9732": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2378,
        2395
      ],
      "op": "DUP6",
      "path": "0"
    },
    "9733": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2378,
        2395
      ],
      "op": "AND",
      "path": "0"
    },
    "9734": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2378,
        2395
      ],
      "op": "OR",
      "path": "0"
    },
    "9735": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2378,
        2395
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "9736": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2378,
        2395
      ],
      "op": "SWAP5",
      "path": "0"
    },
    "9737": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2378,
        2395
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "9738": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2410,
        2450
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 104,
      "value": "0x40"
    },
    "9740": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2410,
        2450
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "9741": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2362,
        2368
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "9742": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2362,
        2368
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "9743": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2362,
        2368
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "9744": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2362,
        2368
      ],
      "op": "DIV",
      "path": "0"
    },
    "9745": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2362,
        2368
      ],
      "op": "AND",
      "path": "0"
    },
    "9746": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2362,
        2368
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "9747": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2362,
        2368
      ],
      "op": "DUP3",
      "path": "0"
    },
    "9748": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2362,
        2368
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "9749": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2410,
        2450
      ],
      "op": "PUSH32",
      "path": "0",
      "value": "0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
    },
    "9782": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2410,
        2450
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "9783": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2343,
        2359
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "9785": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2343,
        2359
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "9786": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2410,
        2450
      ],
      "op": "LOG3",
      "path": "0"
    },
    "9787": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2333,
        2457
      ],
      "op": "POP",
      "path": "0"
    },
    "9788": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2270,
        2457
      ],
      "op": "POP",
      "path": "0"
    },
    "9789": {
      "fn": "Ownable._transferOwnership",
      "jump": "o",
      "offset": [
        2270,
        2457
      ],
      "op": "JUMP",
      "path": "0"
    },
    "9790": {
      "fn": "Pausable._pause",
      "offset": [
        1863,
        1978
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "9791": {
      "fn": "Pausable.paused",
      "offset": [
        1168,
        1175
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xA"
    },
    "9793": {
      "fn": "Pausable.paused",
      "offset": [
        1168,
        1175
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "9794": {
      "fn": "Pausable.paused",
      "offset": [
        1168,
        1175
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xFF"
    },
    "9796": {
      "fn": "Pausable.paused",
      "offset": [
        1168,
        1175
      ],
      "op": "AND",
      "path": "1"
    },
    "9797": {
      "offset": [
        1411,
        1420
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "9798": {
      "offset": [
        1403,
        1441
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x2661"
    },
    "9801": {
      "offset": [
        1403,
        1441
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "9802": {
      "fn": "Pausable.paused",
      "offset": [
        1403,
        1441
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "9804": {
      "fn": "Pausable.paused",
      "offset": [
        1403,
        1441
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "9805": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "9809": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "9811": {
      "op": "SHL"
    },
    "9812": {
      "offset": [
        1403,
        1441
      ],
      "op": "DUP2",
      "path": "1"
    },
    "9813": {
      "fn": "Pausable.paused",
      "offset": [
        1403,
        1441
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "9814": {
      "fn": "Pausable.paused",
      "offset": [
        1403,
        1441
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "9816": {
      "fn": "Pausable.paused",
      "offset": [
        1403,
        1441
      ],
      "op": "ADD",
      "path": "1"
    },
    "9817": {
      "fn": "Pausable.paused",
      "offset": [
        1403,
        1441
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xB7A"
    },
    "9820": {
      "fn": "Pausable.paused",
      "offset": [
        1403,
        1441
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "9821": {
      "fn": "Pausable.paused",
      "offset": [
        1403,
        1441
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x34A0"
    },
    "9824": {
      "fn": "Pausable.paused",
      "jump": "i",
      "offset": [
        1403,
        1441
      ],
      "op": "JUMP",
      "path": "1"
    },
    "9825": {
      "fn": "Pausable.paused",
      "offset": [
        1403,
        1441
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "9826": {
      "fn": "Pausable._pause",
      "offset": [
        1922,
        1929
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 105,
      "value": "0xA"
    },
    "9828": {
      "fn": "Pausable._pause",
      "offset": [
        1922,
        1936
      ],
      "op": "DUP1",
      "path": "1"
    },
    "9829": {
      "fn": "Pausable._pause",
      "offset": [
        1922,
        1936
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "9830": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "9832": {
      "op": "NOT"
    },
    "9833": {
      "fn": "Pausable._pause",
      "offset": [
        1922,
        1936
      ],
      "op": "AND",
      "path": "1"
    },
    "9834": {
      "fn": "Pausable._pause",
      "offset": [
        1932,
        1936
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1"
    },
    "9836": {
      "fn": "Pausable._pause",
      "offset": [
        1922,
        1936
      ],
      "op": "OR",
      "path": "1"
    },
    "9837": {
      "fn": "Pausable._pause",
      "offset": [
        1922,
        1936
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "9838": {
      "fn": "Pausable._pause",
      "offset": [
        1922,
        1936
      ],
      "op": "SSTORE",
      "path": "1"
    },
    "9839": {
      "fn": "Pausable._pause",
      "offset": [
        1951,
        1971
      ],
      "op": "PUSH32",
      "path": "1",
      "statement": 106,
      "value": "0x62E78CEA01BEE320CD4E420270B5EA74000D11B0C9F74754EBDBFC544B05A258"
    },
    "9872": {
      "fn": "Pausable._pause",
      "offset": [
        1958,
        1970
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x25C7"
    },
    "9875": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "10"
    },
    "9876": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "9877": {
      "fn": "Context._msgSender",
      "offset": [
        640,
        736
      ],
      "op": "JUMP",
      "path": "10"
    },
    "9878": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11301,
        11608
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "9879": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11451,
        11459
      ],
      "op": "DUP2",
      "path": "3",
      "statement": 107
    },
    "9880": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9882": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9884": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "9886": {
      "op": "SHL"
    },
    "9887": {
      "op": "SUB"
    },
    "9888": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11442,
        11459
      ],
      "op": "AND",
      "path": "3"
    },
    "9889": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11442,
        11447
      ],
      "op": "DUP4",
      "path": "3"
    },
    "9890": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9892": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9894": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "9896": {
      "op": "SHL"
    },
    "9897": {
      "op": "SUB"
    },
    "9898": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11442,
        11459
      ],
      "op": "AND",
      "path": "3"
    },
    "9899": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11442,
        11459
      ],
      "op": "EQ",
      "path": "3"
    },
    "9900": {
      "branch": 179,
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11442,
        11459
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "9901": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11434,
        11489
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x26F8"
    },
    "9904": {
      "branch": 179,
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11434,
        11489
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "9905": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11434,
        11489
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "9907": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11434,
        11489
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "9908": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "9912": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "9914": {
      "op": "SHL"
    },
    "9915": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11434,
        11489
      ],
      "op": "DUP2",
      "path": "3"
    },
    "9916": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11434,
        11489
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "9917": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9919": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11434,
        11489
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "9921": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11434,
        11489
      ],
      "op": "DUP3",
      "path": "3"
    },
    "9922": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11434,
        11489
      ],
      "op": "ADD",
      "path": "3"
    },
    "9923": {
      "op": "MSTORE"
    },
    "9924": {
      "op": "PUSH1",
      "value": "0x19"
    },
    "9926": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "9928": {
      "op": "DUP3"
    },
    "9929": {
      "op": "ADD"
    },
    "9930": {
      "op": "MSTORE"
    },
    "9931": {
      "op": "PUSH32",
      "value": "0x4552433732313A20617070726F766520746F2063616C6C657200000000000000"
    },
    "9964": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "9966": {
      "op": "DUP3"
    },
    "9967": {
      "op": "ADD"
    },
    "9968": {
      "op": "MSTORE"
    },
    "9969": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "9971": {
      "op": "ADD"
    },
    "9972": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11434,
        11489
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xB7A"
    },
    "9975": {
      "op": "JUMP"
    },
    "9976": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11434,
        11489
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "9977": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9979": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9981": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "9983": {
      "op": "SHL"
    },
    "9984": {
      "op": "SUB"
    },
    "9985": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11499,
        11524
      ],
      "op": "DUP4",
      "path": "3",
      "statement": 108
    },
    "9986": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11499,
        11524
      ],
      "op": "DUP2",
      "path": "3"
    },
    "9987": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11499,
        11524
      ],
      "op": "AND",
      "path": "3"
    },
    "9988": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11499,
        11524
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "9990": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11499,
        11524
      ],
      "op": "DUP2",
      "path": "3"
    },
    "9991": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11499,
        11524
      ],
      "op": "DUP2",
      "path": "3"
    },
    "9992": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11499,
        11524
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "9993": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11499,
        11517
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x5"
    },
    "9995": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11499,
        11524
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "9997": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11499,
        11524
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "9998": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11499,
        11524
      ],
      "op": "DUP2",
      "path": "3"
    },
    "9999": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11499,
        11524
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "10000": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11499,
        11524
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "10002": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11499,
        11524
      ],
      "op": "DUP1",
      "path": "3"
    },
    "10003": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11499,
        11524
      ],
      "op": "DUP4",
      "path": "3"
    },
    "10004": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11499,
        11524
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "10005": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11499,
        11534
      ],
      "op": "SWAP5",
      "path": "3"
    },
    "10006": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11499,
        11534
      ],
      "op": "DUP8",
      "path": "3"
    },
    "10007": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11499,
        11534
      ],
      "op": "AND",
      "path": "3"
    },
    "10008": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11499,
        11534
      ],
      "op": "DUP1",
      "path": "3"
    },
    "10009": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11499,
        11534
      ],
      "op": "DUP5",
      "path": "3"
    },
    "10010": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11499,
        11534
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "10011": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11499,
        11534
      ],
      "op": "SWAP5",
      "path": "3"
    },
    "10012": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11499,
        11534
      ],
      "op": "DUP3",
      "path": "3"
    },
    "10013": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11499,
        11534
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "10014": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11499,
        11534
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "10015": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11499,
        11534
      ],
      "op": "DUP3",
      "path": "3"
    },
    "10016": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11499,
        11534
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "10017": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11499,
        11534
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "10018": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11499,
        11545
      ],
      "op": "DUP1",
      "path": "3"
    },
    "10019": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11499,
        11545
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "10020": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "10022": {
      "op": "NOT"
    },
    "10023": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11499,
        11545
      ],
      "op": "AND",
      "path": "3"
    },
    "10024": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11499,
        11545
      ],
      "op": "DUP7",
      "path": "3"
    },
    "10025": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11499,
        11545
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "10026": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11499,
        11545
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "10027": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11499,
        11545
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "10028": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11499,
        11545
      ],
      "op": "DUP2",
      "path": "3"
    },
    "10029": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11499,
        11545
      ],
      "op": "OR",
      "path": "3"
    },
    "10030": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11499,
        11545
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "10031": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11499,
        11545
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "10032": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11499,
        11545
      ],
      "op": "SSTORE",
      "path": "3"
    },
    "10033": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11560,
        11601
      ],
      "op": "SWAP2",
      "path": "3",
      "statement": 109
    },
    "10034": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11560,
        11601
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "10035": {
      "op": "SWAP2"
    },
    "10036": {
      "op": "DUP3"
    },
    "10037": {
      "op": "MSTORE"
    },
    "10038": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11560,
        11601
      ],
      "op": "PUSH32",
      "path": "3",
      "value": "0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31"
    },
    "10071": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11560,
        11601
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "10072": {
      "op": "ADD"
    },
    "10073": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11560,
        11601
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "10075": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11560,
        11601
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "10076": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11560,
        11601
      ],
      "op": "DUP1",
      "path": "3"
    },
    "10077": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11560,
        11601
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "10078": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11560,
        11601
      ],
      "op": "SUB",
      "path": "3"
    },
    "10079": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11560,
        11601
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "10080": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11560,
        11601
      ],
      "op": "LOG3",
      "path": "3"
    },
    "10081": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11301,
        11608
      ],
      "op": "POP",
      "path": "3"
    },
    "10082": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11301,
        11608
      ],
      "op": "POP",
      "path": "3"
    },
    "10083": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11301,
        11608
      ],
      "op": "POP",
      "path": "3"
    },
    "10084": {
      "fn": "ERC721._setApprovalForAll",
      "jump": "o",
      "offset": [
        11301,
        11608
      ],
      "op": "JUMP",
      "path": "3"
    },
    "10085": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6534,
        6841
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "10086": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6685,
        6713
      ],
      "op": "PUSH2",
      "path": "3",
      "statement": 110,
      "value": "0x2770"
    },
    "10089": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6695,
        6699
      ],
      "op": "DUP5",
      "path": "3"
    },
    "10090": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6701,
        6703
      ],
      "op": "DUP5",
      "path": "3"
    },
    "10091": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6705,
        6712
      ],
      "op": "DUP5",
      "path": "3"
    },
    "10092": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6685,
        6694
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2376"
    },
    "10095": {
      "fn": "ERC721._safeTransfer",
      "jump": "i",
      "offset": [
        6685,
        6713
      ],
      "op": "JUMP",
      "path": "3"
    },
    "10096": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6685,
        6713
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "10097": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6731,
        6779
      ],
      "op": "PUSH2",
      "path": "3",
      "statement": 111,
      "value": "0x277C"
    },
    "10100": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6754,
        6758
      ],
      "op": "DUP5",
      "path": "3"
    },
    "10101": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6760,
        6762
      ],
      "op": "DUP5",
      "path": "3"
    },
    "10102": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6764,
        6771
      ],
      "op": "DUP5",
      "path": "3"
    },
    "10103": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6773,
        6778
      ],
      "op": "DUP5",
      "path": "3"
    },
    "10104": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6731,
        6753
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x29EB"
    },
    "10107": {
      "fn": "ERC721._safeTransfer",
      "jump": "i",
      "offset": [
        6731,
        6779
      ],
      "op": "JUMP",
      "path": "3"
    },
    "10108": {
      "branch": 180,
      "fn": "ERC721._safeTransfer",
      "offset": [
        6731,
        6779
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "10109": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6723,
        6834
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1D8C"
    },
    "10112": {
      "branch": 180,
      "fn": "ERC721._safeTransfer",
      "offset": [
        6723,
        6834
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "10113": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6723,
        6834
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "10115": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6723,
        6834
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "10116": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "10120": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "10122": {
      "op": "SHL"
    },
    "10123": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6723,
        6834
      ],
      "op": "DUP2",
      "path": "3"
    },
    "10124": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6723,
        6834
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "10125": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6723,
        6834
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "10127": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6723,
        6834
      ],
      "op": "ADD",
      "path": "3"
    },
    "10128": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6723,
        6834
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xB7A"
    },
    "10131": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6723,
        6834
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "10132": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6723,
        6834
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x35E0"
    },
    "10135": {
      "fn": "ERC721._safeTransfer",
      "jump": "i",
      "offset": [
        6723,
        6834
      ],
      "op": "JUMP",
      "path": "3"
    },
    "10136": {
      "fn": "Strings.toString",
      "offset": [
        328,
        1031
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "10137": {
      "fn": "Strings.toString",
      "offset": [
        384,
        397
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x60"
    },
    "10139": {
      "branch": 193,
      "fn": "Strings.toString",
      "offset": [
        601,
        611
      ],
      "op": "DUP2",
      "path": "12"
    },
    "10140": {
      "fn": "Strings.toString",
      "offset": [
        597,
        648
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x27BC"
    },
    "10143": {
      "branch": 193,
      "fn": "Strings.toString",
      "offset": [
        597,
        648
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "10144": {
      "op": "POP"
    },
    "10145": {
      "op": "POP"
    },
    "10146": {
      "fn": "Strings.toString",
      "offset": [
        627,
        637
      ],
      "op": "PUSH1",
      "path": "12",
      "statement": 112,
      "value": "0x40"
    },
    "10148": {
      "fn": "Strings.toString",
      "offset": [
        627,
        637
      ],
      "op": "DUP1",
      "path": "12"
    },
    "10149": {
      "fn": "Strings.toString",
      "offset": [
        627,
        637
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "10150": {
      "fn": "Strings.toString",
      "offset": [
        627,
        637
      ],
      "op": "DUP1",
      "path": "12"
    },
    "10151": {
      "fn": "Strings.toString",
      "offset": [
        627,
        637
      ],
      "op": "DUP3",
      "path": "12"
    },
    "10152": {
      "fn": "Strings.toString",
      "offset": [
        627,
        637
      ],
      "op": "ADD",
      "path": "12"
    },
    "10153": {
      "fn": "Strings.toString",
      "offset": [
        627,
        637
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "10154": {
      "fn": "Strings.toString",
      "offset": [
        627,
        637
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "10155": {
      "fn": "Strings.toString",
      "offset": [
        627,
        637
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "10156": {
      "fn": "Strings.toString",
      "offset": [
        627,
        637
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x1"
    },
    "10158": {
      "fn": "Strings.toString",
      "offset": [
        627,
        637
      ],
      "op": "DUP2",
      "path": "12"
    },
    "10159": {
      "fn": "Strings.toString",
      "offset": [
        627,
        637
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "10160": {
      "op": "PUSH1",
      "value": "0x3"
    },
    "10162": {
      "op": "PUSH1",
      "value": "0xFC"
    },
    "10164": {
      "op": "SHL"
    },
    "10165": {
      "fn": "Strings.toString",
      "offset": [
        627,
        637
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "10167": {
      "fn": "Strings.toString",
      "offset": [
        627,
        637
      ],
      "op": "DUP3",
      "path": "12"
    },
    "10168": {
      "fn": "Strings.toString",
      "offset": [
        627,
        637
      ],
      "op": "ADD",
      "path": "12"
    },
    "10169": {
      "fn": "Strings.toString",
      "offset": [
        627,
        637
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "10170": {
      "fn": "Strings.toString",
      "offset": [
        627,
        637
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "10171": {
      "fn": "Strings.toString",
      "jump": "o",
      "offset": [
        328,
        1031
      ],
      "op": "JUMP",
      "path": "12"
    },
    "10172": {
      "fn": "Strings.toString",
      "offset": [
        597,
        648
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "10173": {
      "fn": "Strings.toString",
      "offset": [
        672,
        677
      ],
      "op": "DUP2",
      "path": "12"
    },
    "10174": {
      "fn": "Strings.toString",
      "offset": [
        657,
        669
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "10176": {
      "fn": "Strings.toString",
      "offset": [
        711,
        786
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "10177": {
      "fn": "Strings.toString",
      "offset": [
        718,
        727
      ],
      "op": "DUP2",
      "path": "12"
    },
    "10178": {
      "fn": "Strings.toString",
      "offset": [
        718,
        727
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "10179": {
      "fn": "Strings.toString",
      "offset": [
        711,
        786
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x27E6"
    },
    "10182": {
      "fn": "Strings.toString",
      "offset": [
        711,
        786
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "10183": {
      "fn": "Strings.toString",
      "offset": [
        743,
        751
      ],
      "op": "DUP1",
      "path": "12",
      "statement": 113
    },
    "10184": {
      "fn": "Strings.toString",
      "offset": [
        743,
        751
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x27D0"
    },
    "10187": {
      "fn": "Strings.toString",
      "offset": [
        743,
        751
      ],
      "op": "DUP2",
      "path": "12"
    },
    "10188": {
      "fn": "Strings.toString",
      "offset": [
        743,
        751
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x34F8"
    },
    "10191": {
      "fn": "Strings.toString",
      "jump": "i",
      "offset": [
        743,
        751
      ],
      "op": "JUMP",
      "path": "12"
    },
    "10192": {
      "fn": "Strings.toString",
      "offset": [
        743,
        751
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "10193": {
      "fn": "Strings.toString",
      "offset": [
        743,
        751
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "10194": {
      "op": "POP"
    },
    "10195": {
      "fn": "Strings.toString",
      "offset": [
        765,
        775
      ],
      "op": "PUSH2",
      "path": "12",
      "statement": 114,
      "value": "0x27DF"
    },
    "10198": {
      "fn": "Strings.toString",
      "offset": [
        765,
        775
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "10199": {
      "op": "POP"
    },
    "10200": {
      "fn": "Strings.toString",
      "offset": [
        773,
        775
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0xA"
    },
    "10202": {
      "fn": "Strings.toString",
      "offset": [
        765,
        775
      ],
      "op": "DUP4",
      "path": "12"
    },
    "10203": {
      "fn": "Strings.toString",
      "offset": [
        765,
        775
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x3648"
    },
    "10206": {
      "fn": "Strings.toString",
      "jump": "i",
      "offset": [
        765,
        775
      ],
      "op": "JUMP",
      "path": "12"
    },
    "10207": {
      "fn": "Strings.toString",
      "offset": [
        765,
        775
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "10208": {
      "fn": "Strings.toString",
      "offset": [
        765,
        775
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "10209": {
      "fn": "Strings.toString",
      "offset": [
        765,
        775
      ],
      "op": "POP",
      "path": "12"
    },
    "10210": {
      "fn": "Strings.toString",
      "offset": [
        711,
        786
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x27C0"
    },
    "10213": {
      "fn": "Strings.toString",
      "offset": [
        711,
        786
      ],
      "op": "JUMP",
      "path": "12"
    },
    "10214": {
      "fn": "Strings.toString",
      "offset": [
        711,
        786
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "10215": {
      "fn": "Strings.toString",
      "offset": [
        795,
        814
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "10217": {
      "fn": "Strings.toString",
      "offset": [
        827,
        833
      ],
      "op": "DUP2",
      "path": "12"
    },
    "10218": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "PUSH8",
      "path": "12",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "10227": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "DUP2",
      "path": "12"
    },
    "10228": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "GT",
      "path": "12"
    },
    "10229": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "10230": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x2801"
    },
    "10233": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "10234": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x2801"
    },
    "10237": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x301C"
    },
    "10240": {
      "fn": "Strings.toString",
      "jump": "i",
      "offset": [
        817,
        834
      ],
      "op": "JUMP",
      "path": "12"
    },
    "10241": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "10242": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "10244": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "10245": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "10246": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "DUP1",
      "path": "12"
    },
    "10247": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "DUP3",
      "path": "12"
    },
    "10248": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "10249": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "DUP1",
      "path": "12"
    },
    "10250": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x1F"
    },
    "10252": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "ADD",
      "path": "12"
    },
    "10253": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x1F"
    },
    "10255": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "NOT",
      "path": "12"
    },
    "10256": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "AND",
      "path": "12"
    },
    "10257": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "10259": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "ADD",
      "path": "12"
    },
    "10260": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "DUP3",
      "path": "12"
    },
    "10261": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "ADD",
      "path": "12"
    },
    "10262": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "10264": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "10265": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "DUP1",
      "path": "12"
    },
    "10266": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "10267": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x282B"
    },
    "10270": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "10271": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "10273": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "DUP3",
      "path": "12"
    },
    "10274": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "ADD",
      "path": "12"
    },
    "10275": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "DUP2",
      "path": "12"
    },
    "10276": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "DUP1",
      "path": "12"
    },
    "10277": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "CALLDATASIZE",
      "path": "12"
    },
    "10278": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "DUP4",
      "path": "12"
    },
    "10279": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "CALLDATACOPY",
      "path": "12"
    },
    "10280": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "ADD",
      "path": "12"
    },
    "10281": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "10282": {
      "op": "POP"
    },
    "10283": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "10284": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "POP",
      "path": "12"
    },
    "10285": {
      "fn": "Strings.toString",
      "offset": [
        795,
        834
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "10286": {
      "fn": "Strings.toString",
      "offset": [
        795,
        834
      ],
      "op": "POP",
      "path": "12"
    },
    "10287": {
      "fn": "Strings.toString",
      "offset": [
        844,
        994
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "10288": {
      "fn": "Strings.toString",
      "offset": [
        851,
        861
      ],
      "op": "DUP5",
      "path": "12"
    },
    "10289": {
      "fn": "Strings.toString",
      "offset": [
        851,
        861
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "10290": {
      "fn": "Strings.toString",
      "offset": [
        844,
        994
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x236E"
    },
    "10293": {
      "fn": "Strings.toString",
      "offset": [
        844,
        994
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "10294": {
      "fn": "Strings.toString",
      "offset": [
        877,
        888
      ],
      "op": "PUSH2",
      "path": "12",
      "statement": 115,
      "value": "0x2840"
    },
    "10297": {
      "fn": "Strings.toString",
      "offset": [
        887,
        888
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x1"
    },
    "10299": {
      "fn": "Strings.toString",
      "offset": [
        877,
        888
      ],
      "op": "DUP4",
      "path": "12"
    },
    "10300": {
      "fn": "Strings.toString",
      "offset": [
        877,
        888
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x3419"
    },
    "10303": {
      "fn": "Strings.toString",
      "jump": "i",
      "offset": [
        877,
        888
      ],
      "op": "JUMP",
      "path": "12"
    },
    "10304": {
      "fn": "Strings.toString",
      "offset": [
        877,
        888
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "10305": {
      "fn": "Strings.toString",
      "offset": [
        877,
        888
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "10306": {
      "op": "POP"
    },
    "10307": {
      "fn": "Strings.toString",
      "offset": [
        945,
        955
      ],
      "op": "PUSH2",
      "path": "12",
      "statement": 116,
      "value": "0x284D"
    },
    "10310": {
      "fn": "Strings.toString",
      "offset": [
        953,
        955
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0xA"
    },
    "10312": {
      "fn": "Strings.toString",
      "offset": [
        945,
        950
      ],
      "op": "DUP7",
      "path": "12"
    },
    "10313": {
      "fn": "Strings.toString",
      "offset": [
        945,
        955
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x365C"
    },
    "10316": {
      "fn": "Strings.toString",
      "jump": "i",
      "offset": [
        945,
        955
      ],
      "op": "JUMP",
      "path": "12"
    },
    "10317": {
      "fn": "Strings.toString",
      "offset": [
        945,
        955
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "10318": {
      "fn": "Strings.toString",
      "offset": [
        932,
        956
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x2858"
    },
    "10321": {
      "fn": "Strings.toString",
      "offset": [
        932,
        956
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "10322": {
      "fn": "Strings.toString",
      "offset": [
        932,
        934
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x30"
    },
    "10324": {
      "fn": "Strings.toString",
      "offset": [
        932,
        956
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x34CA"
    },
    "10327": {
      "fn": "Strings.toString",
      "jump": "i",
      "offset": [
        932,
        956
      ],
      "op": "JUMP",
      "path": "12"
    },
    "10328": {
      "fn": "Strings.toString",
      "offset": [
        932,
        956
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "10329": {
      "fn": "Strings.toString",
      "offset": [
        919,
        958
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0xF8"
    },
    "10331": {
      "fn": "Strings.toString",
      "offset": [
        919,
        958
      ],
      "op": "SHL",
      "path": "12"
    },
    "10332": {
      "fn": "Strings.toString",
      "offset": [
        902,
        908
      ],
      "op": "DUP2",
      "path": "12"
    },
    "10333": {
      "fn": "Strings.toString",
      "offset": [
        909,
        915
      ],
      "op": "DUP4",
      "path": "12"
    },
    "10334": {
      "fn": "Strings.toString",
      "offset": [
        902,
        916
      ],
      "op": "DUP2",
      "path": "12"
    },
    "10335": {
      "fn": "Strings.toString",
      "offset": [
        902,
        916
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "10336": {
      "fn": "Strings.toString",
      "offset": [
        902,
        916
      ],
      "op": "DUP2",
      "path": "12"
    },
    "10337": {
      "fn": "Strings.toString",
      "offset": [
        902,
        916
      ],
      "op": "LT",
      "path": "12"
    },
    "10338": {
      "fn": "Strings.toString",
      "offset": [
        902,
        916
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x286D"
    },
    "10341": {
      "fn": "Strings.toString",
      "offset": [
        902,
        916
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "10342": {
      "fn": "Strings.toString",
      "offset": [
        902,
        916
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x286D"
    },
    "10345": {
      "fn": "Strings.toString",
      "offset": [
        902,
        916
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x34E2"
    },
    "10348": {
      "fn": "Strings.toString",
      "jump": "i",
      "offset": [
        902,
        916
      ],
      "op": "JUMP",
      "path": "12"
    },
    "10349": {
      "fn": "Strings.toString",
      "offset": [
        902,
        916
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "10350": {
      "fn": "Strings.toString",
      "offset": [
        902,
        916
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "10352": {
      "fn": "Strings.toString",
      "offset": [
        902,
        916
      ],
      "op": "ADD",
      "path": "12"
    },
    "10353": {
      "fn": "Strings.toString",
      "offset": [
        902,
        916
      ],
      "op": "ADD",
      "path": "12"
    },
    "10354": {
      "fn": "Strings.toString",
      "offset": [
        902,
        958
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "10355": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10357": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10359": {
      "op": "PUSH1",
      "value": "0xF8"
    },
    "10361": {
      "op": "SHL"
    },
    "10362": {
      "op": "SUB"
    },
    "10363": {
      "fn": "Strings.toString",
      "offset": [
        902,
        958
      ],
      "op": "NOT",
      "path": "12"
    },
    "10364": {
      "fn": "Strings.toString",
      "offset": [
        902,
        958
      ],
      "op": "AND",
      "path": "12"
    },
    "10365": {
      "fn": "Strings.toString",
      "offset": [
        902,
        958
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "10366": {
      "fn": "Strings.toString",
      "offset": [
        902,
        958
      ],
      "op": "DUP2",
      "path": "12"
    },
    "10367": {
      "fn": "Strings.toString",
      "offset": [
        902,
        958
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "10369": {
      "fn": "Strings.toString",
      "offset": [
        902,
        958
      ],
      "op": "BYTE",
      "path": "12"
    },
    "10370": {
      "fn": "Strings.toString",
      "offset": [
        902,
        958
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "10371": {
      "fn": "Strings.toString",
      "offset": [
        902,
        958
      ],
      "op": "MSTORE8",
      "path": "12"
    },
    "10372": {
      "op": "POP"
    },
    "10373": {
      "fn": "Strings.toString",
      "offset": [
        972,
        983
      ],
      "op": "PUSH2",
      "path": "12",
      "statement": 117,
      "value": "0x288F"
    },
    "10376": {
      "fn": "Strings.toString",
      "offset": [
        981,
        983
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0xA"
    },
    "10378": {
      "fn": "Strings.toString",
      "offset": [
        972,
        983
      ],
      "op": "DUP7",
      "path": "12"
    },
    "10379": {
      "fn": "Strings.toString",
      "offset": [
        972,
        983
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x3648"
    },
    "10382": {
      "fn": "Strings.toString",
      "jump": "i",
      "offset": [
        972,
        983
      ],
      "op": "JUMP",
      "path": "12"
    },
    "10383": {
      "fn": "Strings.toString",
      "offset": [
        972,
        983
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "10384": {
      "fn": "Strings.toString",
      "offset": [
        972,
        983
      ],
      "op": "SWAP5",
      "path": "12"
    },
    "10385": {
      "fn": "Strings.toString",
      "offset": [
        972,
        983
      ],
      "op": "POP",
      "path": "12"
    },
    "10386": {
      "fn": "Strings.toString",
      "offset": [
        844,
        994
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x282F"
    },
    "10389": {
      "fn": "Strings.toString",
      "offset": [
        844,
        994
      ],
      "op": "JUMP",
      "path": "12"
    },
    "10390": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1555,
        1855
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "10391": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1657,
        1661
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "10393": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10395": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10397": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "10399": {
      "op": "SHL"
    },
    "10400": {
      "op": "SUB"
    },
    "10401": {
      "op": "NOT"
    },
    "10402": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1692,
        1732
      ],
      "op": "DUP3",
      "path": "3",
      "statement": 118
    },
    "10403": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1692,
        1732
      ],
      "op": "AND",
      "path": "3"
    },
    "10404": {
      "op": "PUSH4",
      "value": "0x80AC58CD"
    },
    "10409": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "10411": {
      "op": "SHL"
    },
    "10412": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1692,
        1732
      ],
      "op": "EQ",
      "path": "3"
    },
    "10413": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1692,
        1732
      ],
      "op": "DUP1",
      "path": "3"
    },
    "10414": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1692,
        1796
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x28C7"
    },
    "10417": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1692,
        1796
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "10418": {
      "op": "POP"
    },
    "10419": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10421": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10423": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "10425": {
      "op": "SHL"
    },
    "10426": {
      "op": "SUB"
    },
    "10427": {
      "op": "NOT"
    },
    "10428": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1748,
        1796
      ],
      "op": "DUP3",
      "path": "3"
    },
    "10429": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1748,
        1796
      ],
      "op": "AND",
      "path": "3"
    },
    "10430": {
      "op": "PUSH4",
      "value": "0x5B5E139F"
    },
    "10435": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "10437": {
      "op": "SHL"
    },
    "10438": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1748,
        1796
      ],
      "op": "EQ",
      "path": "3"
    },
    "10439": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1692,
        1796
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "10440": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1692,
        1848
      ],
      "op": "DUP1",
      "path": "3"
    },
    "10441": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1692,
        1848
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xA6D"
    },
    "10444": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1692,
        1848
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "10445": {
      "op": "POP"
    },
    "10446": {
      "op": "PUSH4",
      "value": "0x1FFC9A7"
    },
    "10451": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "10453": {
      "op": "SHL"
    },
    "10454": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10456": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10458": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "10460": {
      "op": "SHL"
    },
    "10461": {
      "op": "SUB"
    },
    "10462": {
      "op": "NOT"
    },
    "10463": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        937,
        977
      ],
      "op": "DUP4",
      "path": "14",
      "statement": 119
    },
    "10464": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        937,
        977
      ],
      "op": "AND",
      "path": "14"
    },
    "10465": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        937,
        977
      ],
      "op": "EQ",
      "path": "14"
    },
    "10466": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1812,
        1848
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xA6D"
    },
    "10469": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        829,
        984
      ],
      "op": "JUMP",
      "path": "14"
    },
    "10470": {
      "fn": "CryptidToken._beforeTokenTransfer",
      "offset": [
        8518,
        8711
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "10471": {
      "fn": "Pausable.paused",
      "offset": [
        1168,
        1175
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xA"
    },
    "10473": {
      "fn": "Pausable.paused",
      "offset": [
        1168,
        1175
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "10474": {
      "fn": "Pausable.paused",
      "offset": [
        1168,
        1175
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xFF"
    },
    "10476": {
      "fn": "Pausable.paused",
      "offset": [
        1168,
        1175
      ],
      "op": "AND",
      "path": "1"
    },
    "10477": {
      "offset": [
        1411,
        1420
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "10478": {
      "offset": [
        1403,
        1441
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x2909"
    },
    "10481": {
      "offset": [
        1403,
        1441
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "10482": {
      "fn": "Pausable.paused",
      "offset": [
        1403,
        1441
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "10484": {
      "fn": "Pausable.paused",
      "offset": [
        1403,
        1441
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "10485": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "10489": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "10491": {
      "op": "SHL"
    },
    "10492": {
      "offset": [
        1403,
        1441
      ],
      "op": "DUP2",
      "path": "1"
    },
    "10493": {
      "fn": "Pausable.paused",
      "offset": [
        1403,
        1441
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "10494": {
      "fn": "Pausable.paused",
      "offset": [
        1403,
        1441
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "10496": {
      "fn": "Pausable.paused",
      "offset": [
        1403,
        1441
      ],
      "op": "ADD",
      "path": "1"
    },
    "10497": {
      "fn": "Pausable.paused",
      "offset": [
        1403,
        1441
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xB7A"
    },
    "10500": {
      "fn": "Pausable.paused",
      "offset": [
        1403,
        1441
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "10501": {
      "fn": "Pausable.paused",
      "offset": [
        1403,
        1441
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x34A0"
    },
    "10504": {
      "fn": "Pausable.paused",
      "jump": "i",
      "offset": [
        1403,
        1441
      ],
      "op": "JUMP",
      "path": "1"
    },
    "10505": {
      "fn": "Pausable.paused",
      "offset": [
        1403,
        1441
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "10506": {
      "fn": "CryptidToken._beforeTokenTransfer",
      "offset": [
        8659,
        8704
      ],
      "op": "PUSH2",
      "path": "16",
      "statement": 120,
      "value": "0xCB0"
    },
    "10509": {
      "fn": "CryptidToken._beforeTokenTransfer",
      "offset": [
        8686,
        8690
      ],
      "op": "DUP4",
      "path": "16"
    },
    "10510": {
      "fn": "CryptidToken._beforeTokenTransfer",
      "offset": [
        8692,
        8694
      ],
      "op": "DUP4",
      "path": "16"
    },
    "10511": {
      "fn": "CryptidToken._beforeTokenTransfer",
      "offset": [
        8696,
        8703
      ],
      "op": "DUP4",
      "path": "16"
    },
    "10512": {
      "fn": "CryptidToken._beforeTokenTransfer",
      "offset": [
        8659,
        8685
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x2AE9"
    },
    "10515": {
      "fn": "CryptidToken._beforeTokenTransfer",
      "jump": "i",
      "offset": [
        8659,
        8704
      ],
      "op": "JUMP",
      "path": "16"
    },
    "10516": {
      "fn": "MerkleProof.processProof",
      "offset": [
        1383,
        2071
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "10517": {
      "fn": "MerkleProof.processProof",
      "offset": [
        1466,
        1473
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "10519": {
      "fn": "MerkleProof.processProof",
      "offset": [
        1508,
        1512
      ],
      "op": "DUP2",
      "path": "13"
    },
    "10520": {
      "fn": "MerkleProof.processProof",
      "offset": [
        1466,
        1473
      ],
      "op": "DUP2",
      "path": "13"
    },
    "10521": {
      "fn": "MerkleProof.processProof",
      "offset": [
        1522,
        2036
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "10522": {
      "fn": "MerkleProof.processProof",
      "offset": [
        1546,
        1551
      ],
      "op": "DUP5",
      "path": "13"
    },
    "10523": {
      "fn": "MerkleProof.processProof",
      "offset": [
        1546,
        1558
      ],
      "op": "MLOAD",
      "path": "13"
    },
    "10524": {
      "fn": "MerkleProof.processProof",
      "offset": [
        1542,
        1543
      ],
      "op": "DUP2",
      "path": "13"
    },
    "10525": {
      "fn": "MerkleProof.processProof",
      "offset": [
        1542,
        1558
      ],
      "op": "LT",
      "path": "13"
    },
    "10526": {
      "fn": "MerkleProof.processProof",
      "offset": [
        1522,
        2036
      ],
      "op": "ISZERO",
      "path": "13"
    },
    "10527": {
      "fn": "MerkleProof.processProof",
      "offset": [
        1522,
        2036
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x13B0"
    },
    "10530": {
      "fn": "MerkleProof.processProof",
      "offset": [
        1522,
        2036
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "10531": {
      "fn": "MerkleProof.processProof",
      "offset": [
        1579,
        1599
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "10533": {
      "fn": "MerkleProof.processProof",
      "offset": [
        1602,
        1607
      ],
      "op": "DUP6",
      "path": "13"
    },
    "10534": {
      "fn": "MerkleProof.processProof",
      "offset": [
        1608,
        1609
      ],
      "op": "DUP3",
      "path": "13"
    },
    "10535": {
      "fn": "MerkleProof.processProof",
      "offset": [
        1602,
        1610
      ],
      "op": "DUP2",
      "path": "13"
    },
    "10536": {
      "fn": "MerkleProof.processProof",
      "offset": [
        1602,
        1610
      ],
      "op": "MLOAD",
      "path": "13"
    },
    "10537": {
      "fn": "MerkleProof.processProof",
      "offset": [
        1602,
        1610
      ],
      "op": "DUP2",
      "path": "13"
    },
    "10538": {
      "fn": "MerkleProof.processProof",
      "offset": [
        1602,
        1610
      ],
      "op": "LT",
      "path": "13"
    },
    "10539": {
      "fn": "MerkleProof.processProof",
      "offset": [
        1602,
        1610
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x2936"
    },
    "10542": {
      "fn": "MerkleProof.processProof",
      "offset": [
        1602,
        1610
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "10543": {
      "fn": "MerkleProof.processProof",
      "offset": [
        1602,
        1610
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x2936"
    },
    "10546": {
      "fn": "MerkleProof.processProof",
      "offset": [
        1602,
        1610
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x34E2"
    },
    "10549": {
      "fn": "MerkleProof.processProof",
      "jump": "i",
      "offset": [
        1602,
        1610
      ],
      "op": "JUMP",
      "path": "13"
    },
    "10550": {
      "fn": "MerkleProof.processProof",
      "offset": [
        1602,
        1610
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "10551": {
      "fn": "MerkleProof.processProof",
      "offset": [
        1602,
        1610
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x20"
    },
    "10553": {
      "fn": "MerkleProof.processProof",
      "offset": [
        1602,
        1610
      ],
      "op": "MUL",
      "path": "13"
    },
    "10554": {
      "fn": "MerkleProof.processProof",
      "offset": [
        1602,
        1610
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x20"
    },
    "10556": {
      "fn": "MerkleProof.processProof",
      "offset": [
        1602,
        1610
      ],
      "op": "ADD",
      "path": "13"
    },
    "10557": {
      "fn": "MerkleProof.processProof",
      "offset": [
        1602,
        1610
      ],
      "op": "ADD",
      "path": "13"
    },
    "10558": {
      "fn": "MerkleProof.processProof",
      "offset": [
        1602,
        1610
      ],
      "op": "MLOAD",
      "path": "13"
    },
    "10559": {
      "fn": "MerkleProof.processProof",
      "offset": [
        1579,
        1610
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "10560": {
      "fn": "MerkleProof.processProof",
      "offset": [
        1579,
        1610
      ],
      "op": "POP",
      "path": "13"
    },
    "10561": {
      "fn": "MerkleProof.processProof",
      "offset": [
        1644,
        1656
      ],
      "op": "DUP1",
      "path": "13"
    },
    "10562": {
      "fn": "MerkleProof.processProof",
      "offset": [
        1628,
        1640
      ],
      "op": "DUP4",
      "path": "13"
    },
    "10563": {
      "branch": 190,
      "fn": "MerkleProof.processProof",
      "offset": [
        1628,
        1656
      ],
      "op": "GT",
      "path": "13"
    },
    "10564": {
      "fn": "MerkleProof.processProof",
      "offset": [
        1624,
        2026
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x2978"
    },
    "10567": {
      "branch": 190,
      "fn": "MerkleProof.processProof",
      "offset": [
        1624,
        2026
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "10568": {
      "fn": "MerkleProof.processProof",
      "offset": [
        1779,
        1823
      ],
      "op": "PUSH1",
      "path": "13",
      "statement": 121,
      "value": "0x40"
    },
    "10570": {
      "fn": "MerkleProof.processProof",
      "offset": [
        1779,
        1823
      ],
      "op": "DUP1",
      "path": "13"
    },
    "10571": {
      "fn": "MerkleProof.processProof",
      "offset": [
        1779,
        1823
      ],
      "op": "MLOAD",
      "path": "13"
    },
    "10572": {
      "fn": "MerkleProof.processProof",
      "offset": [
        1779,
        1823
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x20"
    },
    "10574": {
      "fn": "MerkleProof.processProof",
      "offset": [
        1779,
        1823
      ],
      "op": "DUP2",
      "path": "13"
    },
    "10575": {
      "fn": "MerkleProof.processProof",
      "offset": [
        1779,
        1823
      ],
      "op": "ADD",
      "path": "13"
    },
    "10576": {
      "op": "DUP6"
    },
    "10577": {
      "op": "SWAP1"
    },
    "10578": {
      "op": "MSTORE"
    },
    "10579": {
      "op": "SWAP1"
    },
    "10580": {
      "op": "DUP2"
    },
    "10581": {
      "op": "ADD"
    },
    "10582": {
      "op": "DUP3"
    },
    "10583": {
      "op": "SWAP1"
    },
    "10584": {
      "op": "MSTORE"
    },
    "10585": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "10587": {
      "op": "ADD"
    },
    "10588": {
      "fn": "MerkleProof.processProof",
      "offset": [
        1779,
        1823
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "10590": {
      "fn": "MerkleProof.processProof",
      "offset": [
        1779,
        1823
      ],
      "op": "MLOAD",
      "path": "13"
    },
    "10591": {
      "fn": "MerkleProof.processProof",
      "offset": [
        1779,
        1823
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x20"
    },
    "10593": {
      "fn": "MerkleProof.processProof",
      "offset": [
        1779,
        1823
      ],
      "op": "DUP2",
      "path": "13"
    },
    "10594": {
      "fn": "MerkleProof.processProof",
      "offset": [
        1779,
        1823
      ],
      "op": "DUP4",
      "path": "13"
    },
    "10595": {
      "fn": "MerkleProof.processProof",
      "offset": [
        1779,
        1823
      ],
      "op": "SUB",
      "path": "13"
    },
    "10596": {
      "fn": "MerkleProof.processProof",
      "offset": [
        1779,
        1823
      ],
      "op": "SUB",
      "path": "13"
    },
    "10597": {
      "fn": "MerkleProof.processProof",
      "offset": [
        1779,
        1823
      ],
      "op": "DUP2",
      "path": "13"
    },
    "10598": {
      "fn": "MerkleProof.processProof",
      "offset": [
        1779,
        1823
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "10599": {
      "fn": "MerkleProof.processProof",
      "offset": [
        1779,
        1823
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "10600": {
      "fn": "MerkleProof.processProof",
      "offset": [
        1779,
        1823
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "10602": {
      "fn": "MerkleProof.processProof",
      "offset": [
        1779,
        1823
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "10603": {
      "fn": "MerkleProof.processProof",
      "offset": [
        1769,
        1824
      ],
      "op": "DUP1",
      "path": "13"
    },
    "10604": {
      "fn": "MerkleProof.processProof",
      "offset": [
        1769,
        1824
      ],
      "op": "MLOAD",
      "path": "13"
    },
    "10605": {
      "fn": "MerkleProof.processProof",
      "offset": [
        1769,
        1824
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "10606": {
      "fn": "MerkleProof.processProof",
      "offset": [
        1769,
        1824
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x20"
    },
    "10608": {
      "fn": "MerkleProof.processProof",
      "offset": [
        1769,
        1824
      ],
      "op": "ADD",
      "path": "13"
    },
    "10609": {
      "fn": "MerkleProof.processProof",
      "offset": [
        1769,
        1824
      ],
      "op": "KECCAK256",
      "path": "13"
    },
    "10610": {
      "fn": "MerkleProof.processProof",
      "offset": [
        1754,
        1824
      ],
      "op": "SWAP3",
      "path": "13"
    },
    "10611": {
      "fn": "MerkleProof.processProof",
      "offset": [
        1754,
        1824
      ],
      "op": "POP",
      "path": "13"
    },
    "10612": {
      "fn": "MerkleProof.processProof",
      "offset": [
        1624,
        2026
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x29A5"
    },
    "10615": {
      "fn": "MerkleProof.processProof",
      "offset": [
        1624,
        2026
      ],
      "op": "JUMP",
      "path": "13"
    },
    "10616": {
      "fn": "MerkleProof.processProof",
      "offset": [
        1624,
        2026
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "10617": {
      "fn": "MerkleProof.processProof",
      "offset": [
        1966,
        2010
      ],
      "op": "PUSH1",
      "path": "13",
      "statement": 122,
      "value": "0x40"
    },
    "10619": {
      "fn": "MerkleProof.processProof",
      "offset": [
        1966,
        2010
      ],
      "op": "DUP1",
      "path": "13"
    },
    "10620": {
      "fn": "MerkleProof.processProof",
      "offset": [
        1966,
        2010
      ],
      "op": "MLOAD",
      "path": "13"
    },
    "10621": {
      "fn": "MerkleProof.processProof",
      "offset": [
        1966,
        2010
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x20"
    },
    "10623": {
      "fn": "MerkleProof.processProof",
      "offset": [
        1966,
        2010
      ],
      "op": "DUP2",
      "path": "13"
    },
    "10624": {
      "fn": "MerkleProof.processProof",
      "offset": [
        1966,
        2010
      ],
      "op": "ADD",
      "path": "13"
    },
    "10625": {
      "op": "DUP4"
    },
    "10626": {
      "op": "SWAP1"
    },
    "10627": {
      "op": "MSTORE"
    },
    "10628": {
      "op": "SWAP1"
    },
    "10629": {
      "op": "DUP2"
    },
    "10630": {
      "op": "ADD"
    },
    "10631": {
      "op": "DUP5"
    },
    "10632": {
      "op": "SWAP1"
    },
    "10633": {
      "op": "MSTORE"
    },
    "10634": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "10636": {
      "op": "ADD"
    },
    "10637": {
      "fn": "MerkleProof.processProof",
      "offset": [
        1966,
        2010
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "10639": {
      "fn": "MerkleProof.processProof",
      "offset": [
        1966,
        2010
      ],
      "op": "MLOAD",
      "path": "13"
    },
    "10640": {
      "fn": "MerkleProof.processProof",
      "offset": [
        1966,
        2010
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x20"
    },
    "10642": {
      "fn": "MerkleProof.processProof",
      "offset": [
        1966,
        2010
      ],
      "op": "DUP2",
      "path": "13"
    },
    "10643": {
      "fn": "MerkleProof.processProof",
      "offset": [
        1966,
        2010
      ],
      "op": "DUP4",
      "path": "13"
    },
    "10644": {
      "fn": "MerkleProof.processProof",
      "offset": [
        1966,
        2010
      ],
      "op": "SUB",
      "path": "13"
    },
    "10645": {
      "fn": "MerkleProof.processProof",
      "offset": [
        1966,
        2010
      ],
      "op": "SUB",
      "path": "13"
    },
    "10646": {
      "fn": "MerkleProof.processProof",
      "offset": [
        1966,
        2010
      ],
      "op": "DUP2",
      "path": "13"
    },
    "10647": {
      "fn": "MerkleProof.processProof",
      "offset": [
        1966,
        2010
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "10648": {
      "fn": "MerkleProof.processProof",
      "offset": [
        1966,
        2010
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "10649": {
      "fn": "MerkleProof.processProof",
      "offset": [
        1966,
        2010
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "10651": {
      "fn": "MerkleProof.processProof",
      "offset": [
        1966,
        2010
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "10652": {
      "fn": "MerkleProof.processProof",
      "offset": [
        1956,
        2011
      ],
      "op": "DUP1",
      "path": "13"
    },
    "10653": {
      "fn": "MerkleProof.processProof",
      "offset": [
        1956,
        2011
      ],
      "op": "MLOAD",
      "path": "13"
    },
    "10654": {
      "fn": "MerkleProof.processProof",
      "offset": [
        1956,
        2011
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "10655": {
      "fn": "MerkleProof.processProof",
      "offset": [
        1956,
        2011
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x20"
    },
    "10657": {
      "fn": "MerkleProof.processProof",
      "offset": [
        1956,
        2011
      ],
      "op": "ADD",
      "path": "13"
    },
    "10658": {
      "fn": "MerkleProof.processProof",
      "offset": [
        1956,
        2011
      ],
      "op": "KECCAK256",
      "path": "13"
    },
    "10659": {
      "fn": "MerkleProof.processProof",
      "offset": [
        1941,
        2011
      ],
      "op": "SWAP3",
      "path": "13"
    },
    "10660": {
      "fn": "MerkleProof.processProof",
      "offset": [
        1941,
        2011
      ],
      "op": "POP",
      "path": "13"
    },
    "10661": {
      "fn": "MerkleProof.processProof",
      "offset": [
        1624,
        2026
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "10662": {
      "op": "POP"
    },
    "10663": {
      "fn": "MerkleProof.processProof",
      "offset": [
        1560,
        1563
      ],
      "op": "DUP1",
      "path": "13",
      "statement": 123
    },
    "10664": {
      "fn": "MerkleProof.processProof",
      "offset": [
        1560,
        1563
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x29B0"
    },
    "10667": {
      "fn": "MerkleProof.processProof",
      "offset": [
        1560,
        1563
      ],
      "op": "DUP2",
      "path": "13"
    },
    "10668": {
      "fn": "MerkleProof.processProof",
      "offset": [
        1560,
        1563
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x34F8"
    },
    "10671": {
      "fn": "MerkleProof.processProof",
      "jump": "i",
      "offset": [
        1560,
        1563
      ],
      "op": "JUMP",
      "path": "13"
    },
    "10672": {
      "fn": "MerkleProof.processProof",
      "offset": [
        1560,
        1563
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "10673": {
      "fn": "MerkleProof.processProof",
      "offset": [
        1560,
        1563
      ],
      "op": "SWAP2",
      "path": "13"
    },
    "10674": {
      "fn": "MerkleProof.processProof",
      "offset": [
        1560,
        1563
      ],
      "op": "POP",
      "path": "13"
    },
    "10675": {
      "fn": "MerkleProof.processProof",
      "offset": [
        1560,
        1563
      ],
      "op": "POP",
      "path": "13"
    },
    "10676": {
      "fn": "MerkleProof.processProof",
      "offset": [
        1522,
        2036
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x2919"
    },
    "10679": {
      "fn": "MerkleProof.processProof",
      "offset": [
        1522,
        2036
      ],
      "op": "JUMP",
      "path": "13"
    },
    "10680": {
      "fn": "ERC721._safeMint",
      "offset": [
        8430,
        8741
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "10681": {
      "fn": "ERC721._safeMint",
      "offset": [
        8555,
        8573
      ],
      "op": "PUSH2",
      "path": "3",
      "statement": 124,
      "value": "0x29C2"
    },
    "10684": {
      "fn": "ERC721._safeMint",
      "offset": [
        8561,
        8563
      ],
      "op": "DUP4",
      "path": "3"
    },
    "10685": {
      "fn": "ERC721._safeMint",
      "offset": [
        8565,
        8572
      ],
      "op": "DUP4",
      "path": "3"
    },
    "10686": {
      "fn": "ERC721._safeMint",
      "offset": [
        8555,
        8560
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2BA1"
    },
    "10689": {
      "fn": "ERC721._safeMint",
      "jump": "i",
      "offset": [
        8555,
        8573
      ],
      "op": "JUMP",
      "path": "3"
    },
    "10690": {
      "fn": "ERC721._safeMint",
      "offset": [
        8555,
        8573
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "10691": {
      "fn": "ERC721._safeMint",
      "offset": [
        8604,
        8658
      ],
      "op": "PUSH2",
      "path": "3",
      "statement": 125,
      "value": "0x29CF"
    },
    "10694": {
      "fn": "ERC721._safeMint",
      "offset": [
        8635,
        8636
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "10696": {
      "fn": "ERC721._safeMint",
      "offset": [
        8639,
        8641
      ],
      "op": "DUP5",
      "path": "3"
    },
    "10697": {
      "fn": "ERC721._safeMint",
      "offset": [
        8643,
        8650
      ],
      "op": "DUP5",
      "path": "3"
    },
    "10698": {
      "fn": "ERC721._safeMint",
      "offset": [
        8652,
        8657
      ],
      "op": "DUP5",
      "path": "3"
    },
    "10699": {
      "fn": "ERC721._safeMint",
      "offset": [
        8604,
        8626
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x29EB"
    },
    "10702": {
      "fn": "ERC721._safeMint",
      "jump": "i",
      "offset": [
        8604,
        8658
      ],
      "op": "JUMP",
      "path": "3"
    },
    "10703": {
      "branch": 181,
      "fn": "ERC721._safeMint",
      "offset": [
        8604,
        8658
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "10704": {
      "fn": "ERC721._safeMint",
      "offset": [
        8583,
        8734
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xCB0"
    },
    "10707": {
      "branch": 181,
      "fn": "ERC721._safeMint",
      "offset": [
        8583,
        8734
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "10708": {
      "fn": "ERC721._safeMint",
      "offset": [
        8583,
        8734
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "10710": {
      "fn": "ERC721._safeMint",
      "offset": [
        8583,
        8734
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "10711": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "10715": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "10717": {
      "op": "SHL"
    },
    "10718": {
      "fn": "ERC721._safeMint",
      "offset": [
        8583,
        8734
      ],
      "op": "DUP2",
      "path": "3"
    },
    "10719": {
      "fn": "ERC721._safeMint",
      "offset": [
        8583,
        8734
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "10720": {
      "fn": "ERC721._safeMint",
      "offset": [
        8583,
        8734
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "10722": {
      "fn": "ERC721._safeMint",
      "offset": [
        8583,
        8734
      ],
      "op": "ADD",
      "path": "3"
    },
    "10723": {
      "fn": "ERC721._safeMint",
      "offset": [
        8583,
        8734
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xB7A"
    },
    "10726": {
      "fn": "ERC721._safeMint",
      "offset": [
        8583,
        8734
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "10727": {
      "fn": "ERC721._safeMint",
      "offset": [
        8583,
        8734
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x35E0"
    },
    "10730": {
      "fn": "ERC721._safeMint",
      "jump": "i",
      "offset": [
        8583,
        8734
      ],
      "op": "JUMP",
      "path": "3"
    },
    "10731": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12161,
        12939
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "10732": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12311,
        12315
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "10734": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10736": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10738": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "10740": {
      "op": "SHL"
    },
    "10741": {
      "op": "SUB"
    },
    "10742": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12331,
        12344
      ],
      "op": "DUP5",
      "path": "3"
    },
    "10743": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12331,
        12344
      ],
      "op": "AND",
      "path": "3"
    },
    "10744": {
      "op": "EXTCODESIZE"
    },
    "10745": {
      "op": "ISZERO"
    },
    "10746": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12327,
        12933
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2ADE"
    },
    "10749": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12327,
        12933
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "10750": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12366,
        12438
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "10752": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12366,
        12438
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "10753": {
      "op": "PUSH4",
      "value": "0xA85BD01"
    },
    "10758": {
      "op": "PUSH1",
      "value": "0xE1"
    },
    "10760": {
      "op": "SHL"
    },
    "10761": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12366,
        12438
      ],
      "op": "DUP2",
      "path": "3"
    },
    "10762": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12366,
        12438
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "10763": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10765": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10767": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "10769": {
      "op": "SHL"
    },
    "10770": {
      "op": "SUB"
    },
    "10771": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12366,
        12402
      ],
      "op": "DUP6",
      "path": "3"
    },
    "10772": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12366,
        12402
      ],
      "op": "AND",
      "path": "3"
    },
    "10773": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12366,
        12402
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "10774": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12366,
        12402
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0x150B7A02"
    },
    "10779": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12366,
        12402
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "10780": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12366,
        12438
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2A2F"
    },
    "10783": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12366,
        12438
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "10784": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "10"
    },
    "10785": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "10786": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12417,
        12421
      ],
      "op": "DUP10",
      "path": "3"
    },
    "10787": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12417,
        12421
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "10788": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12423,
        12430
      ],
      "op": "DUP9",
      "path": "3"
    },
    "10789": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12423,
        12430
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "10790": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12432,
        12437
      ],
      "op": "DUP9",
      "path": "3"
    },
    "10791": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12432,
        12437
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "10792": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12366,
        12438
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "10794": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12366,
        12438
      ],
      "op": "ADD",
      "path": "3"
    },
    "10795": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12366,
        12438
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x3670"
    },
    "10798": {
      "fn": "ERC721._checkOnERC721Received",
      "jump": "i",
      "offset": [
        12366,
        12438
      ],
      "op": "JUMP",
      "path": "3"
    },
    "10799": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12366,
        12438
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "10800": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12366,
        12438
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "10802": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12366,
        12438
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "10804": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12366,
        12438
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "10805": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12366,
        12438
      ],
      "op": "DUP1",
      "path": "3"
    },
    "10806": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12366,
        12438
      ],
      "op": "DUP4",
      "path": "3"
    },
    "10807": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12366,
        12438
      ],
      "op": "SUB",
      "path": "3"
    },
    "10808": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12366,
        12438
      ],
      "op": "DUP2",
      "path": "3"
    },
    "10809": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12366,
        12438
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "10811": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12366,
        12438
      ],
      "op": "DUP8",
      "path": "3"
    },
    "10812": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12366,
        12438
      ],
      "op": "GAS",
      "path": "3"
    },
    "10813": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12366,
        12438
      ],
      "op": "CALL",
      "path": "3"
    },
    "10814": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12366,
        12438
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "10815": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12366,
        12438
      ],
      "op": "POP",
      "path": "3"
    },
    "10816": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12366,
        12438
      ],
      "op": "POP",
      "path": "3"
    },
    "10817": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12366,
        12438
      ],
      "op": "POP",
      "path": "3"
    },
    "10818": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12366,
        12438
      ],
      "op": "DUP1",
      "path": "3"
    },
    "10819": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12366,
        12438
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "10820": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12366,
        12438
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2A6A"
    },
    "10823": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12366,
        12438
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "10824": {
      "op": "POP"
    },
    "10825": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12366,
        12438
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "10827": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12366,
        12438
      ],
      "op": "DUP1",
      "path": "3"
    },
    "10828": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12366,
        12438
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "10829": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12366,
        12438
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1F"
    },
    "10831": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12366,
        12438
      ],
      "op": "RETURNDATASIZE",
      "path": "3"
    },
    "10832": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12366,
        12438
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "10833": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12366,
        12438
      ],
      "op": "DUP2",
      "path": "3"
    },
    "10834": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12366,
        12438
      ],
      "op": "ADD",
      "path": "3"
    },
    "10835": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "10837": {
      "op": "NOT"
    },
    "10838": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12366,
        12438
      ],
      "op": "AND",
      "path": "3"
    },
    "10839": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12366,
        12438
      ],
      "op": "DUP3",
      "path": "3"
    },
    "10840": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12366,
        12438
      ],
      "op": "ADD",
      "path": "3"
    },
    "10841": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12366,
        12438
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "10842": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12366,
        12438
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "10843": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12366,
        12438
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "10844": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12366,
        12438
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2A67"
    },
    "10847": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12366,
        12438
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "10848": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12366,
        12438
      ],
      "op": "DUP2",
      "path": "3"
    },
    "10849": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12366,
        12438
      ],
      "op": "ADD",
      "path": "3"
    },
    "10850": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12366,
        12438
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "10851": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12366,
        12438
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x36AD"
    },
    "10854": {
      "fn": "ERC721._checkOnERC721Received",
      "jump": "i",
      "offset": [
        12366,
        12438
      ],
      "op": "JUMP",
      "path": "3"
    },
    "10855": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12366,
        12438
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "10856": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12366,
        12438
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1"
    },
    "10858": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12366,
        12438
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "10859": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12362,
        12881
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2AC4"
    },
    "10862": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12362,
        12881
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "10863": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12362,
        12881
      ],
      "op": "RETURNDATASIZE",
      "path": "3"
    },
    "10864": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12362,
        12881
      ],
      "op": "DUP1",
      "path": "3"
    },
    "10865": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12362,
        12881
      ],
      "op": "DUP1",
      "path": "3"
    },
    "10866": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12362,
        12881
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "10867": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12362,
        12881
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2A98"
    },
    "10870": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12362,
        12881
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "10871": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12362,
        12881
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "10873": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12362,
        12881
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "10874": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12362,
        12881
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "10875": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12362,
        12881
      ],
      "op": "POP",
      "path": "3"
    },
    "10876": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12362,
        12881
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1F"
    },
    "10878": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12362,
        12881
      ],
      "op": "NOT",
      "path": "3"
    },
    "10879": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12362,
        12881
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x3F"
    },
    "10881": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12362,
        12881
      ],
      "op": "RETURNDATASIZE",
      "path": "3"
    },
    "10882": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12362,
        12881
      ],
      "op": "ADD",
      "path": "3"
    },
    "10883": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12362,
        12881
      ],
      "op": "AND",
      "path": "3"
    },
    "10884": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12362,
        12881
      ],
      "op": "DUP3",
      "path": "3"
    },
    "10885": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12362,
        12881
      ],
      "op": "ADD",
      "path": "3"
    },
    "10886": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12362,
        12881
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "10888": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12362,
        12881
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "10889": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12362,
        12881
      ],
      "op": "RETURNDATASIZE",
      "path": "3"
    },
    "10890": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12362,
        12881
      ],
      "op": "DUP3",
      "path": "3"
    },
    "10891": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12362,
        12881
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "10892": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12362,
        12881
      ],
      "op": "RETURNDATASIZE",
      "path": "3"
    },
    "10893": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12362,
        12881
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "10895": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12362,
        12881
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "10897": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12362,
        12881
      ],
      "op": "DUP5",
      "path": "3"
    },
    "10898": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12362,
        12881
      ],
      "op": "ADD",
      "path": "3"
    },
    "10899": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12362,
        12881
      ],
      "op": "RETURNDATACOPY",
      "path": "3"
    },
    "10900": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12362,
        12881
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2A9D"
    },
    "10903": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12362,
        12881
      ],
      "op": "JUMP",
      "path": "3"
    },
    "10904": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12362,
        12881
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "10905": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12362,
        12881
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x60"
    },
    "10907": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12362,
        12881
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "10908": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12362,
        12881
      ],
      "op": "POP",
      "path": "3"
    },
    "10909": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12362,
        12881
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "10910": {
      "op": "POP"
    },
    "10911": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12605,
        12618
      ],
      "op": "DUP1",
      "path": "3"
    },
    "10912": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12605,
        12618
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "10913": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12601,
        12867
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2ABC"
    },
    "10916": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12601,
        12867
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "10917": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12647,
        12707
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 126,
      "value": "0x40"
    },
    "10919": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12647,
        12707
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "10920": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "10924": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "10926": {
      "op": "SHL"
    },
    "10927": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12647,
        12707
      ],
      "op": "DUP2",
      "path": "3"
    },
    "10928": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12647,
        12707
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "10929": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12647,
        12707
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "10931": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12647,
        12707
      ],
      "op": "ADD",
      "path": "3"
    },
    "10932": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12647,
        12707
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xB7A"
    },
    "10935": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12647,
        12707
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "10936": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12647,
        12707
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x35E0"
    },
    "10939": {
      "fn": "ERC721._checkOnERC721Received",
      "jump": "i",
      "offset": [
        12647,
        12707
      ],
      "op": "JUMP",
      "path": "3"
    },
    "10940": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12601,
        12867
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "10941": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12819,
        12825
      ],
      "op": "DUP1",
      "path": "3"
    },
    "10942": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12813,
        12826
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "10943": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12804,
        12810
      ],
      "op": "DUP2",
      "path": "3"
    },
    "10944": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12800,
        12802
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "10946": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12796,
        12811
      ],
      "op": "ADD",
      "path": "3"
    },
    "10947": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12789,
        12827
      ],
      "op": "REVERT",
      "path": "3"
    },
    "10948": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12362,
        12881
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "10949": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10951": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10953": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "10955": {
      "op": "SHL"
    },
    "10956": {
      "op": "SUB"
    },
    "10957": {
      "op": "NOT"
    },
    "10958": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12488,
        12539
      ],
      "op": "AND",
      "path": "3",
      "statement": 127
    },
    "10959": {
      "op": "PUSH4",
      "value": "0xA85BD01"
    },
    "10964": {
      "op": "PUSH1",
      "value": "0xE1"
    },
    "10966": {
      "op": "SHL"
    },
    "10967": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12488,
        12539
      ],
      "op": "EQ",
      "path": "3"
    },
    "10968": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12488,
        12539
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "10969": {
      "op": "POP"
    },
    "10970": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12481,
        12539
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x236E"
    },
    "10973": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12481,
        12539
      ],
      "op": "JUMP",
      "path": "3"
    },
    "10974": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12327,
        12933
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "10975": {
      "op": "POP"
    },
    "10976": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12918,
        12922
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 128,
      "value": "0x1"
    },
    "10978": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12161,
        12939
      ],
      "op": "SWAP5",
      "path": "3"
    },
    "10979": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12161,
        12939
      ],
      "op": "SWAP4",
      "path": "3"
    },
    "10980": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12161,
        12939
      ],
      "op": "POP",
      "path": "3"
    },
    "10981": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12161,
        12939
      ],
      "op": "POP",
      "path": "3"
    },
    "10982": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12161,
        12939
      ],
      "op": "POP",
      "path": "3"
    },
    "10983": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12161,
        12939
      ],
      "op": "POP",
      "path": "3"
    },
    "10984": {
      "fn": "ERC721._checkOnERC721Received",
      "jump": "o",
      "offset": [
        12161,
        12939
      ],
      "op": "JUMP",
      "path": "3"
    },
    "10985": {
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        2624,
        3196
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "10986": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10988": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10990": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "10992": {
      "op": "SHL"
    },
    "10993": {
      "op": "SUB"
    },
    "10994": {
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        2823,
        2841
      ],
      "op": "DUP4",
      "path": "6"
    },
    "10995": {
      "branch": 185,
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        2823,
        2841
      ],
      "op": "AND",
      "path": "6"
    },
    "10996": {
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        2819,
        3002
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x2B44"
    },
    "10999": {
      "branch": 185,
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        2819,
        3002
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "11000": {
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        2857,
        2897
      ],
      "op": "PUSH2",
      "path": "6",
      "statement": 129,
      "value": "0x2B3F"
    },
    "11003": {
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        2889,
        2896
      ],
      "op": "DUP2",
      "path": "6"
    },
    "11004": {
      "fn": "ERC721Enumerable._addTokenToAllTokensEnumeration",
      "offset": [
        4005,
        4015
      ],
      "op": "PUSH1",
      "path": "6",
      "statement": 130,
      "value": "0x8"
    },
    "11006": {
      "fn": "ERC721Enumerable._addTokenToAllTokensEnumeration",
      "offset": [
        4005,
        4022
      ],
      "op": "DUP1",
      "path": "6"
    },
    "11007": {
      "fn": "ERC721Enumerable._addTokenToAllTokensEnumeration",
      "offset": [
        4005,
        4022
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "11008": {
      "fn": "ERC721Enumerable._addTokenToAllTokensEnumeration",
      "offset": [
        3978,
        4002
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "11010": {
      "fn": "ERC721Enumerable._addTokenToAllTokensEnumeration",
      "offset": [
        3978,
        4002
      ],
      "op": "DUP4",
      "path": "6"
    },
    "11011": {
      "fn": "ERC721Enumerable._addTokenToAllTokensEnumeration",
      "offset": [
        3978,
        4002
      ],
      "op": "DUP2",
      "path": "6"
    },
    "11012": {
      "fn": "ERC721Enumerable._addTokenToAllTokensEnumeration",
      "offset": [
        3978,
        4002
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "11013": {
      "fn": "ERC721Enumerable._addTokenToAllTokensEnumeration",
      "offset": [
        3978,
        3993
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x9"
    },
    "11015": {
      "fn": "ERC721Enumerable._addTokenToAllTokensEnumeration",
      "offset": [
        3978,
        4002
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "11017": {
      "fn": "ERC721Enumerable._addTokenToAllTokensEnumeration",
      "offset": [
        3978,
        4002
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "11018": {
      "fn": "ERC721Enumerable._addTokenToAllTokensEnumeration",
      "offset": [
        3978,
        4002
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "11020": {
      "fn": "ERC721Enumerable._addTokenToAllTokensEnumeration",
      "offset": [
        3978,
        4002
      ],
      "op": "DUP2",
      "path": "6"
    },
    "11021": {
      "fn": "ERC721Enumerable._addTokenToAllTokensEnumeration",
      "offset": [
        3978,
        4002
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "11022": {
      "fn": "ERC721Enumerable._addTokenToAllTokensEnumeration",
      "offset": [
        3978,
        4022
      ],
      "op": "DUP3",
      "path": "6"
    },
    "11023": {
      "fn": "ERC721Enumerable._addTokenToAllTokensEnumeration",
      "offset": [
        3978,
        4022
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "11024": {
      "fn": "ERC721Enumerable._addTokenToAllTokensEnumeration",
      "offset": [
        3978,
        4022
      ],
      "op": "SSTORE",
      "path": "6"
    },
    "11025": {
      "fn": "ERC721Enumerable._addTokenToAllTokensEnumeration",
      "offset": [
        4032,
        4056
      ],
      "op": "PUSH1",
      "path": "6",
      "statement": 131,
      "value": "0x1"
    },
    "11027": {
      "fn": "ERC721Enumerable._addTokenToAllTokensEnumeration",
      "offset": [
        4032,
        4056
      ],
      "op": "DUP3",
      "path": "6"
    },
    "11028": {
      "fn": "ERC721Enumerable._addTokenToAllTokensEnumeration",
      "offset": [
        4032,
        4056
      ],
      "op": "ADD",
      "path": "6"
    },
    "11029": {
      "fn": "ERC721Enumerable._addTokenToAllTokensEnumeration",
      "offset": [
        4032,
        4056
      ],
      "op": "DUP4",
      "path": "6"
    },
    "11030": {
      "fn": "ERC721Enumerable._addTokenToAllTokensEnumeration",
      "offset": [
        4032,
        4056
      ],
      "op": "SSTORE",
      "path": "6"
    },
    "11031": {
      "fn": "ERC721Enumerable._addTokenToAllTokensEnumeration",
      "offset": [
        4032,
        4056
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "11032": {
      "fn": "ERC721Enumerable._addTokenToAllTokensEnumeration",
      "offset": [
        4032,
        4056
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "11033": {
      "fn": "ERC721Enumerable._addTokenToAllTokensEnumeration",
      "offset": [
        4032,
        4056
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "11034": {
      "fn": "ERC721Enumerable._addTokenToAllTokensEnumeration",
      "offset": [
        4032,
        4056
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "11035": {
      "fn": "ERC721Enumerable._addTokenToAllTokensEnumeration",
      "offset": [
        4032,
        4056
      ],
      "op": "PUSH32",
      "path": "6",
      "value": "0xF3F7A9FE364FAAB93B216DA50A3214154F22A0A2B415B23A84C8169E8B636EE3"
    },
    "11068": {
      "fn": "ERC721Enumerable._addTokenToAllTokensEnumeration",
      "offset": [
        4032,
        4056
      ],
      "op": "ADD",
      "path": "6"
    },
    "11069": {
      "fn": "ERC721Enumerable._addTokenToAllTokensEnumeration",
      "offset": [
        4032,
        4056
      ],
      "op": "SSTORE",
      "path": "6"
    },
    "11070": {
      "fn": "ERC721Enumerable._addTokenToAllTokensEnumeration",
      "offset": [
        3902,
        4063
      ],
      "op": "JUMP",
      "path": "6"
    },
    "11071": {
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        2857,
        2897
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "11072": {
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        2819,
        3002
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x2B67"
    },
    "11075": {
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        2819,
        3002
      ],
      "op": "JUMP",
      "path": "6"
    },
    "11076": {
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        2819,
        3002
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "11077": {
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        2926,
        2928
      ],
      "op": "DUP2",
      "path": "6"
    },
    "11078": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11080": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11082": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "11084": {
      "op": "SHL"
    },
    "11085": {
      "op": "SUB"
    },
    "11086": {
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        2918,
        2928
      ],
      "op": "AND",
      "path": "6"
    },
    "11087": {
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        2918,
        2922
      ],
      "op": "DUP4",
      "path": "6"
    },
    "11088": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11090": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11092": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "11094": {
      "op": "SHL"
    },
    "11095": {
      "op": "SUB"
    },
    "11096": {
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        2918,
        2928
      ],
      "op": "AND",
      "path": "6"
    },
    "11097": {
      "branch": 186,
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        2918,
        2928
      ],
      "op": "EQ",
      "path": "6"
    },
    "11098": {
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        2914,
        3002
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x2B67"
    },
    "11101": {
      "branch": 186,
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        2914,
        3002
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "11102": {
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        2944,
        2991
      ],
      "op": "PUSH2",
      "path": "6",
      "statement": 132,
      "value": "0x2B67"
    },
    "11105": {
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        2977,
        2981
      ],
      "op": "DUP4",
      "path": "6"
    },
    "11106": {
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        2983,
        2990
      ],
      "op": "DUP3",
      "path": "6"
    },
    "11107": {
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        2944,
        2976
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x2CEF"
    },
    "11110": {
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "jump": "i",
      "offset": [
        2944,
        2991
      ],
      "op": "JUMP",
      "path": "6"
    },
    "11111": {
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        2944,
        2991
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "11112": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11114": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11116": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "11118": {
      "op": "SHL"
    },
    "11119": {
      "op": "SUB"
    },
    "11120": {
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        3015,
        3031
      ],
      "op": "DUP3",
      "path": "6"
    },
    "11121": {
      "branch": 187,
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        3015,
        3031
      ],
      "op": "AND",
      "path": "6"
    },
    "11122": {
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        3011,
        3190
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x2B7E"
    },
    "11125": {
      "branch": 187,
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        3011,
        3190
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "11126": {
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        3047,
        3092
      ],
      "op": "PUSH2",
      "path": "6",
      "statement": 133,
      "value": "0xCB0"
    },
    "11129": {
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        3084,
        3091
      ],
      "op": "DUP2",
      "path": "6"
    },
    "11130": {
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        3047,
        3083
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x2D8C"
    },
    "11133": {
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "jump": "i",
      "offset": [
        3047,
        3092
      ],
      "op": "JUMP",
      "path": "6"
    },
    "11134": {
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        3011,
        3190
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "11135": {
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        3119,
        3123
      ],
      "op": "DUP3",
      "path": "6"
    },
    "11136": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11138": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11140": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "11142": {
      "op": "SHL"
    },
    "11143": {
      "op": "SUB"
    },
    "11144": {
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        3113,
        3123
      ],
      "op": "AND",
      "path": "6"
    },
    "11145": {
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        3113,
        3115
      ],
      "op": "DUP3",
      "path": "6"
    },
    "11146": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11148": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11150": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "11152": {
      "op": "SHL"
    },
    "11153": {
      "op": "SUB"
    },
    "11154": {
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        3113,
        3123
      ],
      "op": "AND",
      "path": "6"
    },
    "11155": {
      "branch": 188,
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        3113,
        3123
      ],
      "op": "EQ",
      "path": "6"
    },
    "11156": {
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        3109,
        3190
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xCB0"
    },
    "11159": {
      "branch": 188,
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        3109,
        3190
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "11160": {
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        3139,
        3179
      ],
      "op": "PUSH2",
      "path": "6",
      "statement": 134,
      "value": "0xCB0"
    },
    "11163": {
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        3167,
        3169
      ],
      "op": "DUP3",
      "path": "6"
    },
    "11164": {
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        3171,
        3178
      ],
      "op": "DUP3",
      "path": "6"
    },
    "11165": {
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        3139,
        3166
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x2E3B"
    },
    "11168": {
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "jump": "i",
      "offset": [
        3139,
        3179
      ],
      "op": "JUMP",
      "path": "6"
    },
    "11169": {
      "fn": "ERC721._mint",
      "offset": [
        9063,
        9435
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "11170": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11172": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11174": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "11176": {
      "op": "SHL"
    },
    "11177": {
      "op": "SUB"
    },
    "11178": {
      "fn": "ERC721._mint",
      "offset": [
        9142,
        9158
      ],
      "op": "DUP3",
      "path": "3",
      "statement": 135
    },
    "11179": {
      "branch": 182,
      "fn": "ERC721._mint",
      "offset": [
        9142,
        9158
      ],
      "op": "AND",
      "path": "3"
    },
    "11180": {
      "fn": "ERC721._mint",
      "offset": [
        9134,
        9195
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2BF7"
    },
    "11183": {
      "branch": 182,
      "fn": "ERC721._mint",
      "offset": [
        9134,
        9195
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "11184": {
      "fn": "ERC721._mint",
      "offset": [
        9134,
        9195
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "11186": {
      "fn": "ERC721._mint",
      "offset": [
        9134,
        9195
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "11187": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "11191": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "11193": {
      "op": "SHL"
    },
    "11194": {
      "fn": "ERC721._mint",
      "offset": [
        9134,
        9195
      ],
      "op": "DUP2",
      "path": "3"
    },
    "11195": {
      "fn": "ERC721._mint",
      "offset": [
        9134,
        9195
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "11196": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "11198": {
      "fn": "ERC721._mint",
      "offset": [
        9134,
        9195
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "11200": {
      "fn": "ERC721._mint",
      "offset": [
        9134,
        9195
      ],
      "op": "DUP3",
      "path": "3"
    },
    "11201": {
      "fn": "ERC721._mint",
      "offset": [
        9134,
        9195
      ],
      "op": "ADD",
      "path": "3"
    },
    "11202": {
      "op": "DUP2"
    },
    "11203": {
      "op": "SWAP1"
    },
    "11204": {
      "op": "MSTORE"
    },
    "11205": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "11207": {
      "op": "DUP3"
    },
    "11208": {
      "op": "ADD"
    },
    "11209": {
      "op": "MSTORE"
    },
    "11210": {
      "op": "PUSH32",
      "value": "0x4552433732313A206D696E7420746F20746865207A65726F2061646472657373"
    },
    "11243": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "11245": {
      "op": "DUP3"
    },
    "11246": {
      "op": "ADD"
    },
    "11247": {
      "op": "MSTORE"
    },
    "11248": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "11250": {
      "op": "ADD"
    },
    "11251": {
      "fn": "ERC721._mint",
      "offset": [
        9134,
        9195
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xB7A"
    },
    "11254": {
      "op": "JUMP"
    },
    "11255": {
      "fn": "ERC721._mint",
      "offset": [
        9134,
        9195
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "11256": {
      "fn": "ERC721._exists",
      "offset": [
        7209,
        7213
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "11258": {
      "fn": "ERC721._exists",
      "offset": [
        7232,
        7248
      ],
      "op": "DUP2",
      "path": "3"
    },
    "11259": {
      "fn": "ERC721._exists",
      "offset": [
        7232,
        7248
      ],
      "op": "DUP2",
      "path": "3"
    },
    "11260": {
      "fn": "ERC721._exists",
      "offset": [
        7232,
        7248
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "11261": {
      "fn": "ERC721._exists",
      "offset": [
        7232,
        7239
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x2"
    },
    "11263": {
      "fn": "ERC721._exists",
      "offset": [
        7232,
        7248
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "11265": {
      "fn": "ERC721._exists",
      "offset": [
        7232,
        7248
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "11266": {
      "fn": "ERC721._exists",
      "offset": [
        7232,
        7248
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "11268": {
      "fn": "ERC721._exists",
      "offset": [
        7232,
        7248
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "11269": {
      "fn": "ERC721._exists",
      "offset": [
        7232,
        7248
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "11270": {
      "fn": "ERC721._exists",
      "offset": [
        7232,
        7248
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "11271": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11273": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11275": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "11277": {
      "op": "SHL"
    },
    "11278": {
      "op": "SUB"
    },
    "11279": {
      "fn": "ERC721._exists",
      "offset": [
        7232,
        7248
      ],
      "op": "AND",
      "path": "3"
    },
    "11280": {
      "fn": "ERC721._exists",
      "offset": [
        7232,
        7262
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "11281": {
      "fn": "ERC721._mint",
      "offset": [
        9205,
        9263
      ],
      "op": "PUSH2",
      "path": "3",
      "statement": 136,
      "value": "0x2C5C"
    },
    "11284": {
      "fn": "ERC721._mint",
      "offset": [
        9205,
        9263
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "11285": {
      "fn": "ERC721._mint",
      "offset": [
        9205,
        9263
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "11287": {
      "fn": "ERC721._mint",
      "offset": [
        9205,
        9263
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "11288": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "11292": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "11294": {
      "op": "SHL"
    },
    "11295": {
      "fn": "ERC721._mint",
      "offset": [
        9205,
        9263
      ],
      "op": "DUP2",
      "path": "3"
    },
    "11296": {
      "fn": "ERC721._mint",
      "offset": [
        9205,
        9263
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "11297": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "11299": {
      "fn": "ERC721._mint",
      "offset": [
        9205,
        9263
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "11301": {
      "fn": "ERC721._mint",
      "offset": [
        9205,
        9263
      ],
      "op": "DUP3",
      "path": "3"
    },
    "11302": {
      "fn": "ERC721._mint",
      "offset": [
        9205,
        9263
      ],
      "op": "ADD",
      "path": "3"
    },
    "11303": {
      "op": "MSTORE"
    },
    "11304": {
      "op": "PUSH1",
      "value": "0x1C"
    },
    "11306": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "11308": {
      "op": "DUP3"
    },
    "11309": {
      "op": "ADD"
    },
    "11310": {
      "op": "MSTORE"
    },
    "11311": {
      "op": "PUSH32",
      "value": "0x4552433732313A20746F6B656E20616C7265616479206D696E74656400000000"
    },
    "11344": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "11346": {
      "op": "DUP3"
    },
    "11347": {
      "op": "ADD"
    },
    "11348": {
      "op": "MSTORE"
    },
    "11349": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "11351": {
      "op": "ADD"
    },
    "11352": {
      "fn": "ERC721._mint",
      "offset": [
        9205,
        9263
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xB7A"
    },
    "11355": {
      "op": "JUMP"
    },
    "11356": {
      "fn": "ERC721._mint",
      "offset": [
        9205,
        9263
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "11357": {
      "fn": "ERC721._mint",
      "offset": [
        9274,
        9319
      ],
      "op": "PUSH2",
      "path": "3",
      "statement": 137,
      "value": "0x2C68"
    },
    "11360": {
      "fn": "ERC721._mint",
      "offset": [
        9303,
        9304
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "11362": {
      "fn": "ERC721._mint",
      "offset": [
        9307,
        9309
      ],
      "op": "DUP4",
      "path": "3"
    },
    "11363": {
      "fn": "ERC721._mint",
      "offset": [
        9311,
        9318
      ],
      "op": "DUP4",
      "path": "3"
    },
    "11364": {
      "fn": "ERC721._mint",
      "offset": [
        9274,
        9294
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x28E6"
    },
    "11367": {
      "fn": "ERC721._mint",
      "jump": "i",
      "offset": [
        9274,
        9319
      ],
      "op": "JUMP",
      "path": "3"
    },
    "11368": {
      "fn": "ERC721._mint",
      "offset": [
        9274,
        9319
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "11369": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11371": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11373": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "11375": {
      "op": "SHL"
    },
    "11376": {
      "op": "SUB"
    },
    "11377": {
      "fn": "ERC721._mint",
      "offset": [
        9330,
        9343
      ],
      "op": "DUP3",
      "path": "3",
      "statement": 138
    },
    "11378": {
      "fn": "ERC721._mint",
      "offset": [
        9330,
        9343
      ],
      "op": "AND",
      "path": "3"
    },
    "11379": {
      "fn": "ERC721._mint",
      "offset": [
        9330,
        9343
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "11381": {
      "fn": "ERC721._mint",
      "offset": [
        9330,
        9343
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "11382": {
      "fn": "ERC721._mint",
      "offset": [
        9330,
        9343
      ],
      "op": "DUP2",
      "path": "3"
    },
    "11383": {
      "fn": "ERC721._mint",
      "offset": [
        9330,
        9343
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "11384": {
      "fn": "ERC721._mint",
      "offset": [
        9330,
        9339
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x3"
    },
    "11386": {
      "fn": "ERC721._mint",
      "offset": [
        9330,
        9343
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "11388": {
      "fn": "ERC721._mint",
      "offset": [
        9330,
        9343
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "11389": {
      "fn": "ERC721._mint",
      "offset": [
        9330,
        9343
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "11391": {
      "fn": "ERC721._mint",
      "offset": [
        9330,
        9343
      ],
      "op": "DUP2",
      "path": "3"
    },
    "11392": {
      "fn": "ERC721._mint",
      "offset": [
        9330,
        9343
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "11393": {
      "fn": "ERC721._mint",
      "offset": [
        9330,
        9348
      ],
      "op": "DUP1",
      "path": "3"
    },
    "11394": {
      "fn": "ERC721._mint",
      "offset": [
        9330,
        9348
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "11395": {
      "fn": "ERC721._mint",
      "offset": [
        9347,
        9348
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1"
    },
    "11397": {
      "fn": "ERC721._mint",
      "offset": [
        9347,
        9348
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "11398": {
      "fn": "ERC721._mint",
      "offset": [
        9330,
        9343
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "11399": {
      "fn": "ERC721._mint",
      "offset": [
        9330,
        9348
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2C91"
    },
    "11402": {
      "fn": "ERC721._mint",
      "offset": [
        9330,
        9348
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "11403": {
      "fn": "ERC721._mint",
      "offset": [
        9347,
        9348
      ],
      "op": "DUP5",
      "path": "3"
    },
    "11404": {
      "fn": "ERC721._mint",
      "offset": [
        9347,
        9348
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "11405": {
      "fn": "ERC721._mint",
      "offset": [
        9330,
        9348
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x34CA"
    },
    "11408": {
      "fn": "ERC721._mint",
      "jump": "i",
      "offset": [
        9330,
        9348
      ],
      "op": "JUMP",
      "path": "3"
    },
    "11409": {
      "fn": "ERC721._mint",
      "offset": [
        9330,
        9348
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "11410": {
      "fn": "ERC721._mint",
      "offset": [
        9330,
        9348
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "11411": {
      "fn": "ERC721._mint",
      "offset": [
        9330,
        9348
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "11412": {
      "fn": "ERC721._mint",
      "offset": [
        9330,
        9348
      ],
      "op": "SSTORE",
      "path": "3"
    },
    "11413": {
      "op": "POP"
    },
    "11414": {
      "op": "POP"
    },
    "11415": {
      "fn": "ERC721._mint",
      "offset": [
        9358,
        9374
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 139,
      "value": "0x0"
    },
    "11417": {
      "fn": "ERC721._mint",
      "offset": [
        9358,
        9374
      ],
      "op": "DUP2",
      "path": "3"
    },
    "11418": {
      "fn": "ERC721._mint",
      "offset": [
        9358,
        9374
      ],
      "op": "DUP2",
      "path": "3"
    },
    "11419": {
      "fn": "ERC721._mint",
      "offset": [
        9358,
        9374
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "11420": {
      "fn": "ERC721._mint",
      "offset": [
        9358,
        9365
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x2"
    },
    "11422": {
      "fn": "ERC721._mint",
      "offset": [
        9358,
        9374
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "11424": {
      "fn": "ERC721._mint",
      "offset": [
        9358,
        9374
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "11425": {
      "fn": "ERC721._mint",
      "offset": [
        9358,
        9374
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "11427": {
      "fn": "ERC721._mint",
      "offset": [
        9358,
        9374
      ],
      "op": "DUP1",
      "path": "3"
    },
    "11428": {
      "fn": "ERC721._mint",
      "offset": [
        9358,
        9374
      ],
      "op": "DUP3",
      "path": "3"
    },
    "11429": {
      "fn": "ERC721._mint",
      "offset": [
        9358,
        9374
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "11430": {
      "fn": "ERC721._mint",
      "offset": [
        9358,
        9379
      ],
      "op": "DUP1",
      "path": "3"
    },
    "11431": {
      "fn": "ERC721._mint",
      "offset": [
        9358,
        9379
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "11432": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11434": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11436": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "11438": {
      "op": "SHL"
    },
    "11439": {
      "op": "SUB"
    },
    "11440": {
      "op": "NOT"
    },
    "11441": {
      "fn": "ERC721._mint",
      "offset": [
        9358,
        9379
      ],
      "op": "AND",
      "path": "3"
    },
    "11442": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11444": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11446": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "11448": {
      "op": "SHL"
    },
    "11449": {
      "op": "SUB"
    },
    "11450": {
      "fn": "ERC721._mint",
      "offset": [
        9358,
        9379
      ],
      "op": "DUP7",
      "path": "3"
    },
    "11451": {
      "fn": "ERC721._mint",
      "offset": [
        9358,
        9379
      ],
      "op": "AND",
      "path": "3"
    },
    "11452": {
      "fn": "ERC721._mint",
      "offset": [
        9358,
        9379
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "11453": {
      "fn": "ERC721._mint",
      "offset": [
        9358,
        9379
      ],
      "op": "DUP2",
      "path": "3"
    },
    "11454": {
      "fn": "ERC721._mint",
      "offset": [
        9358,
        9379
      ],
      "op": "OR",
      "path": "3"
    },
    "11455": {
      "fn": "ERC721._mint",
      "offset": [
        9358,
        9379
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "11456": {
      "fn": "ERC721._mint",
      "offset": [
        9358,
        9379
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "11457": {
      "fn": "ERC721._mint",
      "offset": [
        9358,
        9379
      ],
      "op": "SSTORE",
      "path": "3"
    },
    "11458": {
      "fn": "ERC721._mint",
      "offset": [
        9395,
        9428
      ],
      "op": "SWAP1",
      "path": "3",
      "statement": 140
    },
    "11459": {
      "fn": "ERC721._mint",
      "offset": [
        9395,
        9428
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "11460": {
      "fn": "ERC721._mint",
      "offset": [
        9358,
        9374
      ],
      "op": "DUP4",
      "path": "3"
    },
    "11461": {
      "fn": "ERC721._mint",
      "offset": [
        9358,
        9374
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "11462": {
      "fn": "ERC721._mint",
      "offset": [
        9358,
        9374
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "11463": {
      "fn": "ERC721._mint",
      "offset": [
        9395,
        9428
      ],
      "op": "PUSH32",
      "path": "3",
      "value": "0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
    },
    "11496": {
      "fn": "ERC721._mint",
      "offset": [
        9395,
        9428
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "11497": {
      "fn": "ERC721._mint",
      "offset": [
        9358,
        9374
      ],
      "op": "DUP3",
      "path": "3"
    },
    "11498": {
      "fn": "ERC721._mint",
      "offset": [
        9358,
        9374
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "11499": {
      "fn": "ERC721._mint",
      "offset": [
        9395,
        9428
      ],
      "op": "LOG4",
      "path": "3"
    },
    "11500": {
      "fn": "ERC721._mint",
      "offset": [
        9063,
        9435
      ],
      "op": "POP",
      "path": "3"
    },
    "11501": {
      "fn": "ERC721._mint",
      "offset": [
        9063,
        9435
      ],
      "op": "POP",
      "path": "3"
    },
    "11502": {
      "fn": "ERC721._mint",
      "jump": "o",
      "offset": [
        9063,
        9435
      ],
      "op": "JUMP",
      "path": "3"
    },
    "11503": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        4680,
        5650
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "11504": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        4942,
        4964
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "11506": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        4992,
        4993
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x1"
    },
    "11508": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        4967,
        4989
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x2CFC"
    },
    "11511": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        4984,
        4988
      ],
      "op": "DUP5",
      "path": "6"
    },
    "11512": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        4967,
        4983
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1633"
    },
    "11515": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "jump": "i",
      "offset": [
        4967,
        4989
      ],
      "op": "JUMP",
      "path": "6"
    },
    "11516": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        4967,
        4989
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "11517": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        4967,
        4993
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x2D06"
    },
    "11520": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        4967,
        4993
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "11521": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        4967,
        4993
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "11522": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        4967,
        4993
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x3419"
    },
    "11525": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "jump": "i",
      "offset": [
        4967,
        4993
      ],
      "op": "JUMP",
      "path": "6"
    },
    "11526": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        4967,
        4993
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "11527": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5003,
        5021
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "11529": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5024,
        5050
      ],
      "op": "DUP4",
      "path": "6"
    },
    "11530": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5024,
        5050
      ],
      "op": "DUP2",
      "path": "6"
    },
    "11531": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5024,
        5050
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "11532": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5024,
        5041
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x7"
    },
    "11534": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5024,
        5050
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "11536": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5024,
        5050
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "11537": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5024,
        5050
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "11539": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5024,
        5050
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "11540": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5024,
        5050
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "11541": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5024,
        5050
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "11542": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        4942,
        4993
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "11543": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        4942,
        4993
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "11544": {
      "op": "POP"
    },
    "11545": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5154,
        5182
      ],
      "op": "DUP1",
      "path": "6"
    },
    "11546": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5154,
        5182
      ],
      "op": "DUP3",
      "path": "6"
    },
    "11547": {
      "branch": 189,
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5154,
        5182
      ],
      "op": "EQ",
      "path": "6"
    },
    "11548": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5150,
        5473
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x2D59"
    },
    "11551": {
      "branch": 189,
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5150,
        5473
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "11552": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11554": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11556": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "11558": {
      "op": "SHL"
    },
    "11559": {
      "op": "SUB"
    },
    "11560": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5220,
        5238
      ],
      "op": "DUP5",
      "path": "6"
    },
    "11561": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5220,
        5238
      ],
      "op": "AND",
      "path": "6"
    },
    "11562": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5198,
        5217
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "11564": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5220,
        5238
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "11565": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5220,
        5238
      ],
      "op": "DUP2",
      "path": "6"
    },
    "11566": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5220,
        5238
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "11567": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5220,
        5232
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x6"
    },
    "11569": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5220,
        5238
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "11571": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5220,
        5238
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "11572": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5220,
        5238
      ],
      "op": "DUP2",
      "path": "6"
    },
    "11573": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5220,
        5238
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "11574": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5220,
        5238
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "11576": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5220,
        5238
      ],
      "op": "DUP1",
      "path": "6"
    },
    "11577": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5220,
        5238
      ],
      "op": "DUP4",
      "path": "6"
    },
    "11578": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5220,
        5238
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "11579": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5220,
        5254
      ],
      "op": "DUP6",
      "path": "6"
    },
    "11580": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5220,
        5254
      ],
      "op": "DUP5",
      "path": "6"
    },
    "11581": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5220,
        5254
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "11582": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5220,
        5254
      ],
      "op": "DUP3",
      "path": "6"
    },
    "11583": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5220,
        5254
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "11584": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5220,
        5254
      ],
      "op": "DUP1",
      "path": "6"
    },
    "11585": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5220,
        5254
      ],
      "op": "DUP4",
      "path": "6"
    },
    "11586": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5220,
        5254
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "11587": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5220,
        5254
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "11588": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5269,
        5299
      ],
      "op": "DUP5",
      "path": "6",
      "statement": 141
    },
    "11589": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5269,
        5299
      ],
      "op": "DUP5",
      "path": "6"
    },
    "11590": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5269,
        5299
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "11591": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5269,
        5299
      ],
      "op": "DUP2",
      "path": "6"
    },
    "11592": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5269,
        5299
      ],
      "op": "DUP5",
      "path": "6"
    },
    "11593": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5269,
        5299
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "11594": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5269,
        5313
      ],
      "op": "DUP2",
      "path": "6"
    },
    "11595": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5269,
        5313
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "11596": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5269,
        5313
      ],
      "op": "SSTORE",
      "path": "6"
    },
    "11597": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5385,
        5415
      ],
      "op": "DUP4",
      "path": "6",
      "statement": 142
    },
    "11598": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5385,
        5415
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "11599": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5385,
        5402
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x7"
    },
    "11601": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5385,
        5415
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "11602": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5385,
        5415
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "11603": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5385,
        5415
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "11604": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5385,
        5415
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "11605": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5385,
        5415
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "11606": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5385,
        5428
      ],
      "op": "DUP2",
      "path": "6"
    },
    "11607": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5385,
        5428
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "11608": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5385,
        5428
      ],
      "op": "SSTORE",
      "path": "6"
    },
    "11609": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5150,
        5473
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "11610": {
      "op": "POP"
    },
    "11611": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5566,
        5592
      ],
      "op": "PUSH1",
      "path": "6",
      "statement": 143,
      "value": "0x0"
    },
    "11613": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5566,
        5592
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "11614": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5566,
        5592
      ],
      "op": "DUP3",
      "path": "6"
    },
    "11615": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5566,
        5592
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "11616": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5566,
        5583
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x7"
    },
    "11618": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5566,
        5592
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "11620": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5566,
        5592
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "11621": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5566,
        5592
      ],
      "op": "DUP2",
      "path": "6"
    },
    "11622": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5566,
        5592
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "11623": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5566,
        5592
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "11625": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5566,
        5592
      ],
      "op": "DUP1",
      "path": "6"
    },
    "11626": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5566,
        5592
      ],
      "op": "DUP5",
      "path": "6"
    },
    "11627": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5566,
        5592
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "11628": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5559,
        5592
      ],
      "op": "DUP5",
      "path": "6"
    },
    "11629": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5559,
        5592
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "11630": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5559,
        5592
      ],
      "op": "SSTORE",
      "path": "6"
    },
    "11631": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11633": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11635": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "11637": {
      "op": "SHL"
    },
    "11638": {
      "op": "SUB"
    },
    "11639": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5609,
        5627
      ],
      "op": "SWAP1",
      "path": "6",
      "statement": 144
    },
    "11640": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5609,
        5627
      ],
      "op": "SWAP5",
      "path": "6"
    },
    "11641": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5609,
        5627
      ],
      "op": "AND",
      "path": "6"
    },
    "11642": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5609,
        5627
      ],
      "op": "DUP4",
      "path": "6"
    },
    "11643": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5609,
        5627
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "11644": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5609,
        5621
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x6"
    },
    "11646": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5609,
        5627
      ],
      "op": "DUP2",
      "path": "6"
    },
    "11647": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5609,
        5627
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "11648": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5609,
        5627
      ],
      "op": "DUP4",
      "path": "6"
    },
    "11649": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5609,
        5627
      ],
      "op": "DUP4",
      "path": "6"
    },
    "11650": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5609,
        5627
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "11651": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5609,
        5643
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "11652": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5609,
        5643
      ],
      "op": "DUP4",
      "path": "6"
    },
    "11653": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5609,
        5643
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "11654": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5609,
        5643
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "11655": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5609,
        5643
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "11656": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5609,
        5643
      ],
      "op": "DUP2",
      "path": "6"
    },
    "11657": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5609,
        5643
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "11658": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5602,
        5643
      ],
      "op": "SSTORE",
      "path": "6"
    },
    "11659": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "jump": "o",
      "offset": [
        4680,
        5650
      ],
      "op": "JUMP",
      "path": "6"
    },
    "11660": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        5938,
        6999
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "11661": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6212,
        6222
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x8"
    },
    "11663": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6212,
        6229
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "11664": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6187,
        6209
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "11666": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6187,
        6209
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "11667": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6212,
        6233
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x2D9E"
    },
    "11670": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6212,
        6233
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "11671": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6232,
        6233
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x1"
    },
    "11673": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6232,
        6233
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "11674": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6212,
        6233
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x3419"
    },
    "11677": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "jump": "i",
      "offset": [
        6212,
        6233
      ],
      "op": "JUMP",
      "path": "6"
    },
    "11678": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6212,
        6233
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "11679": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6243,
        6261
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "11681": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6264,
        6288
      ],
      "op": "DUP4",
      "path": "6"
    },
    "11682": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6264,
        6288
      ],
      "op": "DUP2",
      "path": "6"
    },
    "11683": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6264,
        6288
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "11684": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6264,
        6279
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x9"
    },
    "11686": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6264,
        6288
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "11688": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6264,
        6288
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "11689": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6264,
        6288
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "11691": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6264,
        6288
      ],
      "op": "DUP2",
      "path": "6"
    },
    "11692": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6264,
        6288
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "11693": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6264,
        6288
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "11694": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6632,
        6642
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x8"
    },
    "11696": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6632,
        6658
      ],
      "op": "DUP1",
      "path": "6"
    },
    "11697": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6632,
        6658
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "11698": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6187,
        6233
      ],
      "op": "SWAP4",
      "path": "6"
    },
    "11699": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6187,
        6233
      ],
      "op": "SWAP5",
      "path": "6"
    },
    "11700": {
      "op": "POP"
    },
    "11701": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6264,
        6288
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "11702": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6264,
        6288
      ],
      "op": "SWAP3",
      "path": "6"
    },
    "11703": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6187,
        6233
      ],
      "op": "DUP5",
      "path": "6"
    },
    "11704": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6187,
        6233
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "11705": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6632,
        6658
      ],
      "op": "DUP2",
      "path": "6"
    },
    "11706": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6632,
        6658
      ],
      "op": "LT",
      "path": "6"
    },
    "11707": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6632,
        6658
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x2DC6"
    },
    "11710": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6632,
        6658
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "11711": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6632,
        6658
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x2DC6"
    },
    "11714": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6632,
        6658
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x34E2"
    },
    "11717": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "jump": "i",
      "offset": [
        6632,
        6658
      ],
      "op": "JUMP",
      "path": "6"
    },
    "11718": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6632,
        6658
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "11719": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6632,
        6658
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "11720": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6632,
        6658
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "11722": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6632,
        6658
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "11723": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6632,
        6658
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "11725": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6632,
        6658
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "11727": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6632,
        6658
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "11728": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6632,
        6658
      ],
      "op": "ADD",
      "path": "6"
    },
    "11729": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6632,
        6658
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "11730": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6610,
        6658
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "11731": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6610,
        6658
      ],
      "op": "POP",
      "path": "6"
    },
    "11732": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6694,
        6705
      ],
      "op": "DUP1",
      "path": "6",
      "statement": 145
    },
    "11733": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6669,
        6679
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x8"
    },
    "11735": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6680,
        6690
      ],
      "op": "DUP4",
      "path": "6"
    },
    "11736": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6669,
        6691
      ],
      "op": "DUP2",
      "path": "6"
    },
    "11737": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6669,
        6691
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "11738": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6669,
        6691
      ],
      "op": "DUP2",
      "path": "6"
    },
    "11739": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6669,
        6691
      ],
      "op": "LT",
      "path": "6"
    },
    "11740": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6669,
        6691
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x2DE7"
    },
    "11743": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6669,
        6691
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "11744": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6669,
        6691
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x2DE7"
    },
    "11747": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6669,
        6691
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x34E2"
    },
    "11750": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "jump": "i",
      "offset": [
        6669,
        6691
      ],
      "op": "JUMP",
      "path": "6"
    },
    "11751": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6669,
        6691
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "11752": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6669,
        6691
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "11754": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6669,
        6691
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "11755": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6669,
        6691
      ],
      "op": "DUP3",
      "path": "6"
    },
    "11756": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6669,
        6691
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "11757": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6669,
        6691
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "11759": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6669,
        6691
      ],
      "op": "DUP1",
      "path": "6"
    },
    "11760": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6669,
        6691
      ],
      "op": "DUP4",
      "path": "6"
    },
    "11761": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6669,
        6691
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "11762": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6669,
        6691
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "11763": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6669,
        6691
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "11764": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6669,
        6691
      ],
      "op": "ADD",
      "path": "6"
    },
    "11765": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6669,
        6705
      ],
      "op": "SWAP3",
      "path": "6"
    },
    "11766": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6669,
        6705
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "11767": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6669,
        6705
      ],
      "op": "SWAP3",
      "path": "6"
    },
    "11768": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6669,
        6705
      ],
      "op": "SSTORE",
      "path": "6"
    },
    "11769": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6773,
        6801
      ],
      "op": "DUP3",
      "path": "6",
      "statement": 146
    },
    "11770": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6773,
        6801
      ],
      "op": "DUP2",
      "path": "6"
    },
    "11771": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6773,
        6801
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "11772": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6773,
        6788
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x9"
    },
    "11774": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6773,
        6801
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "11775": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6773,
        6801
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "11776": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6773,
        6801
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "11777": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6773,
        6801
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "11779": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6773,
        6801
      ],
      "op": "DUP1",
      "path": "6"
    },
    "11780": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6773,
        6801
      ],
      "op": "DUP3",
      "path": "6"
    },
    "11781": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6773,
        6801
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "11782": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6773,
        6814
      ],
      "op": "DUP5",
      "path": "6"
    },
    "11783": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6773,
        6814
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "11784": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6773,
        6814
      ],
      "op": "SSTORE",
      "path": "6"
    },
    "11785": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6942,
        6966
      ],
      "op": "DUP6",
      "path": "6",
      "statement": 147
    },
    "11786": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6942,
        6966
      ],
      "op": "DUP3",
      "path": "6"
    },
    "11787": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6942,
        6966
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "11788": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6942,
        6966
      ],
      "op": "DUP2",
      "path": "6"
    },
    "11789": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6942,
        6966
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "11790": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6935,
        6966
      ],
      "op": "SSTORE",
      "path": "6"
    },
    "11791": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6976,
        6986
      ],
      "op": "PUSH1",
      "path": "6",
      "statement": 148,
      "value": "0x8"
    },
    "11793": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6976,
        6992
      ],
      "op": "DUP1",
      "path": "6"
    },
    "11794": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6976,
        6992
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "11795": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6976,
        6992
      ],
      "op": "DUP1",
      "path": "6"
    },
    "11796": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6976,
        6992
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x2E1F"
    },
    "11799": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6976,
        6992
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "11800": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6976,
        6992
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x2E1F"
    },
    "11803": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6976,
        6992
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x36CA"
    },
    "11806": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "jump": "i",
      "offset": [
        6976,
        6992
      ],
      "op": "JUMP",
      "path": "6"
    },
    "11807": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6976,
        6992
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "11808": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6976,
        6992
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x1"
    },
    "11810": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6976,
        6992
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "11811": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6976,
        6992
      ],
      "op": "SUB",
      "path": "6"
    },
    "11812": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6976,
        6992
      ],
      "op": "DUP2",
      "path": "6"
    },
    "11813": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6976,
        6992
      ],
      "op": "DUP2",
      "path": "6"
    },
    "11814": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6976,
        6992
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "11815": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6976,
        6992
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "11817": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6976,
        6992
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "11818": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6976,
        6992
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "11820": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6976,
        6992
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "11822": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6976,
        6992
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "11823": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6976,
        6992
      ],
      "op": "ADD",
      "path": "6"
    },
    "11824": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6976,
        6992
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "11826": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6976,
        6992
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "11827": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6976,
        6992
      ],
      "op": "SSTORE",
      "path": "6"
    },
    "11828": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6976,
        6992
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "11829": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6976,
        6992
      ],
      "op": "SSTORE",
      "path": "6"
    },
    "11830": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6009,
        6999
      ],
      "op": "POP",
      "path": "6"
    },
    "11831": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6009,
        6999
      ],
      "op": "POP",
      "path": "6"
    },
    "11832": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6009,
        6999
      ],
      "op": "POP",
      "path": "6"
    },
    "11833": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        5938,
        6999
      ],
      "op": "POP",
      "path": "6"
    },
    "11834": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "jump": "o",
      "offset": [
        5938,
        6999
      ],
      "op": "JUMP",
      "path": "6"
    },
    "11835": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3490,
        3707
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "11836": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3574,
        3588
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "11838": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3591,
        3611
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x2E46"
    },
    "11841": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3608,
        3610
      ],
      "op": "DUP4",
      "path": "6"
    },
    "11842": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3591,
        3607
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1633"
    },
    "11845": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "jump": "i",
      "offset": [
        3591,
        3611
      ],
      "op": "JUMP",
      "path": "6"
    },
    "11846": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3591,
        3611
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "11847": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11849": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11851": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "11853": {
      "op": "SHL"
    },
    "11854": {
      "op": "SUB"
    },
    "11855": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3621,
        3637
      ],
      "op": "SWAP1",
      "path": "6",
      "statement": 149
    },
    "11856": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3621,
        3637
      ],
      "op": "SWAP4",
      "path": "6"
    },
    "11857": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3621,
        3637
      ],
      "op": "AND",
      "path": "6"
    },
    "11858": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3621,
        3637
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "11860": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3621,
        3637
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "11861": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3621,
        3637
      ],
      "op": "DUP2",
      "path": "6"
    },
    "11862": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3621,
        3637
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "11863": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3621,
        3633
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x6"
    },
    "11865": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3621,
        3637
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "11867": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3621,
        3637
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "11868": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3621,
        3637
      ],
      "op": "DUP2",
      "path": "6"
    },
    "11869": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3621,
        3637
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "11870": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3621,
        3637
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "11872": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3621,
        3637
      ],
      "op": "DUP1",
      "path": "6"
    },
    "11873": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3621,
        3637
      ],
      "op": "DUP4",
      "path": "6"
    },
    "11874": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3621,
        3637
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "11875": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3621,
        3645
      ],
      "op": "DUP7",
      "path": "6"
    },
    "11876": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3621,
        3645
      ],
      "op": "DUP5",
      "path": "6"
    },
    "11877": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3621,
        3645
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "11878": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3621,
        3645
      ],
      "op": "DUP3",
      "path": "6"
    },
    "11879": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3621,
        3645
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "11880": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3621,
        3645
      ],
      "op": "DUP1",
      "path": "6"
    },
    "11881": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3621,
        3645
      ],
      "op": "DUP4",
      "path": "6"
    },
    "11882": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3621,
        3645
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "11883": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3621,
        3655
      ],
      "op": "DUP6",
      "path": "6"
    },
    "11884": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3621,
        3655
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "11885": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3621,
        3655
      ],
      "op": "SSTORE",
      "path": "6"
    },
    "11886": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3665,
        3691
      ],
      "op": "SWAP4",
      "path": "6",
      "statement": 150
    },
    "11887": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3665,
        3691
      ],
      "op": "DUP3",
      "path": "6"
    },
    "11888": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3665,
        3691
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "11889": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3665,
        3682
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x7"
    },
    "11891": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3665,
        3691
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "11892": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3665,
        3691
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "11893": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3665,
        3691
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "11894": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3665,
        3691
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "11895": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3665,
        3691
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "11896": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3665,
        3691
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "11897": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3665,
        3700
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "11898": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3665,
        3700
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "11899": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3665,
        3700
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "11900": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3665,
        3700
      ],
      "op": "SSTORE",
      "path": "6"
    },
    "11901": {
      "op": "POP"
    },
    "11902": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "jump": "o",
      "offset": [
        3490,
        3707
      ],
      "op": "JUMP",
      "path": "6"
    },
    "11903": {
      "op": "JUMPDEST"
    },
    "11904": {
      "op": "DUP3"
    },
    "11905": {
      "op": "DUP1"
    },
    "11906": {
      "op": "SLOAD"
    },
    "11907": {
      "op": "PUSH2",
      "value": "0x2E8B"
    },
    "11910": {
      "op": "SWAP1"
    },
    "11911": {
      "op": "PUSH2",
      "value": "0x3393"
    },
    "11914": {
      "jump": "i",
      "op": "JUMP"
    },
    "11915": {
      "op": "JUMPDEST"
    },
    "11916": {
      "op": "SWAP1"
    },
    "11917": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11919": {
      "op": "MSTORE"
    },
    "11920": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "11922": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11924": {
      "op": "KECCAK256"
    },
    "11925": {
      "op": "SWAP1"
    },
    "11926": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "11928": {
      "op": "ADD"
    },
    "11929": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "11931": {
      "op": "SWAP1"
    },
    "11932": {
      "op": "DIV"
    },
    "11933": {
      "op": "DUP2"
    },
    "11934": {
      "op": "ADD"
    },
    "11935": {
      "op": "SWAP3"
    },
    "11936": {
      "op": "DUP3"
    },
    "11937": {
      "op": "PUSH2",
      "value": "0x2EAD"
    },
    "11940": {
      "op": "JUMPI"
    },
    "11941": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11943": {
      "op": "DUP6"
    },
    "11944": {
      "op": "SSTORE"
    },
    "11945": {
      "op": "PUSH2",
      "value": "0x2EF3"
    },
    "11948": {
      "op": "JUMP"
    },
    "11949": {
      "op": "JUMPDEST"
    },
    "11950": {
      "op": "DUP3"
    },
    "11951": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "11953": {
      "op": "LT"
    },
    "11954": {
      "op": "PUSH2",
      "value": "0x2EC6"
    },
    "11957": {
      "op": "JUMPI"
    },
    "11958": {
      "op": "DUP1"
    },
    "11959": {
      "op": "MLOAD"
    },
    "11960": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "11962": {
      "op": "NOT"
    },
    "11963": {
      "op": "AND"
    },
    "11964": {
      "op": "DUP4"
    },
    "11965": {
      "op": "DUP1"
    },
    "11966": {
      "op": "ADD"
    },
    "11967": {
      "op": "OR"
    },
    "11968": {
      "op": "DUP6"
    },
    "11969": {
      "op": "SSTORE"
    },
    "11970": {
      "op": "PUSH2",
      "value": "0x2EF3"
    },
    "11973": {
      "op": "JUMP"
    },
    "11974": {
      "op": "JUMPDEST"
    },
    "11975": {
      "op": "DUP3"
    },
    "11976": {
      "op": "DUP1"
    },
    "11977": {
      "op": "ADD"
    },
    "11978": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11980": {
      "op": "ADD"
    },
    "11981": {
      "op": "DUP6"
    },
    "11982": {
      "op": "SSTORE"
    },
    "11983": {
      "op": "DUP3"
    },
    "11984": {
      "op": "ISZERO"
    },
    "11985": {
      "op": "PUSH2",
      "value": "0x2EF3"
    },
    "11988": {
      "op": "JUMPI"
    },
    "11989": {
      "op": "SWAP2"
    },
    "11990": {
      "op": "DUP3"
    },
    "11991": {
      "op": "ADD"
    },
    "11992": {
      "op": "JUMPDEST"
    },
    "11993": {
      "op": "DUP3"
    },
    "11994": {
      "op": "DUP2"
    },
    "11995": {
      "op": "GT"
    },
    "11996": {
      "op": "ISZERO"
    },
    "11997": {
      "op": "PUSH2",
      "value": "0x2EF3"
    },
    "12000": {
      "op": "JUMPI"
    },
    "12001": {
      "op": "DUP3"
    },
    "12002": {
      "op": "MLOAD"
    },
    "12003": {
      "op": "DUP3"
    },
    "12004": {
      "op": "SSTORE"
    },
    "12005": {
      "op": "SWAP2"
    },
    "12006": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "12008": {
      "op": "ADD"
    },
    "12009": {
      "op": "SWAP2"
    },
    "12010": {
      "op": "SWAP1"
    },
    "12011": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12013": {
      "op": "ADD"
    },
    "12014": {
      "op": "SWAP1"
    },
    "12015": {
      "op": "PUSH2",
      "value": "0x2ED8"
    },
    "12018": {
      "op": "JUMP"
    },
    "12019": {
      "op": "JUMPDEST"
    },
    "12020": {
      "op": "POP"
    },
    "12021": {
      "op": "PUSH2",
      "value": "0x2EFF"
    },
    "12024": {
      "op": "SWAP3"
    },
    "12025": {
      "op": "SWAP2"
    },
    "12026": {
      "op": "POP"
    },
    "12027": {
      "op": "PUSH2",
      "value": "0x2F03"
    },
    "12030": {
      "jump": "i",
      "op": "JUMP"
    },
    "12031": {
      "op": "JUMPDEST"
    },
    "12032": {
      "op": "POP"
    },
    "12033": {
      "op": "SWAP1"
    },
    "12034": {
      "jump": "o",
      "op": "JUMP"
    },
    "12035": {
      "op": "JUMPDEST"
    },
    "12036": {
      "op": "JUMPDEST"
    },
    "12037": {
      "op": "DUP1"
    },
    "12038": {
      "op": "DUP3"
    },
    "12039": {
      "op": "GT"
    },
    "12040": {
      "op": "ISZERO"
    },
    "12041": {
      "op": "PUSH2",
      "value": "0x2EFF"
    },
    "12044": {
      "op": "JUMPI"
    },
    "12045": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12047": {
      "op": "DUP2"
    },
    "12048": {
      "op": "SSTORE"
    },
    "12049": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12051": {
      "op": "ADD"
    },
    "12052": {
      "op": "PUSH2",
      "value": "0x2F04"
    },
    "12055": {
      "op": "JUMP"
    },
    "12056": {
      "op": "JUMPDEST"
    },
    "12057": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12059": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12061": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "12063": {
      "op": "SHL"
    },
    "12064": {
      "op": "SUB"
    },
    "12065": {
      "op": "NOT"
    },
    "12066": {
      "op": "DUP2"
    },
    "12067": {
      "op": "AND"
    },
    "12068": {
      "op": "DUP2"
    },
    "12069": {
      "op": "EQ"
    },
    "12070": {
      "op": "PUSH2",
      "value": "0x12BE"
    },
    "12073": {
      "op": "JUMPI"
    },
    "12074": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12076": {
      "op": "DUP1"
    },
    "12077": {
      "op": "REVERT"
    },
    "12078": {
      "op": "JUMPDEST"
    },
    "12079": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12081": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "12083": {
      "op": "DUP3"
    },
    "12084": {
      "op": "DUP5"
    },
    "12085": {
      "op": "SUB"
    },
    "12086": {
      "op": "SLT"
    },
    "12087": {
      "op": "ISZERO"
    },
    "12088": {
      "op": "PUSH2",
      "value": "0x2F40"
    },
    "12091": {
      "op": "JUMPI"
    },
    "12092": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12094": {
      "op": "DUP1"
    },
    "12095": {
      "op": "REVERT"
    },
    "12096": {
      "op": "JUMPDEST"
    },
    "12097": {
      "op": "DUP2"
    },
    "12098": {
      "op": "CALLDATALOAD"
    },
    "12099": {
      "op": "PUSH2",
      "value": "0x2F4B"
    },
    "12102": {
      "op": "DUP2"
    },
    "12103": {
      "op": "PUSH2",
      "value": "0x2F18"
    },
    "12106": {
      "jump": "i",
      "op": "JUMP"
    },
    "12107": {
      "op": "JUMPDEST"
    },
    "12108": {
      "op": "SWAP4"
    },
    "12109": {
      "op": "SWAP3"
    },
    "12110": {
      "op": "POP"
    },
    "12111": {
      "op": "POP"
    },
    "12112": {
      "op": "POP"
    },
    "12113": {
      "jump": "o",
      "op": "JUMP"
    },
    "12114": {
      "op": "JUMPDEST"
    },
    "12115": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12117": {
      "op": "JUMPDEST"
    },
    "12118": {
      "op": "DUP4"
    },
    "12119": {
      "op": "DUP2"
    },
    "12120": {
      "op": "LT"
    },
    "12121": {
      "op": "ISZERO"
    },
    "12122": {
      "op": "PUSH2",
      "value": "0x2F6D"
    },
    "12125": {
      "op": "JUMPI"
    },
    "12126": {
      "op": "DUP2"
    },
    "12127": {
      "op": "DUP2"
    },
    "12128": {
      "op": "ADD"
    },
    "12129": {
      "op": "MLOAD"
    },
    "12130": {
      "op": "DUP4"
    },
    "12131": {
      "op": "DUP3"
    },
    "12132": {
      "op": "ADD"
    },
    "12133": {
      "op": "MSTORE"
    },
    "12134": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "12136": {
      "op": "ADD"
    },
    "12137": {
      "op": "PUSH2",
      "value": "0x2F55"
    },
    "12140": {
      "op": "JUMP"
    },
    "12141": {
      "op": "JUMPDEST"
    },
    "12142": {
      "op": "DUP4"
    },
    "12143": {
      "op": "DUP2"
    },
    "12144": {
      "op": "GT"
    },
    "12145": {
      "op": "ISZERO"
    },
    "12146": {
      "op": "PUSH2",
      "value": "0x1D8C"
    },
    "12149": {
      "op": "JUMPI"
    },
    "12150": {
      "op": "POP"
    },
    "12151": {
      "op": "POP"
    },
    "12152": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12154": {
      "op": "SWAP2"
    },
    "12155": {
      "op": "ADD"
    },
    "12156": {
      "op": "MSTORE"
    },
    "12157": {
      "jump": "o",
      "op": "JUMP"
    },
    "12158": {
      "op": "JUMPDEST"
    },
    "12159": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12161": {
      "op": "DUP2"
    },
    "12162": {
      "op": "MLOAD"
    },
    "12163": {
      "op": "DUP1"
    },
    "12164": {
      "op": "DUP5"
    },
    "12165": {
      "op": "MSTORE"
    },
    "12166": {
      "op": "PUSH2",
      "value": "0x2F96"
    },
    "12169": {
      "op": "DUP2"
    },
    "12170": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "12172": {
      "op": "DUP7"
    },
    "12173": {
      "op": "ADD"
    },
    "12174": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "12176": {
      "op": "DUP7"
    },
    "12177": {
      "op": "ADD"
    },
    "12178": {
      "op": "PUSH2",
      "value": "0x2F52"
    },
    "12181": {
      "jump": "i",
      "op": "JUMP"
    },
    "12182": {
      "op": "JUMPDEST"
    },
    "12183": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "12185": {
      "op": "ADD"
    },
    "12186": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "12188": {
      "op": "NOT"
    },
    "12189": {
      "op": "AND"
    },
    "12190": {
      "op": "SWAP3"
    },
    "12191": {
      "op": "SWAP1"
    },
    "12192": {
      "op": "SWAP3"
    },
    "12193": {
      "op": "ADD"
    },
    "12194": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "12196": {
      "op": "ADD"
    },
    "12197": {
      "op": "SWAP3"
    },
    "12198": {
      "op": "SWAP2"
    },
    "12199": {
      "op": "POP"
    },
    "12200": {
      "op": "POP"
    },
    "12201": {
      "jump": "o",
      "op": "JUMP"
    },
    "12202": {
      "op": "JUMPDEST"
    },
    "12203": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "12205": {
      "op": "DUP2"
    },
    "12206": {
      "op": "MSTORE"
    },
    "12207": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12209": {
      "op": "PUSH2",
      "value": "0x2F4B"
    },
    "12212": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "12214": {
      "op": "DUP4"
    },
    "12215": {
      "op": "ADD"
    },
    "12216": {
      "op": "DUP5"
    },
    "12217": {
      "op": "PUSH2",
      "value": "0x2F7E"
    },
    "12220": {
      "jump": "i",
      "op": "JUMP"
    },
    "12221": {
      "op": "JUMPDEST"
    },
    "12222": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12224": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "12226": {
      "op": "DUP3"
    },
    "12227": {
      "op": "DUP5"
    },
    "12228": {
      "op": "SUB"
    },
    "12229": {
      "op": "SLT"
    },
    "12230": {
      "op": "ISZERO"
    },
    "12231": {
      "op": "PUSH2",
      "value": "0x2FCF"
    },
    "12234": {
      "op": "JUMPI"
    },
    "12235": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12237": {
      "op": "DUP1"
    },
    "12238": {
      "op": "REVERT"
    },
    "12239": {
      "op": "JUMPDEST"
    },
    "12240": {
      "op": "POP"
    },
    "12241": {
      "op": "CALLDATALOAD"
    },
    "12242": {
      "op": "SWAP2"
    },
    "12243": {
      "op": "SWAP1"
    },
    "12244": {
      "op": "POP"
    },
    "12245": {
      "jump": "o",
      "op": "JUMP"
    },
    "12246": {
      "op": "JUMPDEST"
    },
    "12247": {
      "op": "DUP1"
    },
    "12248": {
      "op": "CALLDATALOAD"
    },
    "12249": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12251": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12253": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "12255": {
      "op": "SHL"
    },
    "12256": {
      "op": "SUB"
    },
    "12257": {
      "op": "DUP2"
    },
    "12258": {
      "op": "AND"
    },
    "12259": {
      "op": "DUP2"
    },
    "12260": {
      "op": "EQ"
    },
    "12261": {
      "op": "PUSH2",
      "value": "0x2FED"
    },
    "12264": {
      "op": "JUMPI"
    },
    "12265": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12267": {
      "op": "DUP1"
    },
    "12268": {
      "op": "REVERT"
    },
    "12269": {
      "op": "JUMPDEST"
    },
    "12270": {
      "op": "SWAP2"
    },
    "12271": {
      "op": "SWAP1"
    },
    "12272": {
      "op": "POP"
    },
    "12273": {
      "jump": "o",
      "op": "JUMP"
    },
    "12274": {
      "op": "JUMPDEST"
    },
    "12275": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12277": {
      "op": "DUP1"
    },
    "12278": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "12280": {
      "op": "DUP4"
    },
    "12281": {
      "op": "DUP6"
    },
    "12282": {
      "op": "SUB"
    },
    "12283": {
      "op": "SLT"
    },
    "12284": {
      "op": "ISZERO"
    },
    "12285": {
      "op": "PUSH2",
      "value": "0x3005"
    },
    "12288": {
      "op": "JUMPI"
    },
    "12289": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12291": {
      "op": "DUP1"
    },
    "12292": {
      "op": "REVERT"
    },
    "12293": {
      "op": "JUMPDEST"
    },
    "12294": {
      "op": "PUSH2",
      "value": "0x300E"
    },
    "12297": {
      "op": "DUP4"
    },
    "12298": {
      "op": "PUSH2",
      "value": "0x2FD6"
    },
    "12301": {
      "jump": "i",
      "op": "JUMP"
    },
    "12302": {
      "op": "JUMPDEST"
    },
    "12303": {
      "op": "SWAP5"
    },
    "12304": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "12306": {
      "op": "SWAP4"
    },
    "12307": {
      "op": "SWAP1"
    },
    "12308": {
      "op": "SWAP4"
    },
    "12309": {
      "op": "ADD"
    },
    "12310": {
      "op": "CALLDATALOAD"
    },
    "12311": {
      "op": "SWAP4"
    },
    "12312": {
      "op": "POP"
    },
    "12313": {
      "op": "POP"
    },
    "12314": {
      "op": "POP"
    },
    "12315": {
      "jump": "o",
      "op": "JUMP"
    },
    "12316": {
      "op": "JUMPDEST"
    },
    "12317": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "12322": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "12324": {
      "op": "SHL"
    },
    "12325": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12327": {
      "op": "MSTORE"
    },
    "12328": {
      "op": "PUSH1",
      "value": "0x41"
    },
    "12330": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "12332": {
      "op": "MSTORE"
    },
    "12333": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "12335": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12337": {
      "op": "REVERT"
    },
    "12338": {
      "op": "JUMPDEST"
    },
    "12339": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12341": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "12350": {
      "op": "DUP1"
    },
    "12351": {
      "op": "DUP5"
    },
    "12352": {
      "op": "GT"
    },
    "12353": {
      "op": "ISZERO"
    },
    "12354": {
      "op": "PUSH2",
      "value": "0x304D"
    },
    "12357": {
      "op": "JUMPI"
    },
    "12358": {
      "op": "PUSH2",
      "value": "0x304D"
    },
    "12361": {
      "op": "PUSH2",
      "value": "0x301C"
    },
    "12364": {
      "jump": "i",
      "op": "JUMP"
    },
    "12365": {
      "op": "JUMPDEST"
    },
    "12366": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "12368": {
      "op": "MLOAD"
    },
    "12369": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "12371": {
      "op": "DUP6"
    },
    "12372": {
      "op": "ADD"
    },
    "12373": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "12375": {
      "op": "NOT"
    },
    "12376": {
      "op": "SWAP1"
    },
    "12377": {
      "op": "DUP2"
    },
    "12378": {
      "op": "AND"
    },
    "12379": {
      "op": "PUSH1",
      "value": "0x3F"
    },
    "12381": {
      "op": "ADD"
    },
    "12382": {
      "op": "AND"
    },
    "12383": {
      "op": "DUP2"
    },
    "12384": {
      "op": "ADD"
    },
    "12385": {
      "op": "SWAP1"
    },
    "12386": {
      "op": "DUP3"
    },
    "12387": {
      "op": "DUP3"
    },
    "12388": {
      "op": "GT"
    },
    "12389": {
      "op": "DUP2"
    },
    "12390": {
      "op": "DUP4"
    },
    "12391": {
      "op": "LT"
    },
    "12392": {
      "op": "OR"
    },
    "12393": {
      "op": "ISZERO"
    },
    "12394": {
      "op": "PUSH2",
      "value": "0x3075"
    },
    "12397": {
      "op": "JUMPI"
    },
    "12398": {
      "op": "PUSH2",
      "value": "0x3075"
    },
    "12401": {
      "op": "PUSH2",
      "value": "0x301C"
    },
    "12404": {
      "jump": "i",
      "op": "JUMP"
    },
    "12405": {
      "op": "JUMPDEST"
    },
    "12406": {
      "op": "DUP2"
    },
    "12407": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "12409": {
      "op": "MSTORE"
    },
    "12410": {
      "op": "DUP1"
    },
    "12411": {
      "op": "SWAP4"
    },
    "12412": {
      "op": "POP"
    },
    "12413": {
      "op": "DUP6"
    },
    "12414": {
      "op": "DUP2"
    },
    "12415": {
      "op": "MSTORE"
    },
    "12416": {
      "op": "DUP7"
    },
    "12417": {
      "op": "DUP7"
    },
    "12418": {
      "op": "DUP7"
    },
    "12419": {
      "op": "ADD"
    },
    "12420": {
      "op": "GT"
    },
    "12421": {
      "op": "ISZERO"
    },
    "12422": {
      "op": "PUSH2",
      "value": "0x308E"
    },
    "12425": {
      "op": "JUMPI"
    },
    "12426": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12428": {
      "op": "DUP1"
    },
    "12429": {
      "op": "REVERT"
    },
    "12430": {
      "op": "JUMPDEST"
    },
    "12431": {
      "op": "DUP6"
    },
    "12432": {
      "op": "DUP6"
    },
    "12433": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "12435": {
      "op": "DUP4"
    },
    "12436": {
      "op": "ADD"
    },
    "12437": {
      "op": "CALLDATACOPY"
    },
    "12438": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12440": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "12442": {
      "op": "DUP8"
    },
    "12443": {
      "op": "DUP4"
    },
    "12444": {
      "op": "ADD"
    },
    "12445": {
      "op": "ADD"
    },
    "12446": {
      "op": "MSTORE"
    },
    "12447": {
      "op": "POP"
    },
    "12448": {
      "op": "POP"
    },
    "12449": {
      "op": "POP"
    },
    "12450": {
      "op": "SWAP4"
    },
    "12451": {
      "op": "SWAP3"
    },
    "12452": {
      "op": "POP"
    },
    "12453": {
      "op": "POP"
    },
    "12454": {
      "op": "POP"
    },
    "12455": {
      "jump": "o",
      "op": "JUMP"
    },
    "12456": {
      "op": "JUMPDEST"
    },
    "12457": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12459": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "12461": {
      "op": "DUP3"
    },
    "12462": {
      "op": "DUP5"
    },
    "12463": {
      "op": "SUB"
    },
    "12464": {
      "op": "SLT"
    },
    "12465": {
      "op": "ISZERO"
    },
    "12466": {
      "op": "PUSH2",
      "value": "0x30BA"
    },
    "12469": {
      "op": "JUMPI"
    },
    "12470": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12472": {
      "op": "DUP1"
    },
    "12473": {
      "op": "REVERT"
    },
    "12474": {
      "op": "JUMPDEST"
    },
    "12475": {
      "op": "DUP2"
    },
    "12476": {
      "op": "CALLDATALOAD"
    },
    "12477": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "12486": {
      "op": "DUP2"
    },
    "12487": {
      "op": "GT"
    },
    "12488": {
      "op": "ISZERO"
    },
    "12489": {
      "op": "PUSH2",
      "value": "0x30D1"
    },
    "12492": {
      "op": "JUMPI"
    },
    "12493": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12495": {
      "op": "DUP1"
    },
    "12496": {
      "op": "REVERT"
    },
    "12497": {
      "op": "JUMPDEST"
    },
    "12498": {
      "op": "DUP3"
    },
    "12499": {
      "op": "ADD"
    },
    "12500": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "12502": {
      "op": "DUP2"
    },
    "12503": {
      "op": "ADD"
    },
    "12504": {
      "op": "DUP5"
    },
    "12505": {
      "op": "SGT"
    },
    "12506": {
      "op": "PUSH2",
      "value": "0x30E2"
    },
    "12509": {
      "op": "JUMPI"
    },
    "12510": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12512": {
      "op": "DUP1"
    },
    "12513": {
      "op": "REVERT"
    },
    "12514": {
      "op": "JUMPDEST"
    },
    "12515": {
      "op": "PUSH2",
      "value": "0x236E"
    },
    "12518": {
      "op": "DUP5"
    },
    "12519": {
      "op": "DUP3"
    },
    "12520": {
      "op": "CALLDATALOAD"
    },
    "12521": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "12523": {
      "op": "DUP5"
    },
    "12524": {
      "op": "ADD"
    },
    "12525": {
      "op": "PUSH2",
      "value": "0x3032"
    },
    "12528": {
      "jump": "i",
      "op": "JUMP"
    },
    "12529": {
      "op": "JUMPDEST"
    },
    "12530": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12532": {
      "op": "DUP1"
    },
    "12533": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12535": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "12537": {
      "op": "DUP5"
    },
    "12538": {
      "op": "DUP7"
    },
    "12539": {
      "op": "SUB"
    },
    "12540": {
      "op": "SLT"
    },
    "12541": {
      "op": "ISZERO"
    },
    "12542": {
      "op": "PUSH2",
      "value": "0x3106"
    },
    "12545": {
      "op": "JUMPI"
    },
    "12546": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12548": {
      "op": "DUP1"
    },
    "12549": {
      "op": "REVERT"
    },
    "12550": {
      "op": "JUMPDEST"
    },
    "12551": {
      "op": "PUSH2",
      "value": "0x310F"
    },
    "12554": {
      "op": "DUP5"
    },
    "12555": {
      "op": "PUSH2",
      "value": "0x2FD6"
    },
    "12558": {
      "jump": "i",
      "op": "JUMP"
    },
    "12559": {
      "op": "JUMPDEST"
    },
    "12560": {
      "op": "SWAP3"
    },
    "12561": {
      "op": "POP"
    },
    "12562": {
      "op": "PUSH2",
      "value": "0x311D"
    },
    "12565": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "12567": {
      "op": "DUP6"
    },
    "12568": {
      "op": "ADD"
    },
    "12569": {
      "op": "PUSH2",
      "value": "0x2FD6"
    },
    "12572": {
      "jump": "i",
      "op": "JUMP"
    },
    "12573": {
      "op": "JUMPDEST"
    },
    "12574": {
      "op": "SWAP2"
    },
    "12575": {
      "op": "POP"
    },
    "12576": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "12578": {
      "op": "DUP5"
    },
    "12579": {
      "op": "ADD"
    },
    "12580": {
      "op": "CALLDATALOAD"
    },
    "12581": {
      "op": "SWAP1"
    },
    "12582": {
      "op": "POP"
    },
    "12583": {
      "op": "SWAP3"
    },
    "12584": {
      "op": "POP"
    },
    "12585": {
      "op": "SWAP3"
    },
    "12586": {
      "op": "POP"
    },
    "12587": {
      "op": "SWAP3"
    },
    "12588": {
      "jump": "o",
      "op": "JUMP"
    },
    "12589": {
      "op": "JUMPDEST"
    },
    "12590": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12592": {
      "op": "DUP1"
    },
    "12593": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "12595": {
      "op": "DUP4"
    },
    "12596": {
      "op": "DUP6"
    },
    "12597": {
      "op": "SUB"
    },
    "12598": {
      "op": "SLT"
    },
    "12599": {
      "op": "ISZERO"
    },
    "12600": {
      "op": "PUSH2",
      "value": "0x3140"
    },
    "12603": {
      "op": "JUMPI"
    },
    "12604": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12606": {
      "op": "DUP1"
    },
    "12607": {
      "op": "REVERT"
    },
    "12608": {
      "op": "JUMPDEST"
    },
    "12609": {
      "op": "DUP3"
    },
    "12610": {
      "op": "CALLDATALOAD"
    },
    "12611": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "12620": {
      "op": "DUP1"
    },
    "12621": {
      "op": "DUP3"
    },
    "12622": {
      "op": "GT"
    },
    "12623": {
      "op": "ISZERO"
    },
    "12624": {
      "op": "PUSH2",
      "value": "0x3158"
    },
    "12627": {
      "op": "JUMPI"
    },
    "12628": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12630": {
      "op": "DUP1"
    },
    "12631": {
      "op": "REVERT"
    },
    "12632": {
      "op": "JUMPDEST"
    },
    "12633": {
      "op": "DUP2"
    },
    "12634": {
      "op": "DUP6"
    },
    "12635": {
      "op": "ADD"
    },
    "12636": {
      "op": "SWAP2"
    },
    "12637": {
      "op": "POP"
    },
    "12638": {
      "op": "DUP6"
    },
    "12639": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "12641": {
      "op": "DUP4"
    },
    "12642": {
      "op": "ADD"
    },
    "12643": {
      "op": "SLT"
    },
    "12644": {
      "op": "PUSH2",
      "value": "0x316C"
    },
    "12647": {
      "op": "JUMPI"
    },
    "12648": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12650": {
      "op": "DUP1"
    },
    "12651": {
      "op": "REVERT"
    },
    "12652": {
      "op": "JUMPDEST"
    },
    "12653": {
      "op": "DUP2"
    },
    "12654": {
      "op": "CALLDATALOAD"
    },
    "12655": {
      "op": "DUP2"
    },
    "12656": {
      "op": "DUP2"
    },
    "12657": {
      "op": "GT"
    },
    "12658": {
      "op": "ISZERO"
    },
    "12659": {
      "op": "PUSH2",
      "value": "0x317B"
    },
    "12662": {
      "op": "JUMPI"
    },
    "12663": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12665": {
      "op": "DUP1"
    },
    "12666": {
      "op": "REVERT"
    },
    "12667": {
      "op": "JUMPDEST"
    },
    "12668": {
      "op": "DUP7"
    },
    "12669": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "12671": {
      "op": "DUP3"
    },
    "12672": {
      "op": "PUSH1",
      "value": "0x5"
    },
    "12674": {
      "op": "SHL"
    },
    "12675": {
      "op": "DUP6"
    },
    "12676": {
      "op": "ADD"
    },
    "12677": {
      "op": "ADD"
    },
    "12678": {
      "op": "GT"
    },
    "12679": {
      "op": "ISZERO"
    },
    "12680": {
      "op": "PUSH2",
      "value": "0x3190"
    },
    "12683": {
      "op": "JUMPI"
    },
    "12684": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12686": {
      "op": "DUP1"
    },
    "12687": {
      "op": "REVERT"
    },
    "12688": {
      "op": "JUMPDEST"
    },
    "12689": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "12691": {
      "op": "SWAP3"
    },
    "12692": {
      "op": "SWAP1"
    },
    "12693": {
      "op": "SWAP3"
    },
    "12694": {
      "op": "ADD"
    },
    "12695": {
      "op": "SWAP7"
    },
    "12696": {
      "op": "SWAP2"
    },
    "12697": {
      "op": "SWAP6"
    },
    "12698": {
      "op": "POP"
    },
    "12699": {
      "op": "SWAP1"
    },
    "12700": {
      "op": "SWAP4"
    },
    "12701": {
      "op": "POP"
    },
    "12702": {
      "op": "POP"
    },
    "12703": {
      "op": "POP"
    },
    "12704": {
      "op": "POP"
    },
    "12705": {
      "jump": "o",
      "op": "JUMP"
    },
    "12706": {
      "op": "JUMPDEST"
    },
    "12707": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12709": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "12711": {
      "op": "DUP3"
    },
    "12712": {
      "op": "DUP5"
    },
    "12713": {
      "op": "SUB"
    },
    "12714": {
      "op": "SLT"
    },
    "12715": {
      "op": "ISZERO"
    },
    "12716": {
      "op": "PUSH2",
      "value": "0x31B4"
    },
    "12719": {
      "op": "JUMPI"
    },
    "12720": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12722": {
      "op": "DUP1"
    },
    "12723": {
      "op": "REVERT"
    },
    "12724": {
      "op": "JUMPDEST"
    },
    "12725": {
      "op": "PUSH2",
      "value": "0x2F4B"
    },
    "12728": {
      "op": "DUP3"
    },
    "12729": {
      "op": "PUSH2",
      "value": "0x2FD6"
    },
    "12732": {
      "jump": "i",
      "op": "JUMP"
    },
    "12733": {
      "op": "JUMPDEST"
    },
    "12734": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "12736": {
      "op": "DUP1"
    },
    "12737": {
      "op": "DUP3"
    },
    "12738": {
      "op": "MSTORE"
    },
    "12739": {
      "op": "DUP3"
    },
    "12740": {
      "op": "MLOAD"
    },
    "12741": {
      "op": "DUP3"
    },
    "12742": {
      "op": "DUP3"
    },
    "12743": {
      "op": "ADD"
    },
    "12744": {
      "op": "DUP2"
    },
    "12745": {
      "op": "SWAP1"
    },
    "12746": {
      "op": "MSTORE"
    },
    "12747": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12749": {
      "op": "SWAP2"
    },
    "12750": {
      "op": "SWAP1"
    },
    "12751": {
      "op": "DUP5"
    },
    "12752": {
      "op": "DUP3"
    },
    "12753": {
      "op": "ADD"
    },
    "12754": {
      "op": "SWAP1"
    },
    "12755": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "12757": {
      "op": "DUP6"
    },
    "12758": {
      "op": "ADD"
    },
    "12759": {
      "op": "SWAP1"
    },
    "12760": {
      "op": "DUP5"
    },
    "12761": {
      "op": "JUMPDEST"
    },
    "12762": {
      "op": "DUP2"
    },
    "12763": {
      "op": "DUP2"
    },
    "12764": {
      "op": "LT"
    },
    "12765": {
      "op": "ISZERO"
    },
    "12766": {
      "op": "PUSH2",
      "value": "0x31F5"
    },
    "12769": {
      "op": "JUMPI"
    },
    "12770": {
      "op": "DUP4"
    },
    "12771": {
      "op": "MLOAD"
    },
    "12772": {
      "op": "DUP4"
    },
    "12773": {
      "op": "MSTORE"
    },
    "12774": {
      "op": "SWAP3"
    },
    "12775": {
      "op": "DUP5"
    },
    "12776": {
      "op": "ADD"
    },
    "12777": {
      "op": "SWAP3"
    },
    "12778": {
      "op": "SWAP2"
    },
    "12779": {
      "op": "DUP5"
    },
    "12780": {
      "op": "ADD"
    },
    "12781": {
      "op": "SWAP2"
    },
    "12782": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12784": {
      "op": "ADD"
    },
    "12785": {
      "op": "PUSH2",
      "value": "0x31D9"
    },
    "12788": {
      "op": "JUMP"
    },
    "12789": {
      "op": "JUMPDEST"
    },
    "12790": {
      "op": "POP"
    },
    "12791": {
      "op": "SWAP1"
    },
    "12792": {
      "op": "SWAP7"
    },
    "12793": {
      "op": "SWAP6"
    },
    "12794": {
      "op": "POP"
    },
    "12795": {
      "op": "POP"
    },
    "12796": {
      "op": "POP"
    },
    "12797": {
      "op": "POP"
    },
    "12798": {
      "op": "POP"
    },
    "12799": {
      "op": "POP"
    },
    "12800": {
      "jump": "o",
      "op": "JUMP"
    },
    "12801": {
      "op": "JUMPDEST"
    },
    "12802": {
      "op": "DUP1"
    },
    "12803": {
      "op": "CALLDATALOAD"
    },
    "12804": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "12806": {
      "op": "DUP2"
    },
    "12807": {
      "op": "AND"
    },
    "12808": {
      "op": "DUP2"
    },
    "12809": {
      "op": "EQ"
    },
    "12810": {
      "op": "PUSH2",
      "value": "0x2FED"
    },
    "12813": {
      "op": "JUMPI"
    },
    "12814": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12816": {
      "op": "DUP1"
    },
    "12817": {
      "op": "REVERT"
    },
    "12818": {
      "op": "JUMPDEST"
    },
    "12819": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12821": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "12823": {
      "op": "DUP3"
    },
    "12824": {
      "op": "DUP5"
    },
    "12825": {
      "op": "SUB"
    },
    "12826": {
      "op": "SLT"
    },
    "12827": {
      "op": "ISZERO"
    },
    "12828": {
      "op": "PUSH2",
      "value": "0x3224"
    },
    "12831": {
      "op": "JUMPI"
    },
    "12832": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12834": {
      "op": "DUP1"
    },
    "12835": {
      "op": "REVERT"
    },
    "12836": {
      "op": "JUMPDEST"
    },
    "12837": {
      "op": "PUSH2",
      "value": "0x2F4B"
    },
    "12840": {
      "op": "DUP3"
    },
    "12841": {
      "op": "PUSH2",
      "value": "0x3201"
    },
    "12844": {
      "jump": "i",
      "op": "JUMP"
    },
    "12845": {
      "op": "JUMPDEST"
    },
    "12846": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12848": {
      "op": "DUP1"
    },
    "12849": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "12851": {
      "op": "DUP4"
    },
    "12852": {
      "op": "DUP6"
    },
    "12853": {
      "op": "SUB"
    },
    "12854": {
      "op": "SLT"
    },
    "12855": {
      "op": "ISZERO"
    },
    "12856": {
      "op": "PUSH2",
      "value": "0x3240"
    },
    "12859": {
      "op": "JUMPI"
    },
    "12860": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12862": {
      "op": "DUP1"
    },
    "12863": {
      "op": "REVERT"
    },
    "12864": {
      "op": "JUMPDEST"
    },
    "12865": {
      "op": "PUSH2",
      "value": "0x3249"
    },
    "12868": {
      "op": "DUP4"
    },
    "12869": {
      "op": "PUSH2",
      "value": "0x2FD6"
    },
    "12872": {
      "jump": "i",
      "op": "JUMP"
    },
    "12873": {
      "op": "JUMPDEST"
    },
    "12874": {
      "op": "SWAP2"
    },
    "12875": {
      "op": "POP"
    },
    "12876": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "12878": {
      "op": "DUP4"
    },
    "12879": {
      "op": "ADD"
    },
    "12880": {
      "op": "CALLDATALOAD"
    },
    "12881": {
      "op": "DUP1"
    },
    "12882": {
      "op": "ISZERO"
    },
    "12883": {
      "op": "ISZERO"
    },
    "12884": {
      "op": "DUP2"
    },
    "12885": {
      "op": "EQ"
    },
    "12886": {
      "op": "PUSH2",
      "value": "0x325E"
    },
    "12889": {
      "op": "JUMPI"
    },
    "12890": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12892": {
      "op": "DUP1"
    },
    "12893": {
      "op": "REVERT"
    },
    "12894": {
      "op": "JUMPDEST"
    },
    "12895": {
      "op": "DUP1"
    },
    "12896": {
      "op": "SWAP2"
    },
    "12897": {
      "op": "POP"
    },
    "12898": {
      "op": "POP"
    },
    "12899": {
      "op": "SWAP3"
    },
    "12900": {
      "op": "POP"
    },
    "12901": {
      "op": "SWAP3"
    },
    "12902": {
      "op": "SWAP1"
    },
    "12903": {
      "op": "POP"
    },
    "12904": {
      "jump": "o",
      "op": "JUMP"
    },
    "12905": {
      "op": "JUMPDEST"
    },
    "12906": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12908": {
      "op": "DUP1"
    },
    "12909": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "12911": {
      "op": "DUP4"
    },
    "12912": {
      "op": "DUP6"
    },
    "12913": {
      "op": "SUB"
    },
    "12914": {
      "op": "SLT"
    },
    "12915": {
      "op": "ISZERO"
    },
    "12916": {
      "op": "PUSH2",
      "value": "0x327C"
    },
    "12919": {
      "op": "JUMPI"
    },
    "12920": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12922": {
      "op": "DUP1"
    },
    "12923": {
      "op": "REVERT"
    },
    "12924": {
      "op": "JUMPDEST"
    },
    "12925": {
      "op": "PUSH2",
      "value": "0x3285"
    },
    "12928": {
      "op": "DUP4"
    },
    "12929": {
      "op": "PUSH2",
      "value": "0x3201"
    },
    "12932": {
      "jump": "i",
      "op": "JUMP"
    },
    "12933": {
      "op": "JUMPDEST"
    },
    "12934": {
      "op": "SWAP2"
    },
    "12935": {
      "op": "POP"
    },
    "12936": {
      "op": "PUSH2",
      "value": "0x3293"
    },
    "12939": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "12941": {
      "op": "DUP5"
    },
    "12942": {
      "op": "ADD"
    },
    "12943": {
      "op": "PUSH2",
      "value": "0x2FD6"
    },
    "12946": {
      "jump": "i",
      "op": "JUMP"
    },
    "12947": {
      "op": "JUMPDEST"
    },
    "12948": {
      "op": "SWAP1"
    },
    "12949": {
      "op": "POP"
    },
    "12950": {
      "op": "SWAP3"
    },
    "12951": {
      "op": "POP"
    },
    "12952": {
      "op": "SWAP3"
    },
    "12953": {
      "op": "SWAP1"
    },
    "12954": {
      "op": "POP"
    },
    "12955": {
      "jump": "o",
      "op": "JUMP"
    },
    "12956": {
      "op": "JUMPDEST"
    },
    "12957": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12959": {
      "op": "DUP1"
    },
    "12960": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12962": {
      "op": "DUP1"
    },
    "12963": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "12965": {
      "op": "DUP6"
    },
    "12966": {
      "op": "DUP8"
    },
    "12967": {
      "op": "SUB"
    },
    "12968": {
      "op": "SLT"
    },
    "12969": {
      "op": "ISZERO"
    },
    "12970": {
      "op": "PUSH2",
      "value": "0x32B2"
    },
    "12973": {
      "op": "JUMPI"
    },
    "12974": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12976": {
      "op": "DUP1"
    },
    "12977": {
      "op": "REVERT"
    },
    "12978": {
      "op": "JUMPDEST"
    },
    "12979": {
      "op": "PUSH2",
      "value": "0x32BB"
    },
    "12982": {
      "op": "DUP6"
    },
    "12983": {
      "op": "PUSH2",
      "value": "0x2FD6"
    },
    "12986": {
      "jump": "i",
      "op": "JUMP"
    },
    "12987": {
      "op": "JUMPDEST"
    },
    "12988": {
      "op": "SWAP4"
    },
    "12989": {
      "op": "POP"
    },
    "12990": {
      "op": "PUSH2",
      "value": "0x32C9"
    },
    "12993": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "12995": {
      "op": "DUP7"
    },
    "12996": {
      "op": "ADD"
    },
    "12997": {
      "op": "PUSH2",
      "value": "0x2FD6"
    },
    "13000": {
      "jump": "i",
      "op": "JUMP"
    },
    "13001": {
      "op": "JUMPDEST"
    },
    "13002": {
      "op": "SWAP3"
    },
    "13003": {
      "op": "POP"
    },
    "13004": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "13006": {
      "op": "DUP6"
    },
    "13007": {
      "op": "ADD"
    },
    "13008": {
      "op": "CALLDATALOAD"
    },
    "13009": {
      "op": "SWAP2"
    },
    "13010": {
      "op": "POP"
    },
    "13011": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "13013": {
      "op": "DUP6"
    },
    "13014": {
      "op": "ADD"
    },
    "13015": {
      "op": "CALLDATALOAD"
    },
    "13016": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "13025": {
      "op": "DUP2"
    },
    "13026": {
      "op": "GT"
    },
    "13027": {
      "op": "ISZERO"
    },
    "13028": {
      "op": "PUSH2",
      "value": "0x32EC"
    },
    "13031": {
      "op": "JUMPI"
    },
    "13032": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13034": {
      "op": "DUP1"
    },
    "13035": {
      "op": "REVERT"
    },
    "13036": {
      "op": "JUMPDEST"
    },
    "13037": {
      "op": "DUP6"
    },
    "13038": {
      "op": "ADD"
    },
    "13039": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "13041": {
      "op": "DUP2"
    },
    "13042": {
      "op": "ADD"
    },
    "13043": {
      "op": "DUP8"
    },
    "13044": {
      "op": "SGT"
    },
    "13045": {
      "op": "PUSH2",
      "value": "0x32FD"
    },
    "13048": {
      "op": "JUMPI"
    },
    "13049": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13051": {
      "op": "DUP1"
    },
    "13052": {
      "op": "REVERT"
    },
    "13053": {
      "op": "JUMPDEST"
    },
    "13054": {
      "op": "PUSH2",
      "value": "0x330C"
    },
    "13057": {
      "op": "DUP8"
    },
    "13058": {
      "op": "DUP3"
    },
    "13059": {
      "op": "CALLDATALOAD"
    },
    "13060": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "13062": {
      "op": "DUP5"
    },
    "13063": {
      "op": "ADD"
    },
    "13064": {
      "op": "PUSH2",
      "value": "0x3032"
    },
    "13067": {
      "jump": "i",
      "op": "JUMP"
    },
    "13068": {
      "op": "JUMPDEST"
    },
    "13069": {
      "op": "SWAP2"
    },
    "13070": {
      "op": "POP"
    },
    "13071": {
      "op": "POP"
    },
    "13072": {
      "op": "SWAP3"
    },
    "13073": {
      "op": "SWAP6"
    },
    "13074": {
      "op": "SWAP2"
    },
    "13075": {
      "op": "SWAP5"
    },
    "13076": {
      "op": "POP"
    },
    "13077": {
      "op": "SWAP3"
    },
    "13078": {
      "op": "POP"
    },
    "13079": {
      "jump": "o",
      "op": "JUMP"
    },
    "13080": {
      "op": "JUMPDEST"
    },
    "13081": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "13086": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "13088": {
      "op": "SHL"
    },
    "13089": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13091": {
      "op": "MSTORE"
    },
    "13092": {
      "op": "PUSH1",
      "value": "0x21"
    },
    "13094": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "13096": {
      "op": "MSTORE"
    },
    "13097": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "13099": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13101": {
      "op": "REVERT"
    },
    "13102": {
      "op": "JUMPDEST"
    },
    "13103": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "13105": {
      "op": "DUP2"
    },
    "13106": {
      "op": "ADD"
    },
    "13107": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "13109": {
      "op": "DUP4"
    },
    "13110": {
      "op": "LT"
    },
    "13111": {
      "op": "PUSH2",
      "value": "0x3350"
    },
    "13114": {
      "op": "JUMPI"
    },
    "13115": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "13120": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "13122": {
      "op": "SHL"
    },
    "13123": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13125": {
      "op": "MSTORE"
    },
    "13126": {
      "op": "PUSH1",
      "value": "0x21"
    },
    "13128": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "13130": {
      "op": "MSTORE"
    },
    "13131": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "13133": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13135": {
      "op": "REVERT"
    },
    "13136": {
      "op": "JUMPDEST"
    },
    "13137": {
      "op": "SWAP2"
    },
    "13138": {
      "op": "SWAP1"
    },
    "13139": {
      "op": "MSTORE"
    },
    "13140": {
      "op": "SWAP1"
    },
    "13141": {
      "jump": "o",
      "op": "JUMP"
    },
    "13142": {
      "op": "JUMPDEST"
    },
    "13143": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13145": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "13147": {
      "op": "DUP3"
    },
    "13148": {
      "op": "DUP5"
    },
    "13149": {
      "op": "SUB"
    },
    "13150": {
      "op": "SLT"
    },
    "13151": {
      "op": "ISZERO"
    },
    "13152": {
      "op": "PUSH2",
      "value": "0x3368"
    },
    "13155": {
      "op": "JUMPI"
    },
    "13156": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13158": {
      "op": "DUP1"
    },
    "13159": {
      "op": "REVERT"
    },
    "13160": {
      "op": "JUMPDEST"
    },
    "13161": {
      "op": "DUP2"
    },
    "13162": {
      "op": "CALLDATALOAD"
    },
    "13163": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "13165": {
      "op": "DUP2"
    },
    "13166": {
      "op": "LT"
    },
    "13167": {
      "op": "PUSH2",
      "value": "0x2F4B"
    },
    "13170": {
      "op": "JUMPI"
    },
    "13171": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13173": {
      "op": "DUP1"
    },
    "13174": {
      "op": "REVERT"
    },
    "13175": {
      "op": "JUMPDEST"
    },
    "13176": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13178": {
      "op": "DUP1"
    },
    "13179": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "13181": {
      "op": "DUP4"
    },
    "13182": {
      "op": "DUP6"
    },
    "13183": {
      "op": "SUB"
    },
    "13184": {
      "op": "SLT"
    },
    "13185": {
      "op": "ISZERO"
    },
    "13186": {
      "op": "PUSH2",
      "value": "0x338A"
    },
    "13189": {
      "op": "JUMPI"
    },
    "13190": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13192": {
      "op": "DUP1"
    },
    "13193": {
      "op": "REVERT"
    },
    "13194": {
      "op": "JUMPDEST"
    },
    "13195": {
      "op": "PUSH2",
      "value": "0x3285"
    },
    "13198": {
      "op": "DUP4"
    },
    "13199": {
      "op": "PUSH2",
      "value": "0x2FD6"
    },
    "13202": {
      "jump": "i",
      "op": "JUMP"
    },
    "13203": {
      "op": "JUMPDEST"
    },
    "13204": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "13206": {
      "op": "DUP2"
    },
    "13207": {
      "op": "DUP2"
    },
    "13208": {
      "op": "SHR"
    },
    "13209": {
      "op": "SWAP1"
    },
    "13210": {
      "op": "DUP3"
    },
    "13211": {
      "op": "AND"
    },
    "13212": {
      "op": "DUP1"
    },
    "13213": {
      "op": "PUSH2",
      "value": "0x33A7"
    },
    "13216": {
      "op": "JUMPI"
    },
    "13217": {
      "op": "PUSH1",
      "value": "0x7F"
    },
    "13219": {
      "op": "DUP3"
    },
    "13220": {
      "op": "AND"
    },
    "13221": {
      "op": "SWAP2"
    },
    "13222": {
      "op": "POP"
    },
    "13223": {
      "op": "JUMPDEST"
    },
    "13224": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "13226": {
      "op": "DUP3"
    },
    "13227": {
      "op": "LT"
    },
    "13228": {
      "op": "DUP2"
    },
    "13229": {
      "op": "EQ"
    },
    "13230": {
      "op": "ISZERO"
    },
    "13231": {
      "op": "PUSH2",
      "value": "0x33C8"
    },
    "13234": {
      "op": "JUMPI"
    },
    "13235": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "13240": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "13242": {
      "op": "SHL"
    },
    "13243": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13245": {
      "op": "MSTORE"
    },
    "13246": {
      "op": "PUSH1",
      "value": "0x22"
    },
    "13248": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "13250": {
      "op": "MSTORE"
    },
    "13251": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "13253": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13255": {
      "op": "REVERT"
    },
    "13256": {
      "op": "JUMPDEST"
    },
    "13257": {
      "op": "POP"
    },
    "13258": {
      "op": "SWAP2"
    },
    "13259": {
      "op": "SWAP1"
    },
    "13260": {
      "op": "POP"
    },
    "13261": {
      "jump": "o",
      "op": "JUMP"
    },
    "13262": {
      "op": "JUMPDEST"
    },
    "13263": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "13265": {
      "op": "DUP1"
    },
    "13266": {
      "op": "DUP3"
    },
    "13267": {
      "op": "MSTORE"
    },
    "13268": {
      "op": "DUP2"
    },
    "13269": {
      "op": "DUP2"
    },
    "13270": {
      "op": "ADD"
    },
    "13271": {
      "op": "MSTORE"
    },
    "13272": {
      "op": "PUSH32",
      "value": "0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
    },
    "13305": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "13307": {
      "op": "DUP3"
    },
    "13308": {
      "op": "ADD"
    },
    "13309": {
      "op": "MSTORE"
    },
    "13310": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "13312": {
      "op": "ADD"
    },
    "13313": {
      "op": "SWAP1"
    },
    "13314": {
      "jump": "o",
      "op": "JUMP"
    },
    "13315": {
      "op": "JUMPDEST"
    },
    "13316": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "13321": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "13323": {
      "op": "SHL"
    },
    "13324": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13326": {
      "op": "MSTORE"
    },
    "13327": {
      "op": "PUSH1",
      "value": "0x11"
    },
    "13329": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "13331": {
      "op": "MSTORE"
    },
    "13332": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "13334": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13336": {
      "op": "REVERT"
    },
    "13337": {
      "op": "JUMPDEST"
    },
    "13338": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13340": {
      "op": "DUP3"
    },
    "13341": {
      "op": "DUP3"
    },
    "13342": {
      "op": "LT"
    },
    "13343": {
      "op": "ISZERO"
    },
    "13344": {
      "op": "PUSH2",
      "value": "0x342B"
    },
    "13347": {
      "op": "JUMPI"
    },
    "13348": {
      "op": "PUSH2",
      "value": "0x342B"
    },
    "13351": {
      "op": "PUSH2",
      "value": "0x3403"
    },
    "13354": {
      "jump": "i",
      "op": "JUMP"
    },
    "13355": {
      "op": "JUMPDEST"
    },
    "13356": {
      "op": "POP"
    },
    "13357": {
      "op": "SUB"
    },
    "13358": {
      "op": "SWAP1"
    },
    "13359": {
      "jump": "o",
      "op": "JUMP"
    },
    "13360": {
      "op": "JUMPDEST"
    },
    "13361": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "13363": {
      "op": "DUP1"
    },
    "13364": {
      "op": "DUP3"
    },
    "13365": {
      "op": "MSTORE"
    },
    "13366": {
      "op": "PUSH1",
      "value": "0x31"
    },
    "13368": {
      "op": "SWAP1"
    },
    "13369": {
      "op": "DUP3"
    },
    "13370": {
      "op": "ADD"
    },
    "13371": {
      "op": "MSTORE"
    },
    "13372": {
      "op": "PUSH32",
      "value": "0x4552433732313A207472616E736665722063616C6C6572206973206E6F74206F"
    },
    "13405": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "13407": {
      "op": "DUP3"
    },
    "13408": {
      "op": "ADD"
    },
    "13409": {
      "op": "MSTORE"
    },
    "13410": {
      "op": "PUSH17",
      "value": "0x1DDB995C881B9BDC88185C1C1C9BDD9959"
    },
    "13428": {
      "op": "PUSH1",
      "value": "0x7A"
    },
    "13430": {
      "op": "SHL"
    },
    "13431": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "13433": {
      "op": "DUP3"
    },
    "13434": {
      "op": "ADD"
    },
    "13435": {
      "op": "MSTORE"
    },
    "13436": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "13438": {
      "op": "ADD"
    },
    "13439": {
      "op": "SWAP1"
    },
    "13440": {
      "jump": "o",
      "op": "JUMP"
    },
    "13441": {
      "op": "JUMPDEST"
    },
    "13442": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13444": {
      "op": "DUP2"
    },
    "13445": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13447": {
      "op": "NOT"
    },
    "13448": {
      "op": "DIV"
    },
    "13449": {
      "op": "DUP4"
    },
    "13450": {
      "op": "GT"
    },
    "13451": {
      "op": "DUP3"
    },
    "13452": {
      "op": "ISZERO"
    },
    "13453": {
      "op": "ISZERO"
    },
    "13454": {
      "op": "AND"
    },
    "13455": {
      "op": "ISZERO"
    },
    "13456": {
      "op": "PUSH2",
      "value": "0x349B"
    },
    "13459": {
      "op": "JUMPI"
    },
    "13460": {
      "op": "PUSH2",
      "value": "0x349B"
    },
    "13463": {
      "op": "PUSH2",
      "value": "0x3403"
    },
    "13466": {
      "jump": "i",
      "op": "JUMP"
    },
    "13467": {
      "op": "JUMPDEST"
    },
    "13468": {
      "op": "POP"
    },
    "13469": {
      "op": "MUL"
    },
    "13470": {
      "op": "SWAP1"
    },
    "13471": {
      "jump": "o",
      "op": "JUMP"
    },
    "13472": {
      "op": "JUMPDEST"
    },
    "13473": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "13475": {
      "op": "DUP1"
    },
    "13476": {
      "op": "DUP3"
    },
    "13477": {
      "op": "MSTORE"
    },
    "13478": {
      "op": "PUSH1",
      "value": "0x10"
    },
    "13480": {
      "op": "SWAP1"
    },
    "13481": {
      "op": "DUP3"
    },
    "13482": {
      "op": "ADD"
    },
    "13483": {
      "op": "MSTORE"
    },
    "13484": {
      "op": "PUSH16",
      "value": "0x14185D5CD8589B194E881C185D5CD959"
    },
    "13501": {
      "op": "PUSH1",
      "value": "0x82"
    },
    "13503": {
      "op": "SHL"
    },
    "13504": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "13506": {
      "op": "DUP3"
    },
    "13507": {
      "op": "ADD"
    },
    "13508": {
      "op": "MSTORE"
    },
    "13509": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "13511": {
      "op": "ADD"
    },
    "13512": {
      "op": "SWAP1"
    },
    "13513": {
      "jump": "o",
      "op": "JUMP"
    },
    "13514": {
      "op": "JUMPDEST"
    },
    "13515": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13517": {
      "op": "DUP3"
    },
    "13518": {
      "op": "NOT"
    },
    "13519": {
      "op": "DUP3"
    },
    "13520": {
      "op": "GT"
    },
    "13521": {
      "op": "ISZERO"
    },
    "13522": {
      "op": "PUSH2",
      "value": "0x34DD"
    },
    "13525": {
      "op": "JUMPI"
    },
    "13526": {
      "op": "PUSH2",
      "value": "0x34DD"
    },
    "13529": {
      "op": "PUSH2",
      "value": "0x3403"
    },
    "13532": {
      "jump": "i",
      "op": "JUMP"
    },
    "13533": {
      "op": "JUMPDEST"
    },
    "13534": {
      "op": "POP"
    },
    "13535": {
      "op": "ADD"
    },
    "13536": {
      "op": "SWAP1"
    },
    "13537": {
      "jump": "o",
      "op": "JUMP"
    },
    "13538": {
      "op": "JUMPDEST"
    },
    "13539": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "13544": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "13546": {
      "op": "SHL"
    },
    "13547": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13549": {
      "op": "MSTORE"
    },
    "13550": {
      "op": "PUSH1",
      "value": "0x32"
    },
    "13552": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "13554": {
      "op": "MSTORE"
    },
    "13555": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "13557": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13559": {
      "op": "REVERT"
    },
    "13560": {
      "op": "JUMPDEST"
    },
    "13561": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13563": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13565": {
      "op": "NOT"
    },
    "13566": {
      "op": "DUP3"
    },
    "13567": {
      "op": "EQ"
    },
    "13568": {
      "op": "ISZERO"
    },
    "13569": {
      "op": "PUSH2",
      "value": "0x350C"
    },
    "13572": {
      "op": "JUMPI"
    },
    "13573": {
      "op": "PUSH2",
      "value": "0x350C"
    },
    "13576": {
      "op": "PUSH2",
      "value": "0x3403"
    },
    "13579": {
      "jump": "i",
      "op": "JUMP"
    },
    "13580": {
      "op": "JUMPDEST"
    },
    "13581": {
      "op": "POP"
    },
    "13582": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "13584": {
      "op": "ADD"
    },
    "13585": {
      "op": "SWAP1"
    },
    "13586": {
      "jump": "o",
      "op": "JUMP"
    },
    "13587": {
      "op": "JUMPDEST"
    },
    "13588": {
      "op": "DUP1"
    },
    "13589": {
      "op": "SLOAD"
    },
    "13590": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13592": {
      "op": "SWAP1"
    },
    "13593": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "13595": {
      "op": "DUP2"
    },
    "13596": {
      "op": "DUP2"
    },
    "13597": {
      "op": "SHR"
    },
    "13598": {
      "op": "SWAP1"
    },
    "13599": {
      "op": "DUP1"
    },
    "13600": {
      "op": "DUP4"
    },
    "13601": {
      "op": "AND"
    },
    "13602": {
      "op": "DUP1"
    },
    "13603": {
      "op": "PUSH2",
      "value": "0x352D"
    },
    "13606": {
      "op": "JUMPI"
    },
    "13607": {
      "op": "PUSH1",
      "value": "0x7F"
    },
    "13609": {
      "op": "DUP4"
    },
    "13610": {
      "op": "AND"
    },
    "13611": {
      "op": "SWAP3"
    },
    "13612": {
      "op": "POP"
    },
    "13613": {
      "op": "JUMPDEST"
    },
    "13614": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "13616": {
      "op": "DUP1"
    },
    "13617": {
      "op": "DUP5"
    },
    "13618": {
      "op": "LT"
    },
    "13619": {
      "op": "DUP3"
    },
    "13620": {
      "op": "EQ"
    },
    "13621": {
      "op": "ISZERO"
    },
    "13622": {
      "op": "PUSH2",
      "value": "0x354F"
    },
    "13625": {
      "op": "JUMPI"
    },
    "13626": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "13631": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "13633": {
      "op": "SHL"
    },
    "13634": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13636": {
      "op": "MSTORE"
    },
    "13637": {
      "op": "PUSH1",
      "value": "0x22"
    },
    "13639": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "13641": {
      "op": "MSTORE"
    },
    "13642": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "13644": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13646": {
      "op": "REVERT"
    },
    "13647": {
      "op": "JUMPDEST"
    },
    "13648": {
      "op": "DUP2"
    },
    "13649": {
      "op": "DUP1"
    },
    "13650": {
      "op": "ISZERO"
    },
    "13651": {
      "op": "PUSH2",
      "value": "0x3563"
    },
    "13654": {
      "op": "JUMPI"
    },
    "13655": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "13657": {
      "op": "DUP2"
    },
    "13658": {
      "op": "EQ"
    },
    "13659": {
      "op": "PUSH2",
      "value": "0x3574"
    },
    "13662": {
      "op": "JUMPI"
    },
    "13663": {
      "op": "PUSH2",
      "value": "0x35A1"
    },
    "13666": {
      "op": "JUMP"
    },
    "13667": {
      "op": "JUMPDEST"
    },
    "13668": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "13670": {
      "op": "NOT"
    },
    "13671": {
      "op": "DUP7"
    },
    "13672": {
      "op": "AND"
    },
    "13673": {
      "op": "DUP10"
    },
    "13674": {
      "op": "MSTORE"
    },
    "13675": {
      "op": "DUP5"
    },
    "13676": {
      "op": "DUP10"
    },
    "13677": {
      "op": "ADD"
    },
    "13678": {
      "op": "SWAP7"
    },
    "13679": {
      "op": "POP"
    },
    "13680": {
      "op": "PUSH2",
      "value": "0x35A1"
    },
    "13683": {
      "op": "JUMP"
    },
    "13684": {
      "op": "JUMPDEST"
    },
    "13685": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13687": {
      "op": "DUP9"
    },
    "13688": {
      "op": "DUP2"
    },
    "13689": {
      "op": "MSTORE"
    },
    "13690": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "13692": {
      "op": "SWAP1"
    },
    "13693": {
      "op": "KECCAK256"
    },
    "13694": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13696": {
      "op": "JUMPDEST"
    },
    "13697": {
      "op": "DUP7"
    },
    "13698": {
      "op": "DUP2"
    },
    "13699": {
      "op": "LT"
    },
    "13700": {
      "op": "ISZERO"
    },
    "13701": {
      "op": "PUSH2",
      "value": "0x3599"
    },
    "13704": {
      "op": "JUMPI"
    },
    "13705": {
      "op": "DUP2"
    },
    "13706": {
      "op": "SLOAD"
    },
    "13707": {
      "op": "DUP12"
    },
    "13708": {
      "op": "DUP3"
    },
    "13709": {
      "op": "ADD"
    },
    "13710": {
      "op": "MSTORE"
    },
    "13711": {
      "op": "SWAP1"
    },
    "13712": {
      "op": "DUP6"
    },
    "13713": {
      "op": "ADD"
    },
    "13714": {
      "op": "SWAP1"
    },
    "13715": {
      "op": "DUP4"
    },
    "13716": {
      "op": "ADD"
    },
    "13717": {
      "op": "PUSH2",
      "value": "0x3580"
    },
    "13720": {
      "op": "JUMP"
    },
    "13721": {
      "op": "JUMPDEST"
    },
    "13722": {
      "op": "POP"
    },
    "13723": {
      "op": "POP"
    },
    "13724": {
      "op": "DUP5"
    },
    "13725": {
      "op": "DUP10"
    },
    "13726": {
      "op": "ADD"
    },
    "13727": {
      "op": "SWAP7"
    },
    "13728": {
      "op": "POP"
    },
    "13729": {
      "op": "JUMPDEST"
    },
    "13730": {
      "op": "POP"
    },
    "13731": {
      "op": "POP"
    },
    "13732": {
      "op": "POP"
    },
    "13733": {
      "op": "POP"
    },
    "13734": {
      "op": "POP"
    },
    "13735": {
      "op": "POP"
    },
    "13736": {
      "op": "SWAP3"
    },
    "13737": {
      "op": "SWAP2"
    },
    "13738": {
      "op": "POP"
    },
    "13739": {
      "op": "POP"
    },
    "13740": {
      "jump": "o",
      "op": "JUMP"
    },
    "13741": {
      "op": "JUMPDEST"
    },
    "13742": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13744": {
      "op": "PUSH2",
      "value": "0x35B9"
    },
    "13747": {
      "op": "DUP3"
    },
    "13748": {
      "op": "DUP7"
    },
    "13749": {
      "op": "PUSH2",
      "value": "0x3513"
    },
    "13752": {
      "jump": "i",
      "op": "JUMP"
    },
    "13753": {
      "op": "JUMPDEST"
    },
    "13754": {
      "op": "DUP5"
    },
    "13755": {
      "op": "MLOAD"
    },
    "13756": {
      "op": "PUSH2",
      "value": "0x35C9"
    },
    "13759": {
      "op": "DUP2"
    },
    "13760": {
      "op": "DUP4"
    },
    "13761": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "13763": {
      "op": "DUP10"
    },
    "13764": {
      "op": "ADD"
    },
    "13765": {
      "op": "PUSH2",
      "value": "0x2F52"
    },
    "13768": {
      "jump": "i",
      "op": "JUMP"
    },
    "13769": {
      "op": "JUMPDEST"
    },
    "13770": {
      "op": "PUSH2",
      "value": "0x35D5"
    },
    "13773": {
      "op": "DUP2"
    },
    "13774": {
      "op": "DUP4"
    },
    "13775": {
      "op": "ADD"
    },
    "13776": {
      "op": "DUP7"
    },
    "13777": {
      "op": "PUSH2",
      "value": "0x3513"
    },
    "13780": {
      "jump": "i",
      "op": "JUMP"
    },
    "13781": {
      "op": "JUMPDEST"
    },
    "13782": {
      "op": "SWAP8"
    },
    "13783": {
      "op": "SWAP7"
    },
    "13784": {
      "op": "POP"
    },
    "13785": {
      "op": "POP"
    },
    "13786": {
      "op": "POP"
    },
    "13787": {
      "op": "POP"
    },
    "13788": {
      "op": "POP"
    },
    "13789": {
      "op": "POP"
    },
    "13790": {
      "op": "POP"
    },
    "13791": {
      "jump": "o",
      "op": "JUMP"
    },
    "13792": {
      "op": "JUMPDEST"
    },
    "13793": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "13795": {
      "op": "DUP1"
    },
    "13796": {
      "op": "DUP3"
    },
    "13797": {
      "op": "MSTORE"
    },
    "13798": {
      "op": "PUSH1",
      "value": "0x32"
    },
    "13800": {
      "op": "SWAP1"
    },
    "13801": {
      "op": "DUP3"
    },
    "13802": {
      "op": "ADD"
    },
    "13803": {
      "op": "MSTORE"
    },
    "13804": {
      "op": "PUSH32",
      "value": "0x4552433732313A207472616E7366657220746F206E6F6E204552433732315265"
    },
    "13837": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "13839": {
      "op": "DUP3"
    },
    "13840": {
      "op": "ADD"
    },
    "13841": {
      "op": "MSTORE"
    },
    "13842": {
      "op": "PUSH18",
      "value": "0x31B2B4BB32B91034B6B83632B6B2B73A32B9"
    },
    "13861": {
      "op": "PUSH1",
      "value": "0x71"
    },
    "13863": {
      "op": "SHL"
    },
    "13864": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "13866": {
      "op": "DUP3"
    },
    "13867": {
      "op": "ADD"
    },
    "13868": {
      "op": "MSTORE"
    },
    "13869": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "13871": {
      "op": "ADD"
    },
    "13872": {
      "op": "SWAP1"
    },
    "13873": {
      "jump": "o",
      "op": "JUMP"
    },
    "13874": {
      "op": "JUMPDEST"
    },
    "13875": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "13880": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "13882": {
      "op": "SHL"
    },
    "13883": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13885": {
      "op": "MSTORE"
    },
    "13886": {
      "op": "PUSH1",
      "value": "0x12"
    },
    "13888": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "13890": {
      "op": "MSTORE"
    },
    "13891": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "13893": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13895": {
      "op": "REVERT"
    },
    "13896": {
      "op": "JUMPDEST"
    },
    "13897": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13899": {
      "op": "DUP3"
    },
    "13900": {
      "op": "PUSH2",
      "value": "0x3657"
    },
    "13903": {
      "op": "JUMPI"
    },
    "13904": {
      "op": "PUSH2",
      "value": "0x3657"
    },
    "13907": {
      "op": "PUSH2",
      "value": "0x3632"
    },
    "13910": {
      "jump": "i",
      "op": "JUMP"
    },
    "13911": {
      "op": "JUMPDEST"
    },
    "13912": {
      "op": "POP"
    },
    "13913": {
      "op": "DIV"
    },
    "13914": {
      "op": "SWAP1"
    },
    "13915": {
      "jump": "o",
      "op": "JUMP"
    },
    "13916": {
      "op": "JUMPDEST"
    },
    "13917": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13919": {
      "op": "DUP3"
    },
    "13920": {
      "op": "PUSH2",
      "value": "0x366B"
    },
    "13923": {
      "op": "JUMPI"
    },
    "13924": {
      "op": "PUSH2",
      "value": "0x366B"
    },
    "13927": {
      "op": "PUSH2",
      "value": "0x3632"
    },
    "13930": {
      "jump": "i",
      "op": "JUMP"
    },
    "13931": {
      "op": "JUMPDEST"
    },
    "13932": {
      "op": "POP"
    },
    "13933": {
      "op": "MOD"
    },
    "13934": {
      "op": "SWAP1"
    },
    "13935": {
      "jump": "o",
      "op": "JUMP"
    },
    "13936": {
      "op": "JUMPDEST"
    },
    "13937": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "13939": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "13941": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "13943": {
      "op": "SHL"
    },
    "13944": {
      "op": "SUB"
    },
    "13945": {
      "op": "DUP6"
    },
    "13946": {
      "op": "DUP2"
    },
    "13947": {
      "op": "AND"
    },
    "13948": {
      "op": "DUP3"
    },
    "13949": {
      "op": "MSTORE"
    },
    "13950": {
      "op": "DUP5"
    },
    "13951": {
      "op": "AND"
    },
    "13952": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "13954": {
      "op": "DUP3"
    },
    "13955": {
      "op": "ADD"
    },
    "13956": {
      "op": "MSTORE"
    },
    "13957": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "13959": {
      "op": "DUP2"
    },
    "13960": {
      "op": "ADD"
    },
    "13961": {
      "op": "DUP4"
    },
    "13962": {
      "op": "SWAP1"
    },
    "13963": {
      "op": "MSTORE"
    },
    "13964": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "13966": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "13968": {
      "op": "DUP3"
    },
    "13969": {
      "op": "ADD"
    },
    "13970": {
      "op": "DUP2"
    },
    "13971": {
      "op": "SWAP1"
    },
    "13972": {
      "op": "MSTORE"
    },
    "13973": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13975": {
      "op": "SWAP1"
    },
    "13976": {
      "op": "PUSH2",
      "value": "0x36A3"
    },
    "13979": {
      "op": "SWAP1"
    },
    "13980": {
      "op": "DUP4"
    },
    "13981": {
      "op": "ADD"
    },
    "13982": {
      "op": "DUP5"
    },
    "13983": {
      "op": "PUSH2",
      "value": "0x2F7E"
    },
    "13986": {
      "jump": "i",
      "op": "JUMP"
    },
    "13987": {
      "op": "JUMPDEST"
    },
    "13988": {
      "op": "SWAP7"
    },
    "13989": {
      "op": "SWAP6"
    },
    "13990": {
      "op": "POP"
    },
    "13991": {
      "op": "POP"
    },
    "13992": {
      "op": "POP"
    },
    "13993": {
      "op": "POP"
    },
    "13994": {
      "op": "POP"
    },
    "13995": {
      "op": "POP"
    },
    "13996": {
      "jump": "o",
      "op": "JUMP"
    },
    "13997": {
      "op": "JUMPDEST"
    },
    "13998": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "14000": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "14002": {
      "op": "DUP3"
    },
    "14003": {
      "op": "DUP5"
    },
    "14004": {
      "op": "SUB"
    },
    "14005": {
      "op": "SLT"
    },
    "14006": {
      "op": "ISZERO"
    },
    "14007": {
      "op": "PUSH2",
      "value": "0x36BF"
    },
    "14010": {
      "op": "JUMPI"
    },
    "14011": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "14013": {
      "op": "DUP1"
    },
    "14014": {
      "op": "REVERT"
    },
    "14015": {
      "op": "JUMPDEST"
    },
    "14016": {
      "op": "DUP2"
    },
    "14017": {
      "op": "MLOAD"
    },
    "14018": {
      "op": "PUSH2",
      "value": "0x2F4B"
    },
    "14021": {
      "op": "DUP2"
    },
    "14022": {
      "op": "PUSH2",
      "value": "0x2F18"
    },
    "14025": {
      "jump": "i",
      "op": "JUMP"
    },
    "14026": {
      "op": "JUMPDEST"
    },
    "14027": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "14032": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "14034": {
      "op": "SHL"
    },
    "14035": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "14037": {
      "op": "MSTORE"
    },
    "14038": {
      "op": "PUSH1",
      "value": "0x31"
    },
    "14040": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "14042": {
      "op": "MSTORE"
    },
    "14043": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "14045": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "14047": {
      "op": "REVERT"
    }
  },
  "sha1": "b282c40be87ba6c1c38c5529bf4d19d66f4afa2a",
  "source": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.10;\n\nimport '@openzeppelin/contracts/token/ERC721/ERC721.sol';\nimport \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\";\nimport '@openzeppelin/contracts/access/Ownable.sol';\nimport '@openzeppelin/contracts/security/ReentrancyGuard.sol';\nimport '@openzeppelin/contracts/utils/Counters.sol';\nimport '@openzeppelin/contracts/security/Pausable.sol';\nimport '@openzeppelin/contracts/utils/cryptography/MerkleProof.sol';\n\ncontract CryptidToken is ERC721, ERC721Enumerable, Pausable, Ownable, ReentrancyGuard{ \n    using Strings for uint256;\n    using Counters for Counters.Counter;\n    using MerkleProof for bytes32[];\n\n    enum Stage {\n        Init,\n        Whitelist,\n        TeamMint,\n        PublicSale\n    }\n\n    Counters.Counter private _tokenIdCounter;\n    \n    bytes32 public merkleRoot;\n\n    string public provenanceHash;\n    string public baseURI = \"\";\n    string public baseExtension = \".json\";\n    uint8 public maxMintPerTx;     \n    bool public tokenURIFrozen = false;\n    bool public provenanceHashFrozen = false;\n\n    address public withdrawlAddress = 0x1953bc1fF76f5e61cD775A4482bd85BAc56aD1Eb;\n\n    // ~ Sale stages ~\n    // stage 0: Init\n    // stage 1: Whitelist\n    // stage 2: Team Mint \n    // stage 3: Public Sale\n\n    // Whitelist mint (stage=1)\n    uint256 public whitelistSupply;                       \n    mapping(address => bool) public claimed;              \n    \n    // Team Mint (stage=2)\n    uint256 public teamMintSupply;                          \n    uint256 public teamMintCount;\n\n    // Public Sale (stage=3)\n    uint256 public totalSaleSupply;         \n    uint256 public salePrice = 0.1 ether;  \n\n    Stage public stage;\n\n    constructor(\n        string memory _name,\n        string memory _symbol,\n        string memory _baseURI,\n        uint256 _whitelistSupply,\n        uint256 _teamMintSupply,\n        uint256 _totalSaleSupply,\n        uint8 _maxMintPerTx\n\n    )   ERC721(_name, _symbol) {\n        whitelistSupply = _whitelistSupply;\n        teamMintSupply = _teamMintSupply;\n        totalSaleSupply = _totalSaleSupply;\n        maxMintPerTx = _maxMintPerTx;\n        baseURI = _baseURI;\n        _tokenIdCounter.increment();\n    }\n\n    modifier isValidMerkleProof(bytes32[] calldata proof, bytes32 root) {\n        require(proof.verify(root, keccak256(abi.encodePacked(msg.sender))), \"Address not in whitelist.\");\n        _;\n    }\n\n    modifier isCorrectPayment(uint256 price, uint256 numberOfTokens) {\n        require(price * numberOfTokens == msg.value, \"Incorrect ETH value sent.\");\n        _;\n    }\n\n    function airdropCryptid(\n        uint8 mintAmount, \n        address to\n    ) \n        external\n        onlyOwner \n    {\n        require(totalSupply()  + mintAmount <= totalSaleSupply, \"Mint amount will exceed total sale supply.\");\n        for (uint256 i = 1; i <= mintAmount; i++) {\n            _safeMint(to, _tokenIdCounter.current());\n            _tokenIdCounter.increment();\n        }\n    }\n\n    // Stage 1 - Whitelist Sale\n    function whitelistMint(\n        bytes32[] calldata merkleProof\n    ) \n        external\n        payable \n        isValidMerkleProof(merkleProof, merkleRoot) \n        isCorrectPayment(salePrice, 1) \n        nonReentrant \n        whenNotPaused \n    {\n        require(stage == Stage.Whitelist, \"Whitelist sale not initiated.\");\n        require(claimed[msg.sender] == false, \"Whitelist mint already claimed.\"); \n        require(totalSupply() + 1 <= whitelistSupply, \"Mint amount will exceed whitelist supply.\");\n        claimed[msg.sender] = true;\n        _safeMint(msg.sender, _tokenIdCounter.current());\n        _tokenIdCounter.increment();\n    }\n\n    // Stage 2 - Team Mint\n    function teamMint(\n        uint8 _mintAmount\n    ) \n        external \n        onlyOwner \n    {\n        require(stage == Stage.TeamMint, \"Whitelist sale not initiated.\");\n        require(_mintAmount + teamMintCount <= teamMintSupply, \"Transaction exceeds total team-sale supply\");      \n        teamMintCount += _mintAmount;\n        for (uint256 i = 1; i <= _mintAmount; i++) {\n            _safeMint(msg.sender, _tokenIdCounter.current());\n            _tokenIdCounter.increment();\n        }\n    }\n\n    // Stage 3 - Public Mint\n    function publicMint(\n        uint8 _mintAmount\n    ) \n        external\n        payable \n        isCorrectPayment(salePrice, _mintAmount) \n        nonReentrant \n        whenNotPaused  \n    {\n        require(stage == Stage.PublicSale, \"Public Sale not initiated.\");\n        require(totalSupply()  + _mintAmount <= totalSaleSupply, \"Transaction exceeds total sale supply\");\n        require(_mintAmount <= maxMintPerTx, \"Exceeds max allowed mints per transaction.\");  \n        for (uint256 i = 1; i <= _mintAmount; i++) {\n            _safeMint(msg.sender, _tokenIdCounter.current());\n            _tokenIdCounter.increment();\n        }\n    }\n\n    //Owner functions\n    function pause() external onlyOwner {\n        _pause();\n    }\n\n    function unpause() external onlyOwner {\n        _unpause();\n    }\n\n    // to be used in case of manual override\n    function overrideClaim(address wlAddress) external onlyOwner{\n        claimed[wlAddress] = true;\n    }\n\n    function setMerkleRoot(bytes32 _merkleRoot) external onlyOwner {\n        merkleRoot = _merkleRoot;\n    }\n\n    function setBaseURI(string memory _newBaseURI) external onlyOwner {\n        require(!tokenURIFrozen, \"BaseURI is frozen.\");\n        baseURI = _newBaseURI;\n    } \n    \n    function freezeBaseURI() external onlyOwner {\n        require(bytes(baseURI).length > 0, \"baseURI cannot be empty\");\n        require(!tokenURIFrozen, \"BaseURI is already frozen.\");\n        tokenURIFrozen = true;\n    }\n\n    function setTeamMintSupply(uint256 _newTeamMintSupply) external onlyOwner {\n        teamMintSupply = _newTeamMintSupply;\n    }\n\n    function setBaseExtension(string memory _newBaseExtension) external onlyOwner {\n        baseExtension = _newBaseExtension;\n    }\n\n    function setPublicSalePrice(uint256 _newSalePrice) external onlyOwner {\n        salePrice = _newSalePrice;\n    }\n\n    function setMaxMintPerTx(uint8 _newmaxMintPerTx) external onlyOwner {\n        maxMintPerTx = _newmaxMintPerTx;\n    }\n\n    function setProvenanceHash(string memory _provenanceHash) external onlyOwner {\n        require(bytes(_provenanceHash).length > 0, \"Provenance hash cannot be empty string.\");\n        require(!provenanceHashFrozen, \"Provenance hash is frozen.\");\n        provenanceHash = _provenanceHash;\n    }\n\n    function freezeProvenanceHash() external onlyOwner {\n        require(bytes(provenanceHash).length > 0, \"Provenance hash cannot be empty.\");\n        require(!provenanceHashFrozen, \"Provenance hash is already frozen.\");\n        provenanceHashFrozen = true;\n    }\n\n    function setWithdrawlAddress(address _withdrawlAddress) external onlyOwner {\n        withdrawlAddress = _withdrawlAddress;\n    }\n\n    function withdraw() external payable onlyOwner {\n        (bool success, ) = payable(withdrawlAddress).call{value: address(this).balance}(\"\");\n        require(success, \"Withdrawl failed.\");\n    }\n\n    function setStage(Stage _stage) external onlyOwner {\n        require(provenanceHashFrozen == true, \"Provenance hash must be frozen before minting can start.\");\n        require(merkleRoot.length != 0, \"Merkle root must be set beefore minting can start.\");\n        stage = _stage;\n    }\n\n    // Public view functions\n    function lastMintAddress() external view returns (address){\n        return ownerOf(totalSupply());\n    }\n\n    function lastMintID() external view returns (uint256){\n        return(totalSupply());\n    }\n\n    function totalSupply() public view override returns (uint256) {\n        return _tokenIdCounter.current() - 1;\n    }\n\n    function tokenURI(uint256 tokenId) public view virtual override returns (string memory) {\n        require(_exists(tokenId), \"ERC721Metadata: URI query for nonexistent token\");\n        return string(abi.encodePacked(baseURI, tokenId.toString(), baseExtension));\n    }\n\n    function getTokensLeft() external view returns (uint256) {\n        return totalSaleSupply - totalSupply();\n    }\n    \n    function walletOfOwner(address owner) external view returns (uint256[] memory) {\n        uint256 ownerTokenCount = balanceOf(owner);\n        uint256[] memory tokensIds = new uint256[](ownerTokenCount);\n        for (uint256 i; i < ownerTokenCount; i++) {\n            tokensIds[i] = tokenOfOwnerByIndex(owner, i);\n        }\n        return tokensIds;\n    }\n    \n    function _beforeTokenTransfer(address from, address to, uint256 tokenId) internal whenNotPaused override(ERC721, ERC721Enumerable) {\n        super._beforeTokenTransfer(from, to, tokenId);\n    }\n\n    // The following functions are overrides required by Solidity.\n\n    function supportsInterface(bytes4 interfaceId) public view override(ERC721, ERC721Enumerable) returns (bool) {\n        return super.supportsInterface(interfaceId);\n    }\n\n}",
  "sourceMap": "903:26:16:-:0;490:8467;903:26;;;-1:-1:-1;490:8467:16;903:26;;;;;;;;:::i;:::-;-1:-1:-1;935:37:16;;;;;;;;;;;;;-1:-1:-1;;;935:37:16;;;;;;;;;;;;:::i;:::-;-1:-1:-1;1014:34:16;;;-1:-1:-1;;;;;;1101:76:16;;;;;1689:9;1662:36;;1732:506;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1441:13:3;;1982:5:16;;1989:7;;1441:13:3;;:5;;:13;;;;;:::i;:::-;-1:-1:-1;1464:17:3;;;;:7;;:17;;;;;:::i;:::-;-1:-1:-1;;981:7:1;:15;;-1:-1:-1;;981:15:1;;;-1:-1:-1;921:32:0;719:10:10;921:18:0;:32::i;:::-;1701:1:2;1806:7;:22;2008:15:16::1;:34:::0;;;2052:14:::1;:32:::0;;;2094:15:::1;:34:::0;;;2138:12:::1;:28:::0;;-1:-1:-1;;2138:28:16::1;;::::0;::::1;;::::0;;2176:18;;::::1;::::0;:7:::1;::::0;:18:::1;::::0;::::1;::::0;::::1;:::i;:::-;;2204:27;:15;:25;;;;;:27;;:::i;:::-;1732:506:::0;;;;;;;490:8467;;2270:187:0;2362:6;;;-1:-1:-1;;;;;2378:17:0;;;2362:6;2378:17;;;-1:-1:-1;;;;;;2378:17:0;;;;;;2410:40;;2362:6;;;;;;;;2410:40;;2343:16;;2410:40;2333:124;2270:187;:::o;945:123:11:-;1032:19;;1050:1;1032:19;;;945:123::o;490:8467:16:-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;490:8467:16;;;-1:-1:-1;490:8467:16;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;14:127:17;75:10;70:3;66:20;63:1;56:31;106:4;103:1;96:15;130:4;127:1;120:15;146:885;200:5;253:3;246:4;238:6;234:17;230:27;220:55;;271:1;268;261:12;220:55;294:13;;-1:-1:-1;;;;;356:10:17;;;353:36;;;369:18;;:::i;:::-;444:2;438:9;412:2;498:13;;-1:-1:-1;;494:22:17;;;518:2;490:31;486:40;474:53;;;542:18;;;562:22;;;539:46;536:72;;;588:18;;:::i;:::-;628:10;624:2;617:22;663:2;655:6;648:18;685:4;675:14;;730:3;725:2;720;712:6;708:15;704:24;701:33;698:53;;;747:1;744;737:12;698:53;769:1;760:10;;779:133;793:2;790:1;787:9;779:133;;;881:14;;;877:23;;871:30;850:14;;;846:23;;839:63;804:10;;;;779:133;;;930:2;927:1;924:9;921:80;;;989:1;984:2;979;971:6;967:15;963:24;956:35;921:80;1019:6;146:885;-1:-1:-1;;;;;;146:885:17:o;1036:1103::-;1188:6;1196;1204;1212;1220;1228;1236;1289:3;1277:9;1268:7;1264:23;1260:33;1257:53;;;1306:1;1303;1296:12;1257:53;1333:16;;-1:-1:-1;;;;;1398:14:17;;;1395:34;;;1425:1;1422;1415:12;1395:34;1448:61;1501:7;1492:6;1481:9;1477:22;1448:61;:::i;:::-;1438:71;;1555:2;1544:9;1540:18;1534:25;1518:41;;1584:2;1574:8;1571:16;1568:36;;;1600:1;1597;1590:12;1568:36;1623:63;1678:7;1667:8;1656:9;1652:24;1623:63;:::i;:::-;1613:73;;1732:2;1721:9;1717:18;1711:25;1695:41;;1761:2;1751:8;1748:16;1745:36;;;1777:1;1774;1767:12;1745:36;;1800:63;1855:7;1844:8;1833:9;1829:24;1800:63;:::i;:::-;1790:73;;;1903:2;1892:9;1888:18;1882:25;1872:35;;1947:3;1936:9;1932:19;1926:26;1916:36;;1992:3;1981:9;1977:19;1971:26;1961:36;;2040:3;2029:9;2025:19;2019:26;2085:4;2078:5;2074:16;2067:5;2064:27;2054:55;;2105:1;2102;2095:12;2054:55;2128:5;2118:15;;;1036:1103;;;;;;;;;;:::o;2144:380::-;2223:1;2219:12;;;;2266;;;2287:61;;2341:4;2333:6;2329:17;2319:27;;2287:61;2394:2;2386:6;2383:14;2363:18;2360:38;2357:161;;;2440:10;2435:3;2431:20;2428:1;2421:31;2475:4;2472:1;2465:15;2503:4;2500:1;2493:15;2357:161;;2144:380;;;:::o;:::-;490:8467:16;;;;;;",
  "sourcePath": "contracts/CryptidToken.sol",
  "type": "contract"
}